(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    742406,      16900]
NotebookOptionsPosition[    703636,      16254]
NotebookOutlinePosition[    704173,      16273]
CellTagsIndexPosition[    704130,      16270]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSize->36,
  FontSlant->"Italic"],
 StyleBox[" Tutorial 1   \n",
  FontSize->36],
 StyleBox["Your name: Bella Falbo",
  FontSize->24],
 StyleBox[" ",
  FontSize->24,
  Background->RGBColor[1, 1, 0]]
}], "Title",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.45167997376435*^9, 3.451679980077167*^9}, {
   3.568071217068539*^9, 3.568071227944565*^9}, 3.56807128871079*^9, {
   3.9152050645732584`*^9, 3.91520508669916*^9}, {3.915226091709872*^9, 
   3.915226097832337*^9}, {3.9155476709999323`*^9, 3.9155476744469633`*^9}},
 FontSize->18,ExpressionUUID->"e345cf19-41bc-43c5-a8c1-ec9ffdebf482"],

Cell[TextData[{
 StyleBox["\nFrom Introduction to Computational Science:  Modeling and \
Simulation for the Sciences\n",
  FontSlant->"Italic"],
 "Angela B. Shiflet and George W. Shiflet Wofford College,  Tutorial \
\[Copyright] 2009\nWith modifications by C. Gol\[EAcute], Smith College - \
last updated Jan 2024"
}], "Copyright",
 CellMargins->{{20.625, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455875909983447*^9, 3.455875922751424*^9}, {
  3.504811086520219*^9, 3.504811102064773*^9}, {3.504817469383189*^9, 
  3.504817470678686*^9}, {3.50482464176893*^9, 3.504824645478485*^9}, {
  3.568071231049532*^9, 3.56807125454404*^9}, {3.88407990244914*^9, 
  3.884079928851428*^9}, {3.9152049071692667`*^9, 3.91520494628634*^9}, {
  3.915226063076412*^9, 
  3.9152260640208397`*^9}},ExpressionUUID->"fe635811-19ac-4688-80be-\
379dca964580"],

Cell[TextData[{
 "This first tutorial on ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " gives an introduction to the system and prepares you to use it to complete \
projects",
 StyleBox[".",
  FontSlant->"Italic"],
 " It goes through basic functions of Mathematica, and has you practice  with \
Quick Review Questions (QRQ)",
 StyleBox[". \n\nOnce done, upload the file to the Google folder in your name",
  FontVariations->{"CompatibilityType"->0}],
 " that I shared with you, and start writing, in a  google doc named \
\[OpenCurlyDoubleQuote]Portfolio Your Name\[CloseCurlyDoubleQuote] in the \
same folder, some comments about what you learned in this tutorial, and how \
it relates to your previous experience in math or computer science. "
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.451679801777297*^9, 3.451679805335927*^9}, {
   3.451679883194187*^9, 3.451679885316721*^9}, {3.451679922733914*^9, 
   3.451679934116564*^9}, 3.451680023956*^9, {3.50482519277586*^9, 
   3.50482520160478*^9}, 3.568071277266464*^9, {3.756948657102774*^9, 
   3.75694866166556*^9}, {3.756948756782892*^9, 3.756948800139278*^9}, {
   3.756949065004282*^9, 3.7569490714304943`*^9}, {3.756987857539679*^9, 
   3.756987872231018*^9}, {3.915204971539747*^9, 3.9152050606056967`*^9}, {
   3.915205091381135*^9, 3.915205092439596*^9}, {3.915205151274523*^9, 
   3.91520535616466*^9}, 
   3.915226036580096*^9},ExpressionUUID->"620d3464-3216-42f2-aed9-\
2da9af1ba8ec"],

Cell[CellGroupData[{

Cell["1. Getting Started", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756504661646004*^9, 
  3.756504662779676*^9}},ExpressionUUID->"959411b3-9a23-4d2d-aea1-\
cfe9652e3ae0"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " is a powerful computer algebra system that can plot graphs and perform a \
large variety of calculations with symbols as well as numbers. A ",
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" notebook",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", such as this one, is like an interactive book with text and the \
capability of performing calculations and manipulations.\n\nTo open this \
notebook, you probably double-clicked the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " folder to open it and then double-clicked the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " icon to start a new notebook or double-clicked this file, ",
 StyleBox["MathematicaTutorial1.nb",
  FontSlant->"Italic"],
 ".\n\nIf you do not see a palette on the right with symbols, such as the \
square root sign, go to the ",
 StyleBox["Palettes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["menu",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " and select ",
 StyleBox["Classroom Assistant",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ".   \n\nThe material in a notebook is separated into ",
 StyleBox["cells",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", which are marked with a right square bracket.  Cells have different \
tasks, such as input, output, and text.  In the following material, evaluate \
each given expression in an input cell. To evaluate an expression, with the \
cursor anywhere in its cell press ",
 StyleBox["<ENTER> on the numeric keypad",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " (not <ENTER> or <RETURN> on the main keyboard) or ",
 StyleBox["<SHIFT>-<ENTER>",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " or click ",
 StyleBox["Enter",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " in the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " menu.",
 StyleBox["  Execute all input cells to view the results of the examples.",
  FontVariations->{"CompatibilityType"->0}],
 "  Input is labeled with ",
 StyleBox["In",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", and output is labeled with ",
 StyleBox["Out",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ".  The number in square brackets indicates the calculation order of the \
expression.  We start by evaluating 25 factorial, which is the product of the \
positive integers from 1 through 25, using the ",
 StyleBox["exclamation mark !",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " as in mathematics:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.451680044007115*^9, 3.451680056008207*^9}, {
   3.451680932445306*^9, 3.451680944374645*^9}, {3.4516818451831903`*^9, 
   3.451681883962246*^9}, {3.455378341505866*^9, 3.455378356192479*^9}, {
   3.756948822154261*^9, 3.7569488444571753`*^9}, 3.756987931995514*^9, 
   3.915542080820896*^9, {3.915542129668921*^9, 
   3.9155421446838007`*^9}},ExpressionUUID->"d2d4c0f3-a30e-4d3a-8682-\
4f1eccff40a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"25", "!"}]], "Input",ExpressionUUID->"92f1ba27-6b5d-4162-bb65-641ddded158a"],

Cell[BoxData["15511210043330985984000000"], "Output",
 CellChangeTimes->{3.915548052882617*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"d698c024-71d0-4c37-9b47-b76e18480dae"]
}, Open  ]],

Cell["\<\
The following is the first of the Quick Review Questions  (QRQ) that you will \
have to show in your completed tutorial.\
\>", "Text",
 CellChangeTimes->{{3.7569489255838337`*^9, 3.756948984122854*^9}, {
  3.756992492198668*^9, 3.7569925109063387`*^9}, {3.9155421658210583`*^9, 
  3.915542193967341*^9}},ExpressionUUID->"949aaa74-4679-4250-b11d-\
9ae2b895e9d9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Quick Review Question (QRQ) 1.1  Because  cells as this one are text cells \
and not input cells, do not type in these cells.  Instead, move the cursor \
down until it changes from being vertical to being a horizontal-I bar.  Click \
and start typing; a new input cell will form.  ",
 StyleBox["For this question, evaluate 100-factorial.",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756504668736495*^9, 3.756504668963507*^9}, {
  3.756948915219253*^9, 3.756948917487062*^9}, {3.756992516957809*^9, 
  3.75699253022845*^9}, {3.884079960250316*^9, 
  3.884079980656518*^9}},ExpressionUUID->"d0c2ebf4-ae48-4836-8997-\
a1d1e92c635f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", "!"}]], "Input",ExpressionUUID->"9f1785b4-f2bc-45da-a657-0860ed4f7241"],

Cell[BoxData[\
"93326215443944152681699238856266700490715968264381621468592963895217599993229\
915608941463976156518286253697920827223758251185210916864000000000000000000000\
000"], "Output",
 CellChangeTimes->{3.9155481025504227`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9db790c6-ca07-448d-bee0-23adc28a34f0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Save", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756504675254958*^9, 
  3.7565046760620136`*^9}},ExpressionUUID->"9548bdeb-297e-4ed0-8ff1-\
76d61e7b28e7"],

Cell[TextData[{
 "Save what you have done by going to the ",
 StyleBox["File ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["menu",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " and choosing ",
 StyleBox["Save",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "or",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["Save As...",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ".  The first time you save a new file, make sure you save the file to your \
external storage using a descriptive name. You can also use ",
 StyleBox["Save to cloud",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " if you plan to toggle between computers, and share a document with a team. \
",
 "\n\nAfter you have saved initially, you can just go to the ",
 StyleBox["File",
  FontSlant->"Italic"],
 " menu and select ",
 StyleBox["Save",
  FontSlant->"Italic"],
 " or use the short cut indicated under that menu.  ",
 StyleBox["SAVE OFTEN",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", particularly before you print, do a long calculation, or display a \
graph."
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455009608398354*^9, 3.45500961141819*^9}, 
   3.884080037126731*^9, {3.915542257479621*^9, 
   3.915542372862712*^9}},ExpressionUUID->"86de5e87-dcab-4a29-8929-\
6141c3683e84"],

Cell[TextData[{
 "QRQ 2.1",
 StyleBox[" ",
  FontWeight->"Plain"],
 "Save this notebook on your disk.  How did you accomplish this task? ",
 StyleBox["File, save. ",
  FontWeight->"Bold"],
 "\n(If you have access to Wolfram Cloud, you can use \
\[OpenCurlyDoubleQuote]File/Save to cloud\[CloseCurlyDoubleQuote] to use the \
file in another machine)"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.7565046792056704`*^9, 3.756504679401543*^9}, 
   3.756949027231983*^9, {3.884080066343304*^9, 3.884080142796585*^9}, {
   3.915548201633445*^9, 
   3.915548208500472*^9}},ExpressionUUID->"78386f60-7bd5-4555-80b7-\
73df6fdfe096"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Additional Features", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756504685896415*^9, 
  3.756504686725578*^9}},ExpressionUUID->"71a58b0c-677e-4fb3-a46d-\
1d846e5ca834"],

Cell[TextData[{
 "We can select text from a cell and ",
 StyleBox["cut",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", ",
 StyleBox["copy",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", or ",
 StyleBox["paste",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " it using items from the ",
 StyleBox["Edit ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["menu",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " or the short cuts indicated on that menu.  We can also select a cell by \
clicking on the bracket on the right of the screen; we can then cut, copy, or \
paste the cell."
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"28d84f78-3fc7-4865-94a7-f193a2ac53d7"],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 3.1",
 StyleBox[" ",
  FontWeight->"Plain"],
 "Select this cell and move it above the preceding cell and back."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.7565046914316072`*^9, 3.756504691642417*^9}, 
   3.756949027813524*^9, {3.756949081066204*^9, 3.756949081771905*^9}, {
   3.757013573921967*^9, 
   3.757013575946664*^9}},ExpressionUUID->"85cd3755-0009-4c10-a8c4-\
e4755b94c802"],

Cell[TextData[{
 "To type text before starting a cell, choose the style ",
 StyleBox["Text",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " or another heading or section style from ",
 StyleBox["Style",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " in the ",
 StyleBox["Format ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["menu",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " or from the top left of the notebook.  Note the keyboard shortcut in the \
menu (Command-7 for Apple, Ctrl-7 for Windows). A cell in ",
 StyleBox["Text",
  FontSlant->"Italic"],
 " style is for documentation and does not execute.  If you have already \
started typing and wish to change the style, click the cell bracket and \
choose the style.  The default type is ",
 StyleBox["Input",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ". "
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455009940366528*^9, 3.455009984764737*^9}, {
  3.455010039430088*^9, 3.455010083960783*^9}, {3.8840802661532784`*^9, 
  3.884080295956984*^9}, {3.915542497972355*^9, 
  3.915542512181149*^9}},ExpressionUUID->"9e1bfe99-cb33-4c41-954b-\
0296c180d6aa"],

Cell[TextData[{
 "QRQ 3.2",
 StyleBox[" ",
  FontWeight->"Plain"],
 "Change the style of this cell to text style."
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756504694724647*^9, 3.756504698356623*^9}, 
   3.756949028365039*^9, {3.7569490842670603`*^9, 3.7569490849701767`*^9}, {
   3.915548316337862*^9, 
   3.9155483198555*^9}},ExpressionUUID->"56d2cc9e-ac71-4a78-96fd-\
2bfb45785348"],

Cell[TextData[{
 StyleBox["Other useful advice",
  FontWeight->"Bold"],
 "\n- If you are in one cell, to start another cell, move the mouse down \
until you get a ",
 StyleBox["horizontal I-bar",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " and click.\n- To quit ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", choose ",
 StyleBox["Quit",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " from the ",
 StyleBox["File",
  FontSlant->"Italic"],
 " menu or use the indicated short cut.\n- If a computation is stuck for any \
reason (it ",
 StyleBox["will ",
  FontSlant->"Italic"],
 "happen) try Command-. (that\[CloseCurlyQuote]s a period) in a IOS, Ctrl-. \
in Windows. If this does not work, go to the menu Evaluation/Quit \
Kernel/Local.\n- ",
 "If you quit and re-open a notebook later, you must re-execute any function \
definition or variable assignment to use it again. "
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.915542579375957*^9, 3.915542621361821*^9}, {
  3.915542654369862*^9, 3.9155426617268343`*^9}, {3.915542769222913*^9, 
  3.915542772697843*^9}, {3.91554283458397*^9, 3.915543051105195*^9}, {
  3.915543088877802*^9, 
  3.915543121131927*^9}},ExpressionUUID->"f1390528-96f2-4025-8179-\
5561bd64e601"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "4. Wolfram Alpha is within ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Section",
 CellChangeTimes->{{3.756503637857236*^9, 3.756503642077601*^9}, {
   3.756504139571413*^9, 3.756504144718973*^9}, {3.756504972422633*^9, 
   3.756504973786268*^9}, {3.756507499050151*^9, 3.756507509259738*^9}, {
   3.75701380253306*^9, 3.7570138044515142`*^9}, 3.757013838426827*^9, 
   3.757013913429055*^9},ExpressionUUID->"7170969d-2ca7-452b-9cb3-\
2eb41de10a37"],

Cell[TextData[{
 "You may have used Wolfram Alpha, the online calculator, when studying \
Calculus, or other math subjects. Stephen Wolfram is the inventor of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and Wolfram Alpha is an online service whose engine is ",
 StyleBox["Mathematica, ",
  FontSlant->"Italic"],
 "working on a bank of servers somewhere. You can use Wolfram Alpha right off \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " by starting your command by an equal sign. The advantage is that, for the \
most part,  Wolfram alpha is not a syntax snob. So you can write  in plain \
English. Mathematica connects to the web, Wolfram Alpha decodes your query, \
translates it into a Mathematica command and executes it. ",
 StyleBox["In the process you can learn and copy the Mathematica command. ",
  FontSlant->"Italic"],
 "Start with an = sign a Wolfram Alpha query:"
}], "Text",
 CellChangeTimes->{{3.756503651875907*^9, 3.756503739538446*^9}, {
   3.756503786356064*^9, 3.7565039535350733`*^9}, {3.756504005523748*^9, 
   3.7565041138469553`*^9}, {3.7565043632146053`*^9, 3.756504398137709*^9}, 
   3.757014241205573*^9, 3.8840803417429056`*^9, {3.884080388241377*^9, 
   3.884080437793412*^9}, {3.915543146478183*^9, 3.915543147164616*^9}, {
   3.915543180352622*^9, 
   3.9155431848852386`*^9}},ExpressionUUID->"1ee69a73-b818-4017-9a15-\
39d5c7d293a9"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Integrate  the  function  exp (x) sin (2 x)", Typeset`newq$$ = 
   "Integrate  the  function  exp (x) sin (2 x)", Typeset`chosen$$ = 
   "Integrate[Exp[x]*Sin[2*x], x]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Integrate  the  function  exp (x) sin (2 x)", 
                  Defer[
                   Integrate[
                   Exp[$CellContext`x] 
                    Sin[2 $CellContext`x], $CellContext`x]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", "x", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "x"}], "]"}]}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", "x", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "x"}], "]"}]}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", "x", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "x"}], "]"}]}], ",", " ", "x"}], "]"}]],
                    "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Integrate  the  function  exp (x) sin (2 x)", 
                    Defer[
                    Integrate[
                    Exp[$CellContext`x] 
                    Sin[2 $CellContext`x], $CellContext`x]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", "x", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "x"}], "]"}]}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", "x", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "x"}], "]"}]}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", "x", "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "*", "x"}], "]"}]}], ",", " ", "x"}], "]"}]],
                     "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[3]:=",ExpressionUUID->"46a989cb-b011-4cc9-9134-0e5ab996f959"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "5"], " ", 
  SuperscriptBox["\[ExponentialE]", "x"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9155486069016533`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"e06da399-83f1-469c-a135-f7eef9c23910"]
}, Open  ]],

Cell["Wolfram Alpha also has access to many data bases:", "Text",
 CellChangeTimes->{{3.756504155930334*^9, 
  3.75650417961911*^9}},ExpressionUUID->"80c067c6-75bb-4100-9870-\
360747ac3234"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   " Compare the GDP per capita of Italy and the UK", Typeset`newq$$ = 
   " Compare the GDP per capita of Italy and the UK", Typeset`chosen$$ = 
   "{Entity[\"Country\", \"Italy\"][EntityProperty[\"Country\", \"GDP\", \
{\"CurrencyUnit\" -> \"CurrentUSDollar\", \"PerCapita\" -> \"PerCapita\"}]], \
Entity[\"Country\", \"UnitedKingdom\"][EntityProperty[\"Country\", \"GDP\", {\
\"CurrencyUnit\" -> \"CurrentUSDollar\", \"PerCapita\" -> \"PerCapita\"}]]}", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 " Compare the GDP per capita of Italy and the UK", 
                  Defer[{
                    Entity["Country", "Italy"][
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}]], 
                    Entity["Country", "UnitedKingdom"][
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}]]}], "Fast parse"]; Typeset`open$$ = False]),
             
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    TemplateBox[{"\"Italy\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{EntityFramework`Formatting`Private`open 
                    = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}], ",", " ", 
                   RowBox[{
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}]}], "}"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    TemplateBox[{"\"Italy\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}], ",", " ", 
                   RowBox[{
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}]}], "}"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Italy\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}], SelectWithContents -> True], "]"}], ",", 
                    " ", 
                    RowBox[{
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}], SelectWithContents -> True], "]"}]}], 
                    "}"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    " Compare the GDP per capita of Italy and the UK", 
                    Defer[{
                    Entity["Country", "Italy"][
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}]], 
                    Entity["Country", "UnitedKingdom"][
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}]]}], "Fast parse"]; Typeset`open$$ = False]),
                 
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Italy\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}], ",", " ", 
                    RowBox[{
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}]}], "}"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Italy\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}], ",", " ", 
                    RowBox[{
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}],
                    SelectWithContents->True], "]"}]}], "}"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"Italy\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}], SelectWithContents -> True], "]"}], ",", 
                    " ", 
                    RowBox[{
                    TemplateBox[{"\"United Kingdom\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}, {
                    TemplateBox[{
                    RowBox[{" ", "\"PerCapita\""}], "\":\"", 
                    "\"per capita\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\", \\\"PerCapita\\\" -> \
\\\"PerCapita\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\"", "\"per capita\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "GDP", {
                    "CurrencyUnit" -> "CurrentUSDollar", "PerCapita" -> 
                    "PerCapita"}], SelectWithContents -> True], "]"}]}], 
                    "}"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[4]:=",ExpressionUUID->"8ff71ef0-96d1-49f5-b909-46285c0ca0b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"34157.990122464`", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}], 
     "US dollars per person year", 
     FractionBox["\"USDollars\"", 
      RowBox[{"\"People\"", " ", "\"Years\""}]]},
    "QuantityPrefixUnit"], ",", 
   TemplateBox[{"45850.4261222629`", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
     RowBox[{
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}], 
     "US dollars per person year", 
     FractionBox["\"USDollars\"", 
      RowBox[{"\"People\"", " ", "\"Years\""}]]},
    "QuantityPrefixUnit"]}], "}"}]], "Output",
 CellChangeTimes->{3.915548643756357*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5e18a1c3-31ea-4d6f-9619-353f44355aa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 4.1  a. Write a Wolfram Alpha query to find the derivative of \
exp(x)sin(ax) , and then use the output to write a ",
 StyleBox["Mathematica  ",
  FontSlant->"Italic"],
 "command to differentiate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["t", "2"], "+", 
    RowBox[{"3", "t"}]}], TraditionalForm]],ExpressionUUID->
  "90697a46-a6c7-469b-bfec-e784a0bd9c1c"],
 " + 5\nb. Use Wolfram Alpha to find some information about a topic of \
interest to you. "
}], "Subsection",
 CellChangeTimes->{{3.75650455243994*^9, 3.75650455244189*^9}, {
   3.756504598324612*^9, 3.756504639545272*^9}, {3.756504980999713*^9, 
   3.7565051239152803`*^9}, {3.756505190878986*^9, 3.756505227754014*^9}, {
   3.756505282301816*^9, 3.756505283720545*^9}, 3.756949034742503*^9, {
   3.756949283595985*^9, 3.756949316660343*^9}, 3.757013916835997*^9, 
   3.757014281555228*^9, {3.757014480844095*^9, 3.757014519263508*^9}, {
   3.757014571655941*^9, 3.75701466600591*^9}, {3.915543219028861*^9, 
   3.9155432194459553`*^9}},ExpressionUUID->"7c2ac41b-0d73-42bb-b761-\
bb8b96e2b87a"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "find the derivative of exp(x)sin(ax)", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "D[E^x*Sin[a*x], {{a, x}}]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {"Input__Step-by-step solution", "Input__Hide steps"}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Exp[x] Sin[a x], x]"}], 
       XMLElement["moutput", {}, {"E^x (a Cos[a x] + Sin[a x])"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                TagBox[
                 FractionBox["\[PartialD]", 
                  RowBox[{"\"\[PartialD]\"", "\[InvisibleSpace]", "x"}]], 
                 $CellContext`TagBoxWrapper[
                 "StringBoxes" -> RowBox[{"d/d", "\[InvisibleSpace]", "x"}]]],
                 "\[InvisibleSpace]", 
                RowBox[{"(", 
                  TagBox[
                   RowBox[{
                    RowBox[{"exp", "(", "x", ")"}], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"a", " ", "x"}], ")"}]}], HoldForm], ")"}]}], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 SuperscriptBox["\[ExponentialE]", "x"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"sin", "(", 
                    RowBox[{"a", " ", "x"}], ")"}], "+", 
                    RowBox[{"a", " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"a", " ", "x"}], ")"}]}]}], ")"}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Derivative", "id" -> 
     "ExpandedForm", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[E^x (a Cos[a x] + Sin[a x])]"}], 
       XMLElement["moutput", {}, {"a E^x Cos[a x] + E^x Sin[a x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SuperscriptBox["\[ExponentialE]", "x"], " ", 
                 RowBox[{"sin", "(", 
                   RowBox[{"a", " ", "x"}], ")"}]}], "+", 
               RowBox[{"a", " ", 
                 SuperscriptBox["\[ExponentialE]", "x"], " ", 
                 RowBox[{"cos", "(", 
                   RowBox[{"a", " ", "x"}], ")"}]}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Derivative", "id" -> 
     "AlternateForm", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"TrigToExp[E^x (a Cos[a x] + Sin[a x])]"}], 
       XMLElement[
       "moutput", {}, {
        "I/2 E^(x - I a x) + (a E^(x - I a x))/2 - I/2 E^(x + I a x) + (a \
E^(x + I a x))/2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 FractionBox["1", "2"], " ", "a", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "a", " ", "x"}]}]]}], "+", 
               RowBox[{
                 FractionBox["1", "2"], " ", "a", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "a", " ", "x"}]}]]}], "+", 
               RowBox[{
                 FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "a", " ", "x"}]}]]}], "-", 
               RowBox[{
                 FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "a", " ", "x"}]}]]}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "D", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.057", "parsetiming" -> "0.343", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP443113c13i5e868gai1900002365g7hi3674g625", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa443213c13i5e868gai1900000h0gea8cdac62fe63172133347439184749", "version" -> 
    "2.6", "inputstring" -> "find the derivative of exp(x)sin(ax)"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2024, 1, 29, 15, 36, 33.030814`8.271494256585981}, "Line" -> 
    15, "SessionID" -> 16912425948300495558}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "D[E^x*Sin[a*x], {{a, x}}]"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "find the derivative of exp(x)sin(ax)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1120., {301., 41.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"077fd802-cbb2-4e4e-a4fe-c1de80609baa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], " ", "x", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", "x"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", " ", "x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "x"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9155486675939503`*^9, 3.91554924049116*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"6eef7e9d-87d7-440c-90a1-ed0a8cdd163f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "differentiate t^2 + 3 t + 5 ", 
   Typeset`newq$$ = "differentiate t^2 + 3 t + 5 ", Typeset`chosen$$ = 
   "D[t^2 + 3*t + 5, t]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "differentiate t^2 + 3 t + 5 ", 
                  Defer[
                   
                   D[$CellContext`t^2 + 3 $CellContext`t + 
                    5, $CellContext`t]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"t", "^", "2"}], " ", "+", " ", 
                    RowBox[{"3", "*", "t"}], " ", "+", " ", "5"}], ",", " ", 
                   "t"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"t", "^", "2"}], " ", "+", " ", 
                    RowBox[{"3", "*", "t"}], " ", "+", " ", "5"}], ",", " ", 
                   "t"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "^", "2"}], " ", "+", " ", 
                    RowBox[{"3", "*", "t"}], " ", "+", " ", "5"}], ",", " ", 
                    "t"}], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "differentiate t^2 + 3 t + 5 ", 
                    Defer[
                    
                    D[$CellContext`t^2 + 3 $CellContext`t + 
                    5, $CellContext`t]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "^", "2"}], " ", "+", " ", 
                    RowBox[{"3", "*", "t"}], " ", "+", " ", "5"}], ",", " ", 
                    "t"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "^", "2"}], " ", "+", " ", 
                    RowBox[{"3", "*", "t"}], " ", "+", " ", "5"}], ",", " ", 
                    "t"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "^", "2"}], " ", "+", " ", 
                    RowBox[{"3", "*", "t"}], " ", "+", " ", "5"}], ",", " ", 
                    "t"}], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[19]:=",ExpressionUUID->"bc7ff2d9-a083-4a57-b3ef-ff3b79ff1308"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"2", " ", "t"}]}]], "Output",
 CellChangeTimes->{3.91554998926542*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"7b7d5365-400d-4b40-a287-fd1ba104e98e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. Numbers and Arithmetic Operations", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756504704699616*^9, 3.756504705578346*^9}, 
   3.757013838179878*^9},
 AspectRatioFixed->
  False,ExpressionUUID->"97c4b78f-340a-4a90-be5a-7ef7b2060e34"],

Cell[TextData[{
 "Multiplication is indicated by an ",
 StyleBox["asterisk",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["(",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["*",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[")",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", a space, or nothing when the expression is not ambiguous. An expression \
can be raised to a power using the power template ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["\[Placeholder]",
     Background->RGBColor[1, 1, 0]], 
    StyleBox["\[Placeholder]",
     Background->RGBColor[1, 1, 0]]], TraditionalForm]],ExpressionUUID->
  "87afa759-a7df-4129-92e3-673ca5af6e0d"],
 " on the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " palette or using a ",
 StyleBox["caret",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["(^",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.451682839097894*^9, 3.451682844824086*^9}, {
   3.455378389788725*^9, 3.455378399742858*^9}, 3.455378444612903*^9},
 AspectRatioFixed->
  False,ExpressionUUID->"0f439f1c-becf-436c-980c-a5cc2ef842f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["5", "8"], "-", " ", 
     FractionBox["5", "4"]}], ")"}], "2"]}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.915549004026366*^9, 3.915549035350306*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"3750f4ea-b2ad-43fe-8c9d-28dd6bdb432e"],

Cell[BoxData[
 FractionBox["75", "64"]], "Output",
 CellChangeTimes->{3.915549068470942*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ebce2f9a-4be2-4def-9e92-3c6a3d8607e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", 
  StyleBox[" ",
   Background->RGBColor[1, 1, 0]], 
  StyleBox["*",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["5", "8"], "-", " ", 
     FractionBox["5", 
      RowBox[{"4", "\[IndentingNewLine]"}]]}], ")"}], " ", 
   StyleBox["^",
    Background->RGBColor[1, 1, 0]], " ", "2"}]}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.915549042928602*^9, 3.915549063106357*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"92cd7fd4-b620-4cea-8afd-92fdda4aaa8a"],

Cell[BoxData[
 FractionBox["75", "64"]], "Output",
 CellChangeTimes->{3.915549066228097*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"dbd428ff-d82d-4689-9781-c13ea8d5f944"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 5.1",
 StyleBox[" ",
  FontWeight->"Plain"],
 "Add the fractions (not decimal numbers) one-half and three-fourths.  Use \
the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " palette to have each fraction in stack notation (e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "4"], ")"}], TraditionalForm]],ExpressionUUID->
  "c6b3135d-aa7a-412f-9799-2b9f3c9f0917"],
 ".  Tab to move from one part of the expression to the next.  Hovering over \
the command button in the palette, ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "gives you the corresponding keyboard command.",
 StyleBox[" ",
  FontSlant->"Italic"],
 "When possible, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not return a decimal expansion but an exact answer, such as with this \
fractional answer."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.451682860475637*^9, 3.4516828649770393`*^9}, {
   3.4516830039108143`*^9, 3.451683039313105*^9}, {3.504811248841864*^9, 
   3.504811314516397*^9}, {3.756504711479995*^9, 3.756504712134756*^9}, 
   3.756949028907139*^9, 3.757013838199057*^9, {3.757014679734892*^9, 
   3.757014680894925*^9}, {3.757014828338212*^9, 
   3.757014896324759*^9}},ExpressionUUID->"e9d3d776-5756-441d-9576-\
f564d34dad20"],

Cell[TextData[{
 StyleBox["Each built-in function, such as ",
  FontWeight->"Bold"],
 StyleBox["Sin",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" for the sine function, or built-in constant, such as ",
  FontWeight->"Bold"],
 StyleBox["Pi",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" representing \[Pi], begins with a capital letter.  Functions use \
square brackets instead of parentheses around the argument(s)",
  FontWeight->"Bold"],
 ", as in the following expression to compute 5sin(\[Pi]/3):    "
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.455010206222335*^9, 3.455010245274701*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"7dfde6a4-d862-41b6-bdcf-d274ee692888"],

Cell[CellGroupData[{

Cell[TextData[{
 "5 ",
 StyleBox["Sin[\[Pi]",
  Background->RGBColor[1, 1, 0]],
 "/3",
 StyleBox["]",
  Background->RGBColor[1, 1, 0]]
}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.915549090712908*^9, 3.915549106463489*^9}},
 AspectRatioFixed->False,
 CellLabel->"In[10]:=",ExpressionUUID->"19fd1a2a-76a1-4aa6-bb4e-c0f805eb8413"],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", 
   SqrtBox["3"]}], "2"]], "Output",
 CellChangeTimes->{{3.915549092566736*^9, 3.915549108613339*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"4acf7cad-cbdb-4082-ada3-e0b441a2c7e5"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "QRQ 5.2",
 StyleBox["  ",
  FontWeight->"Plain"],
 "We do not need to type * for multiplication in the previous expression.  \
Also, we can use the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " palette to learn how to write ",
 StyleBox["Pi",
  FontSlant->"Italic"],
 " as ",
 StyleBox["\[Pi]",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " and a fraction with stack notation, such as  ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "3"], TraditionalForm]],ExpressionUUID->
  "94ffe21d-74ba-4365-9a63-bcd1df149675"],
 ".  Retype the expression making these changes."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.45168290014172*^9, 3.451682916591622*^9}, 
   3.451682954078136*^9, {3.7565047182500777`*^9, 3.756504719134982*^9}, 
   3.7569490294719*^9, 3.757013838219288*^9, {3.757014785185048*^9, 
   3.757014792054756*^9}, {3.883667877857549*^9, 3.883667962028273*^9}, {
   3.915543432636983*^9, 
   3.9155434411147013`*^9}},ExpressionUUID->"d5990816-dbd9-46fd-8167-\
82d0f01aaff4"],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 5.3",
 StyleBox["  ",
  FontWeight->"Plain"],
 StyleBox["Log",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["[",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " is the natural logarithm of ",
 StyleBox["x, ",
  FontSlant->"Italic"],
 "aka",
 StyleBox[" ln(x)",
  FontSlant->"Italic"],
 ".  Evaluate the natural logarithm of 23.4 by typing the command with and \
without the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 ".  Using the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 ", we click ",
 StyleBox["Calculator",
  FontSlant->"Italic"],
 "'s ",
 StyleBox["Advanced",
  FontSlant->"Italic"],
 " tab and click ",
 StyleBox["Log",
  FontSlant->"Italic"],
 " or locate the function under ",
 StyleBox["Basic Commands",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Elementary Functions",
  FontSlant->"Italic"],
 "."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.451683137395756*^9, 3.451683241429058*^9}, {
   3.455010337079175*^9, 3.4550103973935738`*^9}, {3.455010429738978*^9, 
   3.455010438525147*^9}, {3.455378543187069*^9, 3.4553785740766563`*^9}, {
   3.756504722221508*^9, 3.756504722712297*^9}, 3.756949030038045*^9, 
   3.757013838239213*^9, {3.883667982217673*^9, 3.883667999418663*^9}, {
   3.884080589271927*^9, 3.884080592013347*^9}, {3.915543444151521*^9, 
   3.91554344483996*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"d0b8d449-fc68-436c-816e-1c020b0f17eb"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "ln(23.4)", Typeset`newq$$ = "ln(23.4)", 
   Typeset`chosen$$ = "Log[23.4]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{22., {4., 18.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["ln(23.4)", 
                  Defer[
                   Log[23.4]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Log", "[", "23.4", "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Log", "[", "23.4", "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Log", "[", "23.4", "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "ln(23.4)", 
                    Defer[
                    Log[23.4]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Log", "[", "23.4", "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Log", "[", "23.4", "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Log", "[", "23.4", "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[24]:=",ExpressionUUID->"3ace3aea-a445-4d38-ad91-cbc3cc10ab56"],

Cell[BoxData["3.152736022363656`"], "Output",
 CellChangeTimes->{3.915550160064232*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"12a6b2ba-2a16-403e-9aa6-f095ca9f7d77"]
}, Open  ]],

Cell[TextData[{
 "We can obtain a decimal expansion of the number using ",
 StyleBox["N",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " in one of the two following ways."
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 AspectRatioFixed->
  False,ExpressionUUID->"6c8a6916-8aea-4dc8-b819-f7f019f32d7b"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["N[",
  Background->RGBColor[1, 1, 0]],
 "3\[Pi] + 5",
 StyleBox["]",
  Background->RGBColor[1, 1, 0]]
}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 AspectRatioFixed->False,
 CellLabel->"In[20]:=",ExpressionUUID->"fee5b2bb-e08b-44fa-91a1-cfc014c40d0e"],

Cell[BoxData["14.42477796076938`"], "Output",
 CellChangeTimes->{3.915550098244899*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"114bf58a-af35-4631-8db3-909553952fbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3\[Pi] + 5 ",
 StyleBox["//N",
  Background->RGBColor[1, 1, 0]]
}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 AspectRatioFixed->False,
 CellLabel->"In[21]:=",ExpressionUUID->"2edcf8df-1f4b-442d-a42e-bb976b79287e"],

Cell[BoxData["14.42477796076938`"], "Output",
 CellChangeTimes->{3.9155501013563633`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"7aaed252-b67e-43ef-94f4-5862d3c08eec"]
}, Open  ]],

Cell["\<\
Sometimes we want to prescribe the number of digits the command displays. \
Here is how to do display 1000\[LineSeparator] digits:\
\>", "Text",
 CellMargins->{{19.333333333333332`, 10.}, {7., 7.}},
 CellChangeTimes->{{3.504814212627739*^9, 3.504814275179401*^9}, {
   3.504814330050479*^9, 3.50481434562893*^9}, {3.504814450641334*^9, 
   3.504814452230701*^9}, 
   3.504814484928371*^9},ExpressionUUID->"cbc0fdc0-ae90-45b9-8059-\
8b797efbc85d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["N",
   Background->RGBColor[1, 1, 0]], 
  StyleBox["[",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{
    RowBox[{"3", "\[Pi]"}], " ", "+", " ", "5"}], ",", " ", "10"}], 
  StyleBox["]",
   Background->RGBColor[1, 1, 0]]}]], "Input",
 CellChangeTimes->{{3.50481428163278*^9, 3.504814320607561*^9}, {
   3.504814350688195*^9, 3.504814353807001*^9}, {3.5048144432840776`*^9, 
   3.504814443766385*^9}, 3.5048144784485083`*^9, {3.883668083386674*^9, 
   3.883668085699121*^9}, {3.915550123336549*^9, 3.9155501235003643`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"2d34f628-0f1f-4cad-945a-2a949966142e"],

Cell[BoxData["14.4247779607693797154`10."], "Output",
 CellChangeTimes->{{3.915550119346292*^9, 3.915550124105143*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"0ac1cb8a-d6e3-43b0-ba0b-d163299dbdd2"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "QRQ 5.4",
 StyleBox["  ",
  FontWeight->"Plain"],
 "Euler's number, \[ExponentialE], is ",
 StyleBox["E",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["E", "x"],
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->RGBColor[1, 1, 0]], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0],ExpressionUUID->
  "860fd15f-ebc9-4685-9177-ab10e0ab02ba"],
 " and ",
 StyleBox["Exp",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["[",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " are the same and represent ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["e",
     FontSlant->"Italic"], 
    StyleBox["x",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "37e16588-5c18-45bd-8461-5f4ed7792c64"],
 ".  Evaluate the number ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["e",
     FontSlant->"Italic"], "2"], TraditionalForm]],ExpressionUUID->
  "25d288f4-3289-4fc8-ab7f-db253a0e64ec"],
 " with 10 digits.  (In the Palette ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " ",
 StyleBox["Calculator",
  FontSlant->"Italic"],
 ", we find ",
 StyleBox["N",
  FontSlant->"Italic"],
 " under ",
 StyleBox["Basic",
  FontSlant->"Italic"],
 " or ",
 StyleBox["Advanced",
  FontSlant->"Italic"],
 " and  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    TagBox[
     FrameBox["expr"],
     "Placeholder"]], TraditionalForm]],ExpressionUUID->
  "4495028f-52cd-40b4-a9e6-ab7f0e5487b0"],
 " under ",
 StyleBox["Advanced",
  FontSlant->"Italic"],
 ".)"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{
  3.45168327716406*^9, {3.451683342753459*^9, 3.451683437827881*^9}, {
   3.4550106309724493`*^9, 3.4550106415134172`*^9}, {3.455010674949615*^9, 
   3.4550107213934717`*^9}, {3.455010752802731*^9, 3.455010761297524*^9}, {
   3.455378635903671*^9, 3.4553786383419337`*^9}, {3.568071147080246*^9, 
   3.568071150478052*^9}, {3.756504728868943*^9, 3.756504729340637*^9}, 
   3.756949030626603*^9, 3.757013838259021*^9, {3.915120718595063*^9, 
   3.915120756279557*^9}, {3.915543520011734*^9, 3.915543521944278*^9}, {
   3.915543609899714*^9, 3.915543613465972*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"b6bb51af-0fcb-48e3-98da-dc925a60db49"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.Variables and Assignments", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756504742076927*^9, 3.756504742463923*^9}, 
   3.757013924061239*^9},ExpressionUUID->"389e5465-a0a3-4181-817c-\
f496ffdf9cd9"],

Cell[TextData[{
 "We can employ ",
 StyleBox["variables",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " to store values for future use.  We use the same rules for naming \
variables as we do for other symbols, such as user-defined function names, as \
follows:\n   1.  Symbols must begin with a letter of the alphabet.\n   2.  \
Any combination of letters and digits or nothing at all can follow.  The name \
can also contain dollar signs ($), although we avoid such a practice.\n   3.  \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive, regarding uppercase and lowercase letters as different. \
 Therefore, the variable names ",
 StyleBox["Exp, exp, ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["EXP ",
  FontSlant->"Italic"],
 "are three separate symbols in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".\n\nTo avoid using the same name as a built in ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "symbol, we begin user-defined names with a lowercase letter.  \n\nWe can ",
 StyleBox["assign",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " a value of an expression to a variable using the following format with the \
variable receiving the value always appearing on the left of an ",
 StyleBox["equal sign",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " (",
 StyleBox["=",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 "):\n",
 StyleBox["\t",
  FontWeight->"Bold"],
 StyleBox["variable",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" = ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["expression",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["\n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "For example, the following assignment statement gives the value 5 to the \
variable ",
 StyleBox["var:",
  FontSlant->"Italic"]
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.883668192951356*^9},ExpressionUUID->"4fc54abc-1353-4b03-bae3-\
7dd075f0731b"],

Cell[BoxData[
 StyleBox[
  RowBox[{"var", 
   StyleBox[" ",
    Background->RGBColor[1, 1, 0]], 
   StyleBox["=",
    Background->RGBColor[1, 1, 0]], " ", "5"}],
  FontFamily->"Courier"]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.883677320910094*^9, 
  3.883677321374539*^9}},ExpressionUUID->"94edab48-74d3-4404-824c-\
86c5dba4f2d8"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " calculates the value of the expression on the right, such as 5, and then \
assigns the value to the variable on the left, such as ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If we subsequently use ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " replaces ",
 StyleBox["var",
  FontSlant->"Italic"],
 " with its value. \n",
 StyleBox["Tip: ",
  FontWeight->"Bold"],
 "if a variable has not yet been assigned a value, it appears in ",
 StyleBox["blue",
  FontColor->RGBColor[0, 0, 1]],
 ". Once it has a value, it appears in black. This is a good way to detect \
typo. For instance, execute the following:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.8836773370930843`*^9, 3.883677453387297*^9}, {
  3.8836775161929913`*^9, 
  3.883677571622292*^9}},ExpressionUUID->"e7fe3819-67ae-4daa-8cc0-\
a7bf895f17b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", " ", "=", " ", "3"}], "\[IndentingNewLine]", 
 RowBox[{"c", " ", "=", " ", "4"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"b", " ", "c", " "}]}]}], "Input",
 CellChangeTimes->{{3.883677465147108*^9, 3.883677508510404*^9}, {
  3.915550402700482*^9, 3.9155504318980618`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"714d5599-c40b-438b-8876-a2dad00bcb23"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.915550392086604*^9, 3.9155504326390333`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"e1877648-8b58-4e51-9633-e8761b2aa3e7"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.915550392086604*^9, 3.915550432640482*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"282692c8-3f9b-40b8-9624-bc37ee1a4e4c"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{{3.915550392086604*^9, 3.9155504326419163`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"d33e4c6e-08e7-4f5d-95bd-a9adb417816f"]
}, Open  ]],

Cell["\<\
you might have expected 12 as a result. But I did not leave space between b \
and c, so Mathematica thought I was inventing a new variable called bc.\
\>", "Text",
 CellChangeTimes->{{3.883677590974821*^9, 3.883677591862982*^9}, {
  3.883677661055451*^9, 3.883677703527533*^9}, {3.883677738736064*^9, 
  3.8836777593218822`*^9}},ExpressionUUID->"63ceac14-e8da-47a7-94b2-\
378fbbd8cbd2"],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 6.1",
 StyleBox["\t\n",
  FontWeight->"Plain"],
 "a.  Assign the value 5.8 to the variable ",
 StyleBox["time",
  FontSlant->"Italic"],
 " and execute the statement "
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756504749194439*^9, 3.756504750030548*^9}, 
   3.75694903120022*^9, 3.757013838277906*^9, {3.757013928171794*^9, 
   3.757013928789132*^9}, 3.883668233601019*^9, {3.915120811701229*^9, 
   3.9151208134478683`*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"09b59150-2482-408b-ac01-9b546a38aada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"time", " ", "=", " ", "5.8"}]], "Input",
 CellChangeTimes->{{3.9155504487032967`*^9, 3.915550452005118*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"1ec8530d-f8bb-4434-aff0-bd97176054cb"],

Cell[BoxData["5.8`"], "Output",
 CellChangeTimes->{3.915550452947557*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"06b0f3d2-f771-4de6-9273-6e49762dbc78"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b.  Type ",
 StyleBox["time",
  FontSlant->"Italic"],
 " and execute.  "
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 AspectRatioFixed->
  False,ExpressionUUID->"f1841d10-5439-48db-877d-e7b196dbb3f2"],

Cell[CellGroupData[{

Cell[BoxData["time"], "Input",
 CellChangeTimes->{{3.915550459835978*^9, 3.915550460589291*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"81a455cd-da32-4e31-ae6d-7c96c48cc26a"],

Cell[BoxData["5.8`"], "Output",
 CellChangeTimes->{3.915550462040429*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"b97ed770-1e7f-47fc-bdff-7603d6cd113b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "c.  Type ",
 StyleBox["time",
  FontSlant->"Italic"],
 " + 3 and execute."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 AspectRatioFixed->
  False,ExpressionUUID->"dc4b0f40-f127-4bc9-969b-eb27a4afff9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"time", "+", "3"}]], "Input",
 CellChangeTimes->{{3.9155504664084253`*^9, 3.915550467850136*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"954a7c13-240d-4def-92eb-1a03ee53eacc"],

Cell[BoxData["8.8`"], "Output",
 CellChangeTimes->{3.915550468450185*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"5b414952-e777-4be7-9ba9-19acb73eab5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "d.  Type ",
 StyleBox["time",
  FontSlant->"Italic"],
 " and execute.  Note that execution of Part c did not change the value of ",
 StyleBox["time",
  FontSlant->"Italic"],
 "."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{3.884080787454174*^9},
 AspectRatioFixed->
  False,ExpressionUUID->"c0957f77-a186-40f0-ba8e-ff3f74230945"],

Cell[CellGroupData[{

Cell[BoxData["time"], "Input",
 CellChangeTimes->{{3.915550475723534*^9, 3.915550476403883*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"92076e0f-6329-49f0-89fe-1200ae0f42b0"],

Cell[BoxData["5.8`"], "Output",
 CellChangeTimes->{3.915550477542268*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"2c8209d4-d136-44cf-88f9-c8831b2695ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 6.2",
 StyleBox["\t\n",
  FontWeight->"Plain"],
 "a.  Type ",
 StyleBox["vel",
  FontSlant->"Italic"],
 " =2 and execute."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756504755383168*^9, 3.756504756214303*^9}, 
   3.756949031749814*^9, {3.757013931652771*^9, 3.757013932286689*^9}, {
   3.883668325035091*^9, 3.883668325637759*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"3cc41623-cab4-484f-a517-08c5eaf673fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vel", "=", "2"}]], "Input",
 CellChangeTimes->{{3.915550485646743*^9, 3.9155504878950872`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"c4828a90-74cf-419e-a3d1-fbeb56146141"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.915550488552074*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"0d858371-7e9d-4ddc-9b16-896b875c3eba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b.  Type",
 StyleBox[" ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox[
     RowBox[{"(", 
      RowBox[{"7", " ", "+", " ", 
       RowBox[{"vel", " ", "/", " ", "3"}]}], ")"}],
     FontWeight->"Plain"], "2"], TraditionalForm]],ExpressionUUID->
  "6c03e747-3741-4e0e-a2ea-6408cbf60eb1"],
 " and execute."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 AspectRatioFixed->
  False,ExpressionUUID->"d1280cd3-0317-4cad-a75c-be9da03f607e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"7", "+", 
    RowBox[{"vel", "/", "3"}]}], ")"}], "^", "2"}]], "Input",
 CellChangeTimes->{{3.915550494030676*^9, 3.9155505020720377`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"e37cad0d-37b8-4d81-9427-1aabcc0ce8fd"],

Cell[BoxData[
 FractionBox["529", "9"]], "Output",
 CellChangeTimes->{3.915550502817428*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"815766fa-075b-4016-893d-3bb627c079bd"]
}, Open  ]],

Cell["The assignment statement", "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"5eb01df0-0e1c-4842-b65f-a5a3503272a4"],

Cell[BoxData[
 StyleBox[
  RowBox[{"units", " ", "=", " ", 
   RowBox[{"12", " ", "*", " ", "numberOfDozens"}]}],
  FontFamily->"Courier"]], "Input",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"74a3da3f-40e7-4f23-9d2d-4568f8eb6e1c"],

Cell[TextData[{
 "is not an algebraic formula.  An illustration of the difference between an \
algebraic equality and a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " assignment is the following program segment:"
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"fd14d49a-be5d-4853-83d9-e9b79d3aad03"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"counter", " ", "=", " ", "5"}],
  FontFamily->"Courier"], "\n", 
 StyleBox[
  RowBox[{"counter", " ", "=", " ", 
   RowBox[{"counter", " ", "+", " ", "1"}]}],
  FontFamily->"Courier",
  FontWeight->"Bold",
  Background->RGBColor[1, 1, 0]]}], "Input",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"d7a488e6-8ce7-4896-94bb-9b2efb85c42f"],

Cell[TextData[{
 "The last statement does ",
 StyleBox["not",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " say that ",
 StyleBox["counter",
  FontSlant->"Italic"],
 " is one more than itself.  When ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " encounters the second statement, it looks up the present value of ",
 StyleBox["counter",
  FontSlant->"Italic"],
 " (5, here), evaluates the expression ",
 StyleBox["counter",
  FontSlant->"Italic"],
 " + 1 (6), and stores the result of the computation in the variable on the \
left, here ",
 StyleBox["counter",
  FontSlant->"Italic"],
 ".  The effect of the statement is to increment ",
 StyleBox["counter",
  FontSlant->"Italic"],
 " by 1 from 5 to 6.  We see later that incrementing by 1 is important when \
we need to count.  In many situations, we need an old value of a variable to \
compute the new value of the same variable."
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.757013883490698*^9, {3.883668399748945*^9, 3.88366840035184*^9}, {
   3.884080820889763*^9, 3.8840808333453493`*^9}, {3.91512096169541*^9, 
   3.915120962751545*^9}},ExpressionUUID->"0cd09808-3eb1-42b8-bf24-\
34b4968b4b55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 6.3 a.Write a segment to assign 34 to variable ",
 StyleBox["time",
  FontSlant->"Italic"],
 " and then to add 0.5 to ",
 StyleBox["time",
  FontSlant->"Italic"],
 ", changing its value. \nb. After doing Part a, execute the command   time \
== 34 and explain the result."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756499464872974*^9, 3.756499538744481*^9}, {
   3.756504777488159*^9, 3.756504779884598*^9}, 3.756949032368038*^9, {
   3.75699261001694*^9, 3.756992641500514*^9}, {3.757013935766686*^9, 
   3.757013936275594*^9}, 3.884080872919161*^9, 3.915120992047666*^9},
 AspectRatioFixed->
  False,ExpressionUUID->"ff055fe3-6441-431e-8115-4fbe2016054e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"time", "=", "34"}], "\[IndentingNewLine]", 
 RowBox[{"time", "=", 
  RowBox[{"time", "+", ".5"}]}]}], "Input",
 CellChangeTimes->{{3.915550572745591*^9, 3.915550581893793*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e6a91475-e663-44f7-9adf-896cead50bc5"],

Cell[BoxData["34"], "Output",
 CellChangeTimes->{3.915550585011639*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"75d43946-a6df-4ab8-85e2-b0c9ec8c592d"],

Cell[BoxData["34.5`"], "Output",
 CellChangeTimes->{3.915550585013688*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"0282d859-862c-487b-86d9-770679cda3c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"time", "==", "34"}]], "Input",
 CellChangeTimes->{{3.9155505966868963`*^9, 3.915550598687463*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"e713b14a-d24e-4cf1-8c1b-c998e7e7f835"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.915550599212201*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"623720d2-5147-41a2-bce0-d83d0aa962c8"]
}, Open  ]],

Cell[TextData[{
 "Above, we do not need to display the value of ",
 StyleBox["counter",
  FontSlant->"Italic"],
 " after the assignment of 5 to the variable; we know the value of ",
 StyleBox["counter",
  FontSlant->"Italic"],
 " is 5.  To suppress the output from a statement, we following the statement \
with a ",
 StyleBox["semicolon",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " (",
 StyleBox[";",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 "), as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"82611a78-ad45-4d0d-9614-11c7378cf7ca"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"counter", " ", "=", " ", "5"}], 
   StyleBox[";",
    Background->RGBColor[1, 1, 0]]}],
  FontFamily->"Courier"]], "Input",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"4173e1e2-0723-4afe-a173-fab9b27fcc22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 6.4",
 StyleBox["\t",
  FontWeight->"Plain"],
 "Repeat the previous question suppressing the output from the initial \
assignment."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756504788677378*^9, 3.756504790055009*^9}, 
   3.7569490329587913`*^9, {3.757013940043109*^9, 3.757013941247154*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"42f3d036-442b-4389-ac84-af5c74903002"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", "=", "34"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{"time", "+", ".5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"time", "==", "34"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9155506403129272`*^9, 3.91555068347898*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f6dca656-e37f-4df9-ab1a-ffc49b768f49"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.915550684220717*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e72ddbba-4d79-47f8-a509-006eb28730e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7. User-defined Functions", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756504800858961*^9, 3.756504805022902*^9}, 
   3.757013883510976*^9},
 AspectRatioFixed->
  False,ExpressionUUID->"570177e1-e1e8-4c2f-8fe5-6237440191eb"],

Cell[TextData[{
 "Frequently, we wish to define our own functions that we can use again and \
again.  In fact this is one of Mathematica\[CloseCurlyQuote]s favorite mode \
(functional language). As with variable names, we begin the name of such a ",
 StyleBox["user-defined function",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " with a lowercase letter (so as not to confuse it to a Mathematica \
pre-defined function).\n\nSuppose we wish to define the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "3a892b24-79f0-4c42-89b4-3f0e47f585ee"],
 " in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  In case ",
 StyleBox["f",
  FontSlant->"Italic"],
 " has a definition in memory from previous work, we clear any earlier \
definition of ",
 StyleBox["f",
  FontSlant->"Italic"],
 " with ",
 StyleBox["Clear",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.915121048657856*^9, 3.915121132543178*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"de61ea93-d4aa-4b21-b236-680f22a743c8"],

Cell[BoxData[
 RowBox[{
  StyleBox["Clear",
   Background->RGBColor[1, 1, 0]], "[", "f", "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[57]:=",ExpressionUUID->"abe9ce84-8902-41bf-99f7-bca65505e116"],

Cell["\<\
To clear function definitions or variable values for several symbols, we \
separate the symbols by commas, as follows:\
\>", "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"fc81c70d-5fe3-417e-ba1f-7c7eb563fc8c"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Clear", "[", 
   StyleBox[
    RowBox[{"f", 
     StyleBox[",",
      Background->RGBColor[1, 1, 0]], " ", "x"}],
    FontWeight->"Bold"], "]"}],
  FontFamily->"Courier"]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"37690483-12b7-4f4d-a7bc-8ae244985349"],

Cell[TextData[{
 "We define a function with the dummy variable, here ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 "followed by an underline and ",
 "in ",
 StyleBox["square brackets",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ",",
 StyleBox[" ",
  FontColor->RGBColor[0.00115969, 0, 0.00115969]],
 StyleBox["[ ]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ".  Several lines can appear in the definition.  The definition of a \
function uses := instead of the assignment equal =.  The ",
 StyleBox["colon-equal sign",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ",",
 StyleBox[" ",
  FontColor->RGBColor[0.00115969, 0, 0.00115969]],
 StyleBox[":=",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", is a ",
 StyleBox["delayed assignment",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ".  With its use, the right hand side is not evaluated immediately but is \
reevaluated each time the function is called.  The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " definition of the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "df0e7340-3ba8-43a1-b6fc-d2f1d772848c"],
 " follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455300495830496*^9, 
  3.455300504394594*^9}},ExpressionUUID->"056ecb54-587d-4e0f-aa71-\
0ff87cbf04b5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"f", "[", "x_", "]"}],
   Background->RGBColor[1, 1, 0]], 
  StyleBox[":=",
   Background->RGBColor[1, 1, 0]], " ", 
  SuperscriptBox["x", "2"]}]], "Input",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"9b8639f8-81e2-4eb5-a9c5-e6e1dfc8610a"],

Cell[TextData[{
 "We can obtain a template (see below) for defining a function by clicking ",
 StyleBox["Define Function",
  FontSlant->"Italic"],
 " under the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 "'s ",
 StyleBox["Advanced Calculator",
  FontSlant->"Italic"],
 ".  We tab from ",
 StyleBox["name",
  FontSlant->"Italic"],
 " to ",
 StyleBox["var",
  FontSlant->"Italic"],
 " to ",
 StyleBox["expr",
  FontSlant->"Italic"],
 ", entering the corresponding components of the definition."
}], "Text",
 CellChangeTimes->{{3.455381509560052*^9, 3.45538152517118*^9}, {
  3.455381564144858*^9, 
  3.455381762163084*^9}},ExpressionUUID->"e4cf577b-4b07-4eba-8d1d-\
788b25b1ea35"],

Cell[BoxData[
 RowBox[{
  TagBox[
   FrameBox["name"],
   "Placeholder"], 
  RowBox[{
   RowBox[{"[", 
    RowBox[{
     TagBox[
      FrameBox["var"],
      "Placeholder"], "_"}], "]"}], ":=", 
   TagBox[
    FrameBox["expr"],
    "Placeholder"]}]}]], "Input",ExpressionUUID->"2cf36079-6f77-435c-aae3-\
5e67bc9de35c"],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 7.1",
 StyleBox[" ",
  FontWeight->"Plain"],
 "Evaluate the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " at 5.  Be sure to use square brackets around 5."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 CellChangeTimes->{{3.756504869807797*^9, 3.756504870822595*^9}, 
   3.756949033548538*^9, 3.757013883529538*^9, {3.884081024353857*^9, 
   3.884081025406104*^9}},
 AspectRatioFixed->
  False,ExpressionUUID->"8cfdccc3-3fbf-41fe-8ccb-f110c3511a76"],

Cell[TextData[{
 "We can use symbols as well as numbers for a function's argument.  For \
example, the following call to the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " uses an undefined symbol, ",
 StyleBox["z",
  FontSlant->"Italic"],
 ", in the argument:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 Evaluatable->False,
 AspectRatioFixed->
  False,ExpressionUUID->"5112c04d-1d4b-48c1-baa2-8d9e0999101a"],

Cell[CellGroupData[{

Cell[TextData[{
 "f[3 ",
 StyleBox["z",
  Background->RGBColor[1, 1, 0]],
 "]"
}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.884081039932104*^9, 3.884081042380875*^9}},
 AspectRatioFixed->False,
 CellLabel->"In[65]:=",ExpressionUUID->"75b5b234-e9db-44aa-8982-03d5b9851d0d"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"3", " ", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.915551045339572*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"0d8ef195-3fcd-4c1e-96aa-8d7fe263fa8c"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "QRQ 7.2",
 StyleBox["\t",
  FontWeight->"Plain"],
 "\na.  Clear any possible values for ",
 StyleBox["p",
  FontSlant->"Italic"],
 " and ",
 StyleBox["t",
  FontSlant->"Italic"],
 "."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.7565048891856413`*^9, 3.756504890378253*^9}, 
   3.756949034128981*^9, 
   3.757013883547271*^9},ExpressionUUID->"c7a84984-5062-4336-a6a8-\
6ed6cc1e6272"],

Cell[CellGroupData[{

Cell[TextData[{
 "b.  Using the ",
 StyleBox["Advanced Calculator",
  FontSlant->"Italic"],
 " of the ",
 StyleBox["Classroom Assistant ",
  FontSlant->"Italic"],
 " if needed",
 ", define the function ",
 StyleBox["p",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") = 100",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"0.1", "t"}]], TraditionalForm]],ExpressionUUID->
  "a616acbe-8413-4fc9-832f-ffd4ff60329c"],
 ".  Be sure to use ",
 StyleBox["t",
  FontSlant->"Italic"],
 " on both sides of the definition and ",
 StyleBox["E",
  FontSlant->"Italic"],
 " or ",
 StyleBox["Exp",
  FontSlant->"Italic"],
 " for ",
 StyleBox["e",
  FontSlant->"Italic"],
 "."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455381789399846*^9, 3.455381809941148*^9}, {
  3.884081072643906*^9, 
  3.8840810948435707`*^9}},ExpressionUUID->"7ff16080-3ba6-45e8-9683-\
829dc5fbb032"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"p", ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"100", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"0.1", "t"}]]}]}], "  "}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.915550931218957*^9, 3.915551002559388*^9}, {
   3.915551065761632*^9, 3.915551114695142*^9}, {3.915551144934353*^9, 
   3.915551166732195*^9}, {3.9155512168746347`*^9, 3.915551222971732*^9}, 
   3.9155513219065733`*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"92878cdd-d53d-46fc-a68f-6482a786d303"],

Cell["\<\
*has  to  be  capital  letter  for  functions  in  mathmatica*\
\>", "Text",
 CellChangeTimes->{3.915551341469849*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[80]:=",ExpressionUUID->"ed7acbe4-cdca-4b1d-8585-dfb16a5a77ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "c.  Evaluate ",
 StyleBox["p",
  FontSlant->"Italic"],
 " at ",
 StyleBox["t",
  FontSlant->"Italic"],
 " = 12."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"caa01c28-6600-4116-8804-0da43d90f694"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.9155510325557423`*^9, 3.9155510526659737`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"714a1617-e97d-4765-9e9e-03b495c9314a"],

Cell[BoxData["332.01169227365483`"], "Output",
 CellChangeTimes->{3.9155510532038717`*^9, 3.915551089390395*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"c129d441-921a-4588-bd04-de7592b15940"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8. Getting help", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756503589880857*^9, 3.7565036083286858`*^9}, {
  3.756506042791068*^9, 3.756506043797926*^9}, {3.757019118425193*^9, 
  3.757019121576824*^9}},ExpressionUUID->"32b37922-aa40-4b42-a47a-\
b13606df1e97"],

Cell[TextData[{
 "There are many ways of getting help with ",
 StyleBox["Mathematica. \n- ",
  FontSlant->"Italic"],
 "Use Wolfram Alpha, copying its ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " outputs  (see Section 4 above)",
 StyleBox["\n- ",
  FontSlant->"Italic"],
 "Start the few first letters of a function, ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "will propose possibilities\n- Hover over a function and click on the down \
arrow for help on syntax, or the circled i for more complete help, including \
examples and options. \n- Ctrl-click (Mac), or right click (Windows) on the \
command and scroll down to Get Help\n- Help menu, Wolfram Documentation:",
 StyleBox[" ",
  FontSlant->"Italic"],
 " will lead you to the same help pages with examples and options\n- Explore \
the palettes\n- Google...\n- Using  question mark (? ): Has the advantage of \
showing info not only about ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "defined functions, or your own function or variable. See more below\n\n"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455300880566618*^9, 3.455300891225845*^9}, {
   3.455300993811173*^9, 3.455301036952338*^9}, {3.5048114880882*^9, 
   3.504811501823865*^9}, 3.504811543730165*^9, {3.504811585786703*^9, 
   3.5048115880274687`*^9}, {3.504811644448908*^9, 3.504811656270186*^9}, {
   3.568070373109481*^9, 3.568070373253118*^9}, {3.756505321951891*^9, 
   3.756505403371037*^9}, {3.757013978818979*^9, 3.757014027760021*^9}, {
   3.7570140597113047`*^9, 3.757014069316739*^9}, {3.757014116860018*^9, 
   3.757014179287481*^9}, {3.757015020225917*^9, 3.757015065306737*^9}, {
   3.757015103904263*^9, 3.7570153653196917`*^9}, 3.7570154070300817`*^9, {
   3.7570155077118893`*^9, 3.7570155687415676`*^9}, {3.757015621290034*^9, 
   3.757015649606906*^9}, {3.75701912964843*^9, 3.7570191337683773`*^9}, {
   3.757019191981824*^9, 3.757019275052026*^9}, {3.757019344019995*^9, 
   3.75701937770254*^9}, {3.7570200798553543`*^9, 3.757020120075696*^9}, {
   3.884081186018466*^9, 3.884081189813122*^9}, {3.884081220916081*^9, 
   3.884081230017207*^9}},ExpressionUUID->"70384d3f-2630-4a85-b7c7-\
10c7ad0fb083"],

Cell[CellGroupData[{

Cell["Using ?", "Subsubsection",
 CellChangeTimes->{{3.756505441379397*^9, 
  3.75650544408739*^9}},ExpressionUUID->"fa7ef7d1-0c49-45f8-bb85-\
1d75b221ec1e"],

Cell[TextData[{
 "To find out information about a symbol or function, either yours or ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s, we can also type a ",
 StyleBox["question mark (?)",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " followed by the symbol, such as the statement below to obtain information \
on the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 StyleBox["Log",
  FontSlant->"Italic"],
 ".  Clicking >> in the output leads us to additional documentation and \
examples."
}], "Text",
 CellChangeTimes->{
  3.8840812391145697`*^9},ExpressionUUID->"94dc35a0-9174-41c1-a1d2-\
77cc1b9d1809"],

Cell[BoxData[
 RowBox[{
  StyleBox["?",
   Background->RGBColor[1, 1, 0]], "Log"}]], "Input",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"979f9785-69d1-4692-befc-5d8412384b33"],

Cell[TextData[{
 "An ",
 StyleBox["asterisk *",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " is a ",
 StyleBox["wildcard",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", standing for any string of characters.  We can find a list of commands \
starting with ",
 StyleBox["Plot",
  FontSlant->"Italic"],
 " as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568070493860337*^9, 
  3.568070494560587*^9}},ExpressionUUID->"d72392ef-bca1-4ed5-ad77-\
f2d67811c397"],

Cell[BoxData[
 RowBox[{"?", "Plot*"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568070452909451*^9, 3.568070457410107*^9}, 
   3.568070506641109*^9},ExpressionUUID->"4e9f57ee-1d43-4c97-8df2-\
d5def43cf181"],

Cell[TextData[{
 "To find any command ",
 StyleBox["containing",
  FontSlant->"Italic"],
 " Plot, do"
}], "Text",
 CellChangeTimes->{{3.5680705299636908`*^9, 
  3.568070562597899*^9}},ExpressionUUID->"f216bcd0-517f-4aa7-b257-\
03f76b0c60a5"],

Cell[BoxData[
 RowBox[{"?", "*Plot*"}]], "Input",
 CellMargins->{{22, 10}, {0, 7}},
 CellChangeTimes->{{3.5680705660720873`*^9, 
  3.568070571359587*^9}},ExpressionUUID->"68fe8afb-5107-46fe-83a2-\
b2aa9530a60c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 8.1",
 StyleBox["\t",
  FontWeight->"Plain"],
 "\na.  The advantage of using ? is that it can give you information about \
functions you have defined yourself. Obtain information about the function ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", which you defined in the previous section."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756505953292082*^9, 3.756505993488897*^9}, {
   3.756506053101269*^9, 3.756506054326458*^9}, 
   3.756949035357029*^9},ExpressionUUID->"8655c5df-8e46-47e1-b0bc-\
b9196cf3582d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "p"}]], "Input",
 CellChangeTimes->{{3.9155514178956842`*^9, 3.915551420837006*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"72a11d02-5c9f-477e-affc-47ba125baf7b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`p\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"p", "[", "t_", "]"}], ":=", 
                    RowBox[{"100", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"0.1`", " ", "t"}]]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`p\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{20., {3., 17.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{20., {3., 17.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`p\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`p", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`p, {$CellContext`p[
         Pattern[$CellContext`t, 
          Blank[]]] :> 100 E^(0.1 $CellContext`t)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`p"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9155514219737797`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"647661c4-86ff-4f7c-b574-18400cfb5b40"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b.  Obtain the list of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " symbols that contain \"Exp\" somewhere in their names."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"f30e9453-6569-44ee-9c49-8197f09ff1ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Exp*"}]], "Input",
 CellChangeTimes->{{3.91555143528025*^9, 3.9155514415127583`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"f9b8dc29-b9cb-4d40-a87c-151a27697de0"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{20., {5., 15.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AsymptoticExpectation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "AsymptoticExpectation", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExpressionTree", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpressionTree", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BackFaceSpecularExponent", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "BackFaceSpecularExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExpressionUUID", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpressionUUID", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ButtonExpandable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ButtonExpandable", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExpToTrig", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpToTrig", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CellDynamicExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CellDynamicExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["FrontEndDynamicExpression", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FrontEndDynamicExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CloudExport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CloudExport", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["FrontFaceSpecularExponent", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FrontFaceSpecularExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CloudExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CloudExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FunctionCompileExport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FunctionCompileExport", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CloudExpressions", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CloudExpressions", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["FunctionCompileExportByteArray", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FunctionCompileExportByteArray", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["CompiledExpressionDeclaration", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CompiledExpressionDeclaration", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["FunctionCompileExportLibrary", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FunctionCompileExportLibrary", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ComplexExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["FunctionCompileExportString", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FunctionCompileExportString", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CompoundExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CompoundExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FunctionExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "FunctionExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ConditionalExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ConditionalExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ImageExposureCombine", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ImageExposureCombine", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateCloudExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CreateCloudExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InertExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "InertExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["CreateManagedLibraryExpression", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "CreateManagedLibraryExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IntegerExponent", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "IntegerExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DeleteCloudExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "DeleteCloudExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogicalExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "LogicalExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EllipticExp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "EllipticExp", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MakeExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MakeExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EllipticExpPrime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "EllipticExpPrime", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["ManagedLibraryExpressionID", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ManagedLibraryExpressionID", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EmbeddedSQLExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "EmbeddedSQLExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["ManagedLibraryExpressionQ", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ManagedLibraryExpressionQ", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EnterExpressionPacket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "EnterExpressionPacket", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MantissaExponent", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MantissaExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Exp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "Exp", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["MathieuCharacteristicExponent", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MathieuCharacteristicExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Expand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "Expand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MatrixExp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MatrixExp", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpandAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpandAll", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MersennePrimeExponent", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MersennePrimeExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpandDenominator", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpandDenominator", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MersennePrimeExponentQ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MersennePrimeExponentQ", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpandFileName", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpandFileName", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NExpectation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "NExpectation", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpandNumerator", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpandNumerator", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["NotebookDynamicExpression", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "NotebookDynamicExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Expectation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "Expectation", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NuclearExplosionData", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "NuclearExplosionData", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpectationE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpectationE", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NumberExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "NumberExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpectedValue", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpectedValue", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["OutputMathEditExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "OutputMathEditExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpGammaDistribution", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpGammaDistribution", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PiecewiseExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "PiecewiseExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpIntegralE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpIntegralE", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PolynomialExpressionQ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "PolynomialExpressionQ", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpIntegralEi", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpIntegralEi", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PowerExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "PowerExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpirationDate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpirationDate", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RationalExpressionQ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "RationalExpressionQ", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Exponent", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "Exponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RawMemoryExport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "RawMemoryExport", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExponentFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentFunction", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RealExponent", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "RealExponent", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExponentialDistribution", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentialDistribution", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RegularExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "RegularExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExponentialFamily", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentialFamily", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ReturnExpressionPacket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ReturnExpressionPacket", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["ExponentialGeneratingFunction", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentialGeneratingFunction", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StringExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "StringExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExponentialMovingAverage", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentialMovingAverage", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TemplateExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TemplateExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["ExponentialPowerDistribution", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentialPowerDistribution", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TensorExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TensorExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExponentPosition", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentPosition", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ToExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ToExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExponentStep", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExponentStep", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ToHeldExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ToHeldExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Export", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "Export", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TransferFunctionExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TransferFunctionExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExportAutoReplacements", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExportAutoReplacements", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TreeExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TreeExpression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExportByteArray", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExportByteArray", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TrigExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TrigExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExportForm", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExportForm", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TrigToExp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TrigToExp", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExportPacket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExportPacket", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["TsallisQExponentialDistribution", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "TsallisQExponentialDistribution", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExportString", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExportString", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["URLExpand", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "URLExpand", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Expression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "Expression", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$CloudExpressionBase", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "$CloudExpressionBase", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpressionCell", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpressionCell", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$ExportFormats", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "$ExportFormats", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpressionGraph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpressionGraph", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$HTMLExportRules", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "$HTMLExportRules", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExpressionPacket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ExpressionPacket", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$LicenseExpirationDate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "$LicenseExpirationDate", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.475]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]},
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["JLink`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{20., {5., 15.}}], " ", 
              StyleBox["JLink`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ConvertToCellExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "ConvertToCellExpression", "JLink`"}, False},
                 ButtonNote->"JLink`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MakeJavaExpr", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MakeJavaExpr", "JLink`"}, False},
                 ButtonNote->"JLink`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["JavaObjectToExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "JavaObjectToExpression", "JLink`"}, False},
                 ButtonNote->"JLink`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.475]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]},
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["Wolfram`Chatbook`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{20., {5., 15.}}], " ", 
              StyleBox["Wolfram`Chatbook`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["GetExpressionURI", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "GetExpressionURI", "Wolfram`Chatbook`"}, False},
                 ButtonNote->"Wolfram`Chatbook`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetExpressionURIs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "GetExpressionURIs", "Wolfram`Chatbook`"}, False},
                 ButtonNote->"Wolfram`Chatbook`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MakeExpressionURI", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0bc5fb30-d117-4bd3-92bc-a37030e2c140", {
                   "MakeExpressionURI", "Wolfram`Chatbook`"}, False},
                 ButtonNote->"Wolfram`Chatbook`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {{False}}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.915551442058426*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"5ad2db62-c865-4fec-b25b-cb0a77ea5f33"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "c.  Navigating the ",
 StyleBox["Help ",
  FontSlant->"Italic"],
 "menu, obtain information about ",
 StyleBox["Exp",
  FontSlant->"Italic"],
 "."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455301097058161*^9, 
  3.455301127270749*^9}},ExpressionUUID->"95317bf1-80e6-4a74-a637-\
0de0d97a05bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Exp"}]], "Input",
 CellChangeTimes->{{3.915551452742568*^9, 3.915551455136232*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"5c02a835-37f5-4154-a52e-1f387f8492c8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{26., {8., 18.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{26., {8., 18.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Exp",
              ButtonNote->"paclet:ref/Exp"],
             "\"paclet:ref/Exp\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", \
StyleBox[\\\"z\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the exponential of \
\\!\\(\\*StyleBox[\\\"z\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Exp", 
                    "paclet:ref/Exp", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Exp.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Exp.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected", ",",
                     "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Exp\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{20., {3., 17.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{20., {3., 17.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{26., {8., 18.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{26., {8., 18.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Exp",
              ButtonNote->"paclet:ref/Exp"],
             "\"paclet:ref/Exp\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", \
StyleBox[\\\"z\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the exponential of \
\\!\\(\\*StyleBox[\\\"z\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{20., {3., 17.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{20., {3., 17.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Exp\", \"[\", StyleBox[\"z\", \"TI\"], \"]\"}]\) gives \
the exponential of \!\(\*StyleBox[\"z\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Exp", "Web" -> 
      "http://reference.wolfram.com/language/ref/Exp.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, 
    "Attributes" -> {Listable, NumericFunction, Protected, ReadProtected}, 
    "FullName" -> "System`Exp"|>, False]]], "Output",
 CellChangeTimes->{3.9155514557452173`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"ac2cb25e-386b-47a9-b6ae-9c0916e0ff55"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["9. Printing", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756506164364785*^9, 
  3.756506167347055*^9}},ExpressionUUID->"a670e18a-90ff-4945-9eed-\
658684d521a9"],

Cell[TextData[{
 "Sometimes, particularly when doing error checking (\"debugging\"), we wish \
to display intermediate results.  To do so, we can employ the ",
 StyleBox["Print",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " function, whose format is as follows:\n\n\t",
 StyleBox["Print[",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["expr1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["expr2",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ... ] ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 "\n\nThe command displays the arguments (",
 StyleBox["expr1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["expr2",
  FontSlant->"Italic"],
 ", ... ) with no spaces between them and then advances to a new line.  Each \
argument can be any expression:  a string constant, such as \"time of day\"; \
variable, such as ",
 StyleBox["x",
  FontSlant->"Italic"],
 "; or a more involved expression, such as ",
 StyleBox["f",
  FontSlant->"Italic"],
 "[5] + 2",
 StyleBox["Sin",
  FontSlant->"Italic"],
 "[",
 StyleBox["x",
  FontSlant->"Italic"],
 "].  For a ",
 StyleBox["string constant",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", which is the sequence of characters within quotation marks, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " prints the characters between the quotation marks.  An argument that is a \
variable does not have quotation marks surrounding it; and if the variable \
has a value, output contains this value.  For a more involved expression \
argument, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " also evaluates the expression and then displays its value.  The following \
segment displays string constant documentation along with the value of a \
variable, ",
 StyleBox["timeOfExp",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.504811688307852*^9, 
  3.504811695150585*^9}},ExpressionUUID->"1688a07e-d97b-4918-92f8-\
f51acc22aa18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeOfExp", " ", "=", " ", "55.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Time = \>\"", ",", " ", "timeOfExp", ",", " ", "\"\< seconds\>\""}], 
   "]"}], ";"}]}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.915551743740274*^9, 3.915551747660103*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"04e1bf37-aff4-4c56-8cb7-20814fa54d7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time = \"\>", "\[InvisibleSpace]", "55.4`", 
   "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Time = ", 55.4, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915551732404994*^9, 3.915551748066588*^9}},
 CellLabel->
  "During evaluation of \
In[90]:=",ExpressionUUID->"3d639431-58ed-4cfc-9563-8460435f38a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 16",
 StyleBox["\t",
  FontWeight->"Plain"],
 "Write a statement to assign 3 to ",
 StyleBox["t",
  FontSlant->"Italic"],
 ".  Then, employ ",
 StyleBox["Print",
  FontSlant->"Italic"],
 " to display \"Velocity is \", the result of the computation -9.8",
 StyleBox["t",
  FontSlant->"Italic"],
 ", and \" m/sec.\"  For proper spacing, be sure to type blanks in the string \
constants after \"is\" and before \"m/sec\".  Output for the ",
 StyleBox["Print",
  FontSlant->"Italic"],
 " command should be as follows:\n\t",
 StyleBox["Velocity is -29.4 m/sec.",
  FontFamily->"Courier"]
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.756949035987299*^9},ExpressionUUID->"7893711d-8b55-459c-a837-\
936120d79907"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"velocity", "[", "t_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", "9.8"}], "t"}]}], "\[IndentingNewLine]", 
 RowBox[{"comp", "=", " ", 
  RowBox[{"velocity", "[", "3", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Velocity is \>\"", ",", " ", "comp", ",", " ", "\"\< m/sec\>\""}], " ",
   "]"}]}], "Input",
 CellChangeTimes->{{3.9155515942561197`*^9, 3.915551720039502*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"0f81efe7-7121-4210-99bd-8a74a5d57fb1"],

Cell[BoxData[
 RowBox[{"-", "29.400000000000002`"}]], "Output",
 CellChangeTimes->{3.915551725110684*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"fc2b626a-7ab4-454a-b456-8c323e2172f3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Velocity is \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "29.400000000000002`"}], 
   "\[InvisibleSpace]", "\<\" m/sec\"\>"}],
  SequenceForm["Velocity is ", -29.400000000000002`, " m/sec"],
  Editable->False]], "Print",
 CellChangeTimes->{3.91555172511481*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"d6a34a8d-44cd-44a8-9594-686fcc44345b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["10. Looping", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756506172704843*^9, 
  3.756506174069397*^9}},ExpressionUUID->"028edec1-89d5-41a8-a824-\
0cdd1f86a603"],

Cell[TextData[{
 "It is often advantageous to be able to execute a segment of code a number \
of times. For example, to obtain the velocity for each integer time ranging \
from 1 to 1000 seconds, it would be inconvenient for the user to have to \
execute one thousand times a cell assigning a time and computing the \
corresponding velocity.  Some method of automating the procedure is far more \
preferable.  A segment of code that is executed repeatedly is called a ",
 StyleBox["loop",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ". Loops are the work horse of most computer programs. \n\nSeveral types of \
loops exist in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". When we know exactly how many times to execute the segment, the function ",
 StyleBox["Do",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " is often a good choice for implementing the loop.  One form of the \
function is as follows:\n\t",
 StyleBox["Do[",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["expr",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", {",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["imax",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["}]",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 "\t\nThe body of the loop is ",
 StyleBox["expr",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["imax",
  FontSlant->"Italic"],
 " is an integer indicating the number of times to execute ",
 StyleBox["expr",
  FontSlant->"Italic"],
 ". The function ",
 StyleBox["Do",
  FontSlant->"Italic"],
 " itself has no return value.  For example, suppose, as the basis for a more \
involved segment, we wish to increment",
 StyleBox[" ",
  FontSlant->"Italic"],
 "distance by 2.25 for 7 times.  We initialize the distance variable, say ",
 StyleBox["dist",
  FontSlant->"Italic"],
 ", to be 0.  Within a ",
 StyleBox["Do",
  FontSlant->"Italic"],
 " loop that executes 7 times, we calculate the sum of ",
 StyleBox["dist",
  FontSlant->"Italic"],
 " and 2.25 and assign the result of the expression to ",
 StyleBox["dist",
  FontSlant->"Italic"],
 ", giving the variable an updated value.  Because the ",
 StyleBox["Do",
  FontSlant->"Italic"],
 " loop does not return a value, we display the final value of ",
 StyleBox["dist",
  FontSlant->"Italic"],
 " after the loop.  The segment is as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.915121488656259*^9, 
  3.9151215513591146`*^9}},ExpressionUUID->"e4672c21-5b25-4e5b-9dd1-\
244ab7557604"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"dist", " ", "=", " ", "0"}], ";"}], "\n"}],
  FontFamily->"Courier"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["Do",
     FontWeight->"Bold",
     Background->RGBColor[1, 1, 0]], 
    StyleBox["[",
     Background->RGBColor[1, 1, 0]], 
    StyleBox["\n",
     FontSize->10], 
    StyleBox["  ",
     FontSize->10], 
    RowBox[{
     RowBox[{"dist", " ", "=", " ", 
      RowBox[{"dist", " ", "+", " ", "2.25"}]}], 
     StyleBox[",",
      Background->RGBColor[1, 1, 0]], 
     StyleBox["\n",
      FontSize->10,
      Background->RGBColor[1, 1, 0]], 
     StyleBox["  ",
      FontSize->10,
      Background->RGBColor[1, 1, 0]], 
     StyleBox[
      RowBox[{"{", "7", "}"}],
      FontWeight->"Bold",
      Background->RGBColor[1, 1, 0]]}], 
    StyleBox["]",
     Background->RGBColor[1, 1, 0]]}], "\n"}],
  FontFamily->"Courier"], "\n", 
 StyleBox["dist",
  FontFamily->"Courier",
  Background->RGBColor[1, 1, 0]]}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[1]:=",ExpressionUUID->"b4309057-f693-4080-bc2e-86bccc540a20"],

Cell[BoxData["15.75`"], "Output",
 CellChangeTimes->{3.915635805791738*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d6982e12-e369-4d53-9cec-d2c58a3a6a46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 10.1",
 StyleBox["\t",
  FontWeight->"Plain"],
 "Write a segment to assign 1 to a variable ",
 StyleBox["d",
  FontSlant->"Italic"],
 " without displaying 1.  In a loop that executes 10 times, change the value \
of ",
 StyleBox["d",
  FontSlant->"Italic"],
 " to be double what it was before the previous iteration.  After the loop, \
type ",
 StyleBox["d",
  FontSlant->"Italic"],
 " so that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " displays ",
 StyleBox["d'",
  FontSlant->"Italic"],
 "s final value.  Before executing the loop, determine the final value so you \
can check your work."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.7565069792199583`*^9, 3.756506980238282*^9}, 
   3.75694903658195*^9},ExpressionUUID->"b85280ff-0bda-49ab-9ce5-\
4b8a39d8cfef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"d", "=", " ", 
    RowBox[{"2", "*", "d"}]}], ",", " ", 
   RowBox[{"{", "10", "}"}]}], "]"}], "\[IndentingNewLine]", "d"}], "Input",
 CellChangeTimes->{{3.915635832305759*^9, 3.915635884242475*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2c0a121c-5889-4712-8d04-3c91d1188c0e"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.91563588950504*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"76f74fbd-a015-451f-a6ec-1674a3008ba1"]
}, Open  ]],

Cell[TextData[{
 "While a comma separates the body from the number of times the loop is to \
execute, semicolons separate statements in the loop body.  In the next loop, \
we increment ",
 StyleBox["dist",
  FontSlant->"Italic"],
 " by 2.25, compute time as ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"25.5", " ", "-", " ", 
     SqrtBox[
      RowBox[{"600.25", " ", "-", " ", 
       RowBox[{"19.6", " ", 
        StyleBox["dist",
         FontSlant->"Italic"]}]}]]}], "9.8"], TraditionalForm]],
  ExpressionUUID->"abc25151-9b86-44a5-a9ef-8c4214d61cba"],
 ", ",
 "and then display distance and time.  As the segment shows, a semicolon \
appears between each pair of commands:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.757013838294825*^9, 
  3.7570138382949133`*^9}},ExpressionUUID->"44440212-da2d-4f64-abc0-\
c6566fd44f6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"dist", " ", "=", " ", "0"}], ";"}], "\n"}],
  FontFamily->"Courier"], "\n", 
 RowBox[{
  StyleBox["Do",
   FontFamily->"Courier"], 
  StyleBox["[",
   FontFamily->"Courier"], 
  StyleBox["\n",
   FontFamily->"Courier",
   FontSize->10], 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"dist", " ", "=", " ", 
      RowBox[{"dist", " ", "+", " ", "2.25"}]}],
     FontFamily->"Courier"], 
    StyleBox[";",
     FontFamily->"Courier",
     FontWeight->"Bold",
     Background->RGBColor[1, 1, 0]], 
    StyleBox["\n",
     FontFamily->"Courier",
     FontSize->10,
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["t",
      FontFamily->"Courier",
      FontSize->10,
      FontWeight->"Bold"], 
     StyleBox["=",
      FontFamily->"Courier",
      FontSize->10,
      FontWeight->"Bold"], 
     StyleBox[
      FractionBox[
       RowBox[{"25.5", " ", "-", " ", 
        SqrtBox[
         RowBox[{"600.25", " ", "-", " ", 
          StyleBox[
           RowBox[{"19.6", 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["dist",
             FontSize->12]}],
           FontVariations->{"CompatibilityType"->0}]}]]}], "9.8"],
      FontSize->12]}], 
    StyleBox[";",
     Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<For distance = \>\"", ",", "dist", ",", "\"\< time = \>\"", ",", 
      "t", ",", "\"\< seconds.\>\""}], "]"}]}], 
   StyleBox[",",
    Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
   RowBox[{"{", "7", "}"}]}], "]"}]}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.757013838299049*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"8b5e3f65-4e56-4255-b34e-d4d620a51204"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "2.25`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.19562931233752837`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 2.25, " time = ", 0.19562931233752837`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636041278789*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"bb66bb66-f341-4924-9313-c311489fe1a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "4.5`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.2930079770058717`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 4.5, " time = ", 0.2930079770058717, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636041281575*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"d3c734af-9810-49c6-9576-3fa0ced8a588"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "6.75`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.3946783677033244`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 6.75, " time = ", 0.3946783677033244, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156360412833443`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"8e8f2951-2d16-4ff9-9663-8163312b8ab9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "9.`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.5012635063475672`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 9., " time = ", 0.5012635063475672, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636041284527*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"256e9b35-22b0-4028-9dad-90eef7929701"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "11.25`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.613553543887237`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 11.25, " time = ", 0.613553543887237, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636041285717*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"0ea7d72a-6511-40f9-8c61-504f34d75e71"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "13.5`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.7325761979976163`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 13.5, " time = ", 0.7325761979976163, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156360412868977`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"debe393f-e6ec-41af-a34a-5b58681734ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "15.75`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.8597106852336065`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 15.75, " time = ", 0.8597106852336065, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156360412880697`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"d5763490-77ef-44c0-80d6-3ded7a366fb1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 10.2",
 StyleBox["\t",
  FontWeight->"Plain"],
 "This question is a variation of the previous QRQ.  Write a segment to \
assign 1 (one) to a variable ",
 StyleBox["d",
  FontSlant->"Italic"],
 " without displaying 1.  In a loop that executes 10 times, change the value \
of ",
 StyleBox["d",
  FontSlant->"Italic"],
 " to be double what it was before the previous iteration, and then print the \
value of ",
 StyleBox["d",
  FontSlant->"Italic"],
 ".  Omit the statement with just ",
 StyleBox["d",
  FontSlant->"Italic"],
 " after the loop.  Thus, output appears on 10 lines."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455301603403084*^9, 3.455301622611692*^9}, {
  3.4553770683957653`*^9, 3.455377072699744*^9}, {3.756506344793795*^9, 
  3.756506345770103*^9}, {3.756506987486046*^9, 3.7565069891361523`*^9}, {
  3.7569490371874857`*^9, 3.7569490377851467`*^9}, {3.756950061077587*^9, 
  3.756950063082364*^9}},ExpressionUUID->"2741f485-233e-4e67-a303-\
2011ffffb8c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", " ", 
     RowBox[{"2", "*", "d"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<d= \>\"", ",", " ", "d"}], "]"}]}], ",", " ", 
   RowBox[{"{", "10", "}"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9156360821355457`*^9, 3.915636133642374*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b341173b-8a60-42e2-8a74-0408f0c294fb"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["d= ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156361414857883`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"c2bfabbb-5bda-4f37-a472-7969a55dd86b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["d= ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636141487364*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"e48cf218-1ff7-4c1c-95b8-f960f200f4d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["d= ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636141489365*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"ecda5a2b-7f84-4820-a8a7-4da659d1600d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "16"}],
  SequenceForm["d= ", 16],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636141490486*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"18d3ee2e-e8d1-46aa-93fe-126838867e05"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "32"}],
  SequenceForm["d= ", 32],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156361414915867`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"21b8b1bb-d946-4757-bcca-735396e5f406"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "64"}],
  SequenceForm["d= ", 64],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156361414926863`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"6eeeddf9-4276-4333-8727-bdcb3eced13c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "128"}],
  SequenceForm["d= ", 128],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636141493782*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"f5cef825-28c1-4d28-bb8a-a22cc39e7170"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "256"}],
  SequenceForm["d= ", 256],
  Editable->False]], "Print",
 CellChangeTimes->{3.91563614149489*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"a1f7fb25-b289-43d8-b203-f83d91fe5999"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "512"}],
  SequenceForm["d= ", 512],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156361414959793`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"b17e815b-49c2-4f88-8678-9dd9ab78e3df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"d= \"\>", "\[InvisibleSpace]", "1024"}],
  SequenceForm["d= ", 1024],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636141497056*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"e826d184-be21-4b15-97fb-39a15c4d0821"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Another form of the ",
 StyleBox["Do",
  FontSlant->"Italic"],
 " loop, which is useful for animations, specifies an ",
 StyleBox["index",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " or ",
 StyleBox["loop variable",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ", such as ",
 StyleBox["i",
  FontSlant->"Italic"],
 ", that takes on values from 1 through a terminal value, such as ",
 StyleBox["imax",
  FontSlant->"Italic"],
 " in the following:\n\t",
 StyleBox["Do[",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["expr",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", {",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["i",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["imax",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["}]",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["\n",
  FontFamily->"Courier",
  FontSize->10,
  FontWeight->"Bold"],
 StyleBox["We can also specify a different initial value as follows:",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0.00389105, 0, 0]],
 StyleBox["\n",
  FontFamily->"Courier",
  FontSize->10],
 "\t",
 StyleBox["Do[",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["expr",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", {",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["i",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["imin",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["imax",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["}]",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["\n",
  FontFamily->"Courier",
  FontSize->10,
  FontWeight->"Bold"],
 "The following example of ",
 StyleBox["Print",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Do",
  FontSlant->"Italic"],
 " with an index ",
 StyleBox["i",
  FontSlant->"Italic"],
 " displays ",
 StyleBox["i",
  FontSlant->"Italic"],
 " and ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-factorial (",
 StyleBox["i",
  FontSlant->"Italic"],
 "!) with blanks between the values for ",
 StyleBox["i",
  FontSlant->"Italic"],
 " going from 1 through 9:"
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"416fbcc3-0b19-401d-873b-57f9afbfa9bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Do",
   FontFamily->"Courier"], 
  StyleBox["[",
   FontFamily->"Courier"], 
  StyleBox["\n",
   FontFamily->"Courier"], 
  StyleBox[" ",
   FontFamily->"Courier"], 
  RowBox[{
   StyleBox[
    RowBox[{"Print", "[", 
     RowBox[{"i", ",", " ", "\"\<  \>\"", ",", " ", 
      RowBox[{"i", "!"}]}], "]"}],
    FontFamily->"Courier"], 
   StyleBox[",",
    FontFamily->"Courier"], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "9"}], "}"}],
    Background->RGBColor[1, 1, 0]]}], "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[11]:=",ExpressionUUID->"773dbb6c-34a4-45cc-bcbf-c45bc6c4acde"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[1, "  ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156362069377613`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"cba5f6a6-90ed-4ca0-b012-dfa60de4539e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[2, "  ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636206939293*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"4f7d9685-c3b2-41f7-b5b3-1c92ffa2aeb8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm[3, "  ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636206941231*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"fed387dc-b54b-4d5c-ab62-1e0e656b0823"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "24"}],
  
  SequenceForm[4, "  ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156362069423523`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"97e95615-daa2-4f80-8ffe-7c691d65a5d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"5", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "120"}],
  SequenceForm[5, "  ", 120],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636206943449*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"54c32ecb-5be0-4169-9a21-e50f24ac5343"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"6", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "720"}],
  SequenceForm[6, "  ", 720],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636206944543*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"be44fe03-b014-4e29-a901-12c78818c4d8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "7", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "5040"}],
  SequenceForm[7, "  ", 5040],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156362069456387`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"b9162c68-72ce-4059-978c-d9c917d14cfe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "8", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "40320"}],
  SequenceForm[8, "  ", 40320],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636206946835*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"d58c30a1-4fb9-4cf5-a2dc-ad2510d4c7c7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "9", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "362880"}],
  SequenceForm[9, "  ", 362880],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156362069479303`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"9ca4110e-0463-400d-9837-ac469191f94e"]
}, Open  ]]
}, Open  ]],

Cell["\<\
To start the display with the value of 0!, which is 1, we indicate a \
beginning value of 0, as follows:\
\>", "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"c73b3baa-12bc-46cc-830e-00af02efe446"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Do",
   FontFamily->"Courier"], 
  StyleBox["[",
   FontFamily->"Courier"], 
  StyleBox["\n",
   FontFamily->"Courier"], 
  StyleBox[" ",
   FontFamily->"Courier"], 
  RowBox[{
   StyleBox[
    RowBox[{"Print", "[", 
     RowBox[{"i", ",", " ", "\"\<  \>\"", ",", " ", 
      RowBox[{"i", "!"}]}], "]"}],
    FontFamily->"Courier"], 
   StyleBox[",",
    FontFamily->"Courier"], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "9"}], "}"}],
    Background->RGBColor[1, 1, 0]]}], "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[12]:=",ExpressionUUID->"ebd62312-3fea-4dc3-8d76-92cef8e25f27"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"0", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[0, "  ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156362409903183`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"16011fa1-af9a-4707-97de-e67ea7eb47fa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[1, "  ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636240991988*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4a5ac6b3-686e-460c-8db3-db1f30f3afdb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[2, "  ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156362409944677`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"b29a57db-22f2-467e-b7d7-213f71b984bd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm[3, "  ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636240995726*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"5509c865-3f2d-41ae-9eb4-89a649364d97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "24"}],
  
  SequenceForm[4, "  ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636240997027*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6b9f78a2-27ce-4edb-adc6-3f027334f24b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"5", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "120"}],
  SequenceForm[5, "  ", 120],
  Editable->False]], "Print",
 CellChangeTimes->{3.91563624099866*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"17cec37d-06a0-4041-93a9-eb90de27bd85"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"6", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "720"}],
  SequenceForm[6, "  ", 720],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636241000195*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"65fed16e-d9ab-4f26-a736-14ec3d433eb6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "7", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "5040"}],
  SequenceForm[7, "  ", 5040],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636241001645*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"fb25fc13-5a89-4686-aa94-82a35683b56e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "8", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "40320"}],
  SequenceForm[8, "  ", 40320],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636241002884*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a0c60a9e-d102-4f3a-acd4-4a1f6b076e8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "9", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "362880"}],
  SequenceForm[9, "  ", 362880],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636241004097*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a3994d0e-b25d-4182-b918-cc8836de32c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 10.3",
 StyleBox["\t",
  FontWeight->"Plain"],
 "For this question, complete another version of the segment above that \
displays distance and time.  In this version, do not initialize ",
 StyleBox["dist",
  FontSlant->"Italic"],
 ".  Employ a loop with an index ",
 StyleBox["i",
  FontSlant->"Italic"],
 " that takes on integer values from 1 through 7.  Within the loop, make it \
so the value of ",
 StyleBox["dist",
  FontSlant->"Italic"],
 " is computed as 2.25",
 StyleBox["i",
  FontSlant->"Italic"],
 ".  After replacing each ",
 StyleBox["xxxxxxxxxx",
  FontSlant->"Italic"],
 " with the proper code, execute the cell, and compare the results with the \
similar segment above."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568070947749427*^9, 3.568070949962729*^9}, {
   3.75650699556606*^9, 3.756506996929578*^9}, 
   3.756949038891214*^9},ExpressionUUID->"18f84597-c3bb-4773-8c0d-\
ff3c9e33f064"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Do",
   FontFamily->"Courier"], 
  StyleBox["[",
   FontFamily->"Courier"], 
  StyleBox["\n",
   FontFamily->"Courier",
   FontSize->10], 
  StyleBox["  ",
   FontFamily->"Courier",
   FontSize->10], 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"dist", " ", "=", " ", 
      RowBox[{"2.25", "i"}]}],
     FontFamily->"Courier",
     FontSize->10], 
    StyleBox[";",
     FontFamily->"Courier",
     FontWeight->"Bold"], 
    StyleBox["\n",
     FontFamily->"Courier",
     FontSize->10,
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["t",
      FontFamily->"Courier",
      FontSize->10,
      FontWeight->"Bold"], 
     StyleBox["=",
      FontFamily->"Courier",
      FontSize->10,
      FontWeight->"Bold"], 
     StyleBox[
      FractionBox[
       RowBox[{"25.5", " ", "-", " ", 
        SqrtBox[
         RowBox[{"600.25", " ", "-", " ", 
          StyleBox[
           RowBox[{"19.6", 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["dist",
             FontSize->12]}],
           FontVariations->{"CompatibilityType"->0}]}]]}], "9.8"],
      FontSize->12]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<For distance = \>\"", ",", "dist", ",", "\"\< time = \>\"", ",", 
      "t", ",", "\"\< seconds.\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "7"}], "}"}],
    FontFamily->"Courier",
    FontSize->10]}], "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.75701383830634*^9, {3.9156364845004587`*^9, 3.9156365080838213`*^9}, {
   3.915636560824523*^9, 3.915636649079698*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"829fa221-1d76-4476-bb7a-4cf058fd7f36"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "2.25`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.19562931233752837`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 2.25, " time = ", 0.19562931233752837`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636652094083*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"244ceb92-c7d7-46dd-974f-342a97a41bcc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "4.5`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.2930079770058717`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 4.5, " time = ", 0.2930079770058717, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636652095879*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"4659090e-7d4a-46d8-8486-da1653873e92"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "6.75`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.3946783677033244`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 6.75, " time = ", 0.3946783677033244, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636652097878*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"00787d2d-cbff-4d35-86cb-4eab85ed4be1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "9.`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.5012635063475672`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 9., " time = ", 0.5012635063475672, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9156366520993967`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"0fd58e9f-d2a5-474b-b315-de27a330a313"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "11.25`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.613553543887237`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 11.25, " time = ", 0.613553543887237, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636652100831*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"15a20015-15c6-45c6-953a-b81df42cf987"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "13.5`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.7325761979976163`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 13.5, " time = ", 0.7325761979976163, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915636652102392*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"f7cd0c69-f20b-4dc9-bc8a-3e3d4e5bae41"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For distance = \"\>", "\[InvisibleSpace]", "15.75`", 
   "\[InvisibleSpace]", "\<\" time = \"\>", "\[InvisibleSpace]", 
   "0.8597106852336065`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "For distance = ", 15.75, " time = ", 0.8597106852336065, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.91563665210376*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"f5338909-0d4d-4b1e-a515-98e086f3d38a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 10.4",
 StyleBox["\t",
  FontWeight->"Plain"],
 "\na.  Clear possible values for the symbols ",
 StyleBox["g",
  FontSlant->"Italic"],
 " and ",
 StyleBox["x",
  FontSlant->"Italic"],
 "."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.75650700266877*^9, 3.756507004267723*^9}, 
   3.756949039542932*^9},ExpressionUUID->"23385741-a43e-4899-b982-\
74adc9194e36"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"g", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.91563668090781*^9, 3.9156366873129168`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d3f140aa-d3d3-40c4-8838-8c889031298f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b.  Define the function ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = ln(3",
 StyleBox["x",
  FontSlant->"Italic"],
 " + 2).  Recall that ",
 StyleBox["Log",
  FontSlant->"Italic"],
 " is the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function for the natural logarithm."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"2304c174-f849-4ae7-8dc9-d82205cc5d74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"Log", "[", 
   RowBox[{
    RowBox[{"3", "x"}], "+", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.915636755647499*^9, 3.915636797249361*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"4d85adc9-9569-410a-8cf3-cb8eb86b0d39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "c.  Write a loop that prints the value of ",
 StyleBox["k",
  FontSlant->"Italic"],
 " and ",
 StyleBox["g",
  FontSlant->"Italic"],
 "(",
 StyleBox["k",
  FontSlant->"Italic"],
 ") for ",
 StyleBox["k",
  FontSlant->"Italic"],
 " taking on integer values from 1 through 8."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"4126b298-cdca-42c7-b75a-d337cfa13a87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Val of k =\>\"", ",", " ", 
     RowBox[{"g", "[", "k", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "8"}], "}"}],
    FontFamily->"Courier",
    FontSize->10]}], 
  StyleBox["]",
   FontFamily->"Courier",
   FontSize->10]}]], "Input",
 CellChangeTimes->{{3.91563684184225*^9, 3.9156369131106462`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"44b90e93-a598-4f38-9e6b-ccfcb6e04f85"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "5", "]"}]}],
  SequenceForm["Val of k =", 
   Log[5]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.9156369137141647`*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"8bc6fb3b-0ec1-4dd3-a9bd-ff927ee27e1b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "8", "]"}]}],
  SequenceForm["Val of k =", 
   Log[8]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.915636913715794*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"bb782acd-12fe-452d-9779-125f3662959d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "11", "]"}]}],
  SequenceForm["Val of k =", 
   Log[11]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.9156369137178593`*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"e4f86efc-2a9a-498a-b61e-936cd4939948"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "14", "]"}]}],
  SequenceForm["Val of k =", 
   Log[14]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.915636913719325*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"f42aa62c-51c1-4779-b366-2b54d9577d0c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "17", "]"}]}],
  SequenceForm["Val of k =", 
   Log[17]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.915636913720684*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"42c9be48-bf55-48ce-a9d6-8e885daf3045"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "20", "]"}]}],
  SequenceForm["Val of k =", 
   Log[20]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.915636913722012*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"01f02cda-8ed6-4f0f-9c0d-9a5987cbeab2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "23", "]"}]}],
  SequenceForm["Val of k =", 
   Log[23]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.915636913723281*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"e4ac4a6d-503b-42b4-a3d7-8e4c16e95524"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Val of k =\"\>", "\[InvisibleSpace]", 
   RowBox[{"Log", "[", "26", "]"}]}],
  SequenceForm["Val of k =", 
   Log[26]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.915636899258315*^9, 3.915636913724564*^9}},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"b705cb90-c641-49ce-b4c5-d4d314ae2645"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["11. Plotting", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.7565070109146013`*^9, 
  3.756507012167713*^9}},ExpressionUUID->"8d278cc3-b6a7-4472-b929-\
c445b8b51d3b"],

Cell[TextData[{
 "We employ the ",
 StyleBox["Plot",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " command for graphing functions of one variable.  The basic form of the \
command gives the function to graph (",
 StyleBox["g",
  FontSlant->"Italic"],
 "), the independent variable (",
 StyleBox["x",
  FontSlant->"Italic"],
 "), and the endpoints of the interval on which to graph the function, as \
follows:\n       ",
 StyleBox["Plot[",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["g",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", {",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["x",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["min",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[", ",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["max",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox["}]",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" ",
  FontFamily->"Courier"],
 StyleBox["\n",
  FontFamily->"Courier",
  FontSize->10],
 "For example, suppose ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") is defined as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "1a78cf7b-050e-4989-80f1-94bffa2e2c69"],
 ".  The following command graphs ",
 StyleBox["f",
  FontSlant->"Italic"],
 " with ",
 StyleBox["t",
  FontSlant->"Italic"],
 " varying from \[Dash]1 to 2:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568070991803162*^9, 
  3.568070998603213*^9}},ExpressionUUID->"a5501f56-4e3b-4136-92fc-\
779d126fad93"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "t_", "]"}], ":=", " ", 
    RowBox[{"t", "^", "2"}]}], ";"}],
  FontFamily->"Courier",
  FontWeight->"Bold",
  Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   StyleBox["Plot",
    FontWeight->"Bold",
    Background->RGBColor[1, 1, 0]], "[", " ", 
   RowBox[{
    RowBox[{"f", 
     StyleBox["[",
      Background->RGBColor[1, 1, 0]], 
     StyleBox["t",
      Background->RGBColor[1, 1, 0]], 
     StyleBox["]",
      Background->RGBColor[1, 1, 0]]}], ",", " ", 
    RowBox[{
     StyleBox["{",
      Background->RGBColor[1, 1, 0]], 
     RowBox[{"t", ",", " ", 
      RowBox[{"-", "1"}], ",", " ", "2"}], 
     StyleBox["}",
      Background->RGBColor[1, 1, 0]]}]}], "]"}],
  FontFamily->"Courier"]}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568071039400897*^9, 3.568071048426703*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"d97ec931-2bff-41d2-98f0-7b5db5db47ce"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 2}, {0., 3.9999997551020448`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9156394816396112`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"defa0f8d-d3be-4026-b53d-5a64a2bca831"]
}, Open  ]],

Cell[TextData[{
 "Notice that we use ",
 StyleBox["f",
  FontSlant->"Italic"],
 "[",
 StyleBox["t",
  FontSlant->"Italic"],
 "], not just ",
 StyleBox["f",
  FontSlant->"Italic"],
 "; and the independent variable (",
 StyleBox["t",
  FontSlant->"Italic"],
 ") along with the endpoints of the interval to plot appear in braces.  \
Instead of employing the name of the function, such as ",
 StyleBox["f",
  FontSlant->"Italic"],
 "[",
 StyleBox["t",
  FontSlant->"Italic"],
 "], we can obtain the same results by using its definition, as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"97c28122-fcda-461d-a2e6-ebb8f5e163da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Plot",
   FontFamily->"Courier"], 
  StyleBox["[",
   FontFamily->"Courier"], 
  RowBox[{
   StyleBox[
    SuperscriptBox["t", "2"],
    Background->RGBColor[1, 1, 0]], 
   StyleBox[",",
    Background->RGBColor[1, 0.700008, 0.4]], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"t", ",", " ", 
      RowBox[{"-", "1"}], ",", " ", "2"}], "}"}],
    FontFamily->"Courier"]}], 
  StyleBox["]",
   FontFamily->"Courier"]}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[20]:=",ExpressionUUID->"9b9a51a2-0f0d-4acd-b73d-087d78523eb1"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwdmHc8Ffz//q2ojFOyR1GIsrJKdF6HQlllJqQyMrI32W4rskf2zMpe2W/j
EG6yjlU+NlGyQ5TzvX+/v56P59/X9cf1uLiN7TTNyEhISJhJSUj+H7uMuGeJ
xE1U0iLf+h+Bb19S1fVwEzHwHBttbG1C6FvlhvWtTYRIqyPm5jdBtdkpbmp+
ExEuc0cNdm7CCGu3UnXnJjo+3heZDNmEOYJVxcuQTaR6Nmw+7twm/FGu8R+g
20QbiYoUtTwbIHFTiSeVcwPdsL96P+PxOuDQ+dkc+nWkfjw+V5C1CiJZBRma
174jX8FgmRPTZYjPzg9NVFlFYzlGTxgcFyBRU3lV8d4KimFp0V/5MwOehg2q
mc+WUHlwRcOD7Sk4ZhzgM9VcQIc06mlnjgmws/ngeov6HNr0rRv9mzEESQo8
ll5fp5GTcgf/8ak+CDx78vJxzyRKFt19ZnmjE4z62S9wNUwimb585lnWTrgV
KY1WiybR65NxJROyTtg478LsGT6JZqVKzyeNdoA+6/qnNPVJdPmbqEqJaweI
8n/hXyBMoCSFBJ23qB2mFeq+W8+PI7Wj4U8Chm0g6W9rG3BEQD1BUvfe+TcB
Q8RsU9IPAspI8tIO1W+CncRHZ0qnCej0MYtkvHgTlJWI5U20ElBmnbY5cbkR
+Cf3pwQDCWiGZDLqimojcIj4KkxQE1DUPO12DmcDUPwvikOQcxTVjkrteY/V
wcI3Eis5ulGkzaKEWa2sg/Ydh4+6xBEUUVZ6ZBNZBz6ntTX950dQy6C3/IBS
HRyKs4SOvx9B15cFEqeaamH9Tdaun/AIumVYqSZQVAOjtyr7xmAYMb32/pv3
rgqELQdf54sMoy+2e+WDLlXwJvmnoNulYdT1oZWLXasKcEcCUSzEIXSaVO0O
A10VlDXlaBm0DiFdVg3jqKBKCMPGT8/JDiEiyYFBkWcF+IRuTE84fUYcT5zY
J49KQHLtGnhofUZ0b8QZn7aUwPoD82w28c9IVS0l/IpfCTyhnjN7ujOACt8Y
bDhTloBE5PDGgv0AWp0rCRdg+gDf42pINmz6UcjxG94vckWgk+nJQ2HRh7Br
EuN6fe8hpZacauhBH5I2+ayW9u49zPwbsZZ6vQ9Nsfn1spi/B4vDjDLxzV7E
eFdwoJniPXhpdN4yce1FFm4Fpyrl8yCPnEat458e5GsnIKPcmwM75ukuftnd
yDbdoB5Is+CmD5+eamA3ann320ypNBO84stvs5h1ow0HaxN/vUygbG8nlvN3
I9nERVeVigxgY1sJmy3vQrH5zCS3zNJBrl84A9uKRxwriamOSykQLdrW/edL
B2qc2963uZUIgzG59tDYgW7YvGwP/pEAdLvBbAHJHejUN5pQ3swECK9Vs6XS
60AdOZtnflElQPDtr4z0Y+0o4zbN3NfZOPC6t296dbANjfzIHuspjIGm91N0
VmVtiENd0kTONAaOKFvqS962IXz60TpwxYBbbyCNmGobEjjF/utzcjQspl22
8IhFqHDVrNySLwo+V+hR5gW3INVCn37AhoOq0yV9AYUWFMayaLPV9QZ6JVdK
y8hbkK/JB6pS9TeAb3TSafBrRqlh5jzKJmHQgI/M++zZhGKYIskYkkMgbxIv
/9u2ATmLx2usSP0Dl1PDE32EGtCTh1IeuoOBkPlU8zv5ej06UJBNHrEIhJSF
2Rg6y3pk0unUsZERANHrR3NXTD6i3yfRDXXM/vCa5Iav+uNaJL1z2uWsmxec
/nZPj5K5FhXy/+qN6X8N8QN6N1rHaxDZzJdcTp7XUJLityikW4MCu2JX5Kc8
YFpiSIlWpxpVhtQUdBq4gQX7ElcXQzWKrrXmsWt3hT3Sw99ehCpkZHyR75KA
K9AOXipZ16pCn27Z1kecOAPW0u5cv2Ylwk8ilox2R+h7GLgWSF+JmE/uttjc
dARdqaQOmZEKpJfTviJX7gB25Mj5g0YFKjQv6jnIsweQ4axizC5Dc3060eIa
NkCWZ3A3Lq0YWRn8eGXD/RLYHAJ/kXEUo+nAK9rpamYgjv1Q4JhahISK1RXH
vU3BdPKIWjOlEJlsed83+W4MXTQphHPv8pFat1/o6LdnMDPVHuzHnI9If3Ed
dvoZwX7+2q2txPfI+lLB627up8AnJ50+mJCH7MzNWkm99CHUZdIsMi4HCeKL
xDRidCBLnoTlhD4HFQ95yI1YaUMDhr/PJjYbLU2KmJqpasH3IjdhtZgsFDCt
ttx+VQPI3DLnms9loW8TtXfDuR+BZGgk7xOuTESTQWU9oKgOic1CG8wX09Hc
89ySAh9l6Nb11jzgSEOukrmn/626Dwdb/XXj7KnIn9Qugv5AEfR4rX0TWJPR
hq8VNV3FXQhDTYvOLO+QllgKZQePPDQ+ob6vzZyErk0nCKQU4YA9svjcBcYE
ZCy4MGDzSQZaCc/cFHnjEQNVJGnIU2l4zs444yEZhxYLHK7VYG5CXqHvhzmd
GDQvM2eg3CMGipsS9Awvo9E5kVem1Z9FYegVYTtyPRK1DBngny8IgV5wUYSh
UDj6qF/r2c9wFdIuMOh3qoUhBscwSSwZD8xl+Vy9ZhuCKhkHvkxc5QYe4bW9
6MggxBFOMiZGzQmWTVodB2WB6DG5Yu+pmyxQdr81ymjQH9HHW8Xyj16ApQ8a
jW9mfVGc5/RzKYQB624+HT0uL0R2kq3YVH8afs0db/K+cEeOVbzjs7Fk4HM8
9GY32xm1iQxevJ96hKVkyudtX7BHKYaDS5iRbSzni30/TiUrtDSe9Ecofhkr
nJhVV99jjHgcLpS60I5jfRITJgviddH8dk6T2AzC/kNWiPF4hkW1h9tjlwgR
2B1tyrulcXfA9MXfCC3dcCzbdZvlmhe6wCOtxEX5EGG9ntPcgXJj8JMubR8Y
HsNaXTemyhOyAl2m9LxXVstYweOvFhTj9rAnUBZy8+M2Nm+O8rNUgjO0XHsT
7e55hOXoviFuqe0OnYoOrl6+ZBD3wfBd6gUv4CkyUDfMOQ1nY0L+Doz4QpAs
xdDX9xiQk3lyg6TXH5z8ar3/4i/An9INk+TCQOA+Vlo1vMoC9Vz/JIqFBoFG
ZMNVmiMOcI5j7f3XPARIOE9lBF3kBlHK8mNTpTBgIabRCx1egXX3e8InfOFg
Z5Pn8OfMVSj4MfU8ifItnLJgb9rVugZRFmSLS8bRcEhSQinUIwrr3GpelZox
kD1EF27aLgbKX5MYfeRjweZlEUXFuARQqgvdZ74cD8ZLQRMBOtJgSuU+v3g+
Ad72fxI9i2Sgo63Ds4I0ESY95Xzf38OCj7he6YP5JPjGsPGXekQOptdzFJmG
34Fswkn8AfYu3M7/ObvQlgzZh8V8PxvuwT5LIL1XViqkWkxI708pgc1JqVvZ
s0xQ/+lzya9DHZYNvEJbrmbBubsfu/738BHE13OP5WZmATnpX3c/BQ3YcbC2
tY/KBl8NxwmCghaULZFmn7HLhal7FM4NKY/BlRE7xLCdC/aE8u32L3qAVfQk
XnLKA6nr3/VprujDQMHOUym393BfmHrrZb8hrFstspn4FoCygm8sq9wLqEm9
pGxLWggDAtG+vGTG4NVv4OERWAjfHCyMNT8ZA7UwYSIqpAhmBO3OYIxM4do2
Pr456gPMqY1NX2gxhx1uUvyn8yXA9pDb/WqmBTRq3tkdiSuBH9USZwyDLOFB
Ta3GWlIpPCqspOE3egUWbvl0TFnlICJLkawiZwejJ3fxNycrgeN0sMncihNI
MS8Y3GGtAlte89ltd2dIEfHbldevgrd718cv0LqA8fPmy+rTVSBS+FwiTMYV
dtol/E3nquGPqWu1dKU7nA/ixcas1kKDhFZzJdEbnNM7xxIF6qDD1m6lr8oH
Jmtf2KRZ1UGyvl34nrkvZK2kpxWs1wHhCm2urLUfiN5nOm7Z+ghFMnTAs+YP
D6mp6r8fNoApk+UfH4YgSKynfpgq2QiqRV+EXN2CYMbs3IqKYyPIzerEaX0N
Ats2VobSH43wSMLyqO19MES4CNrbzTTB7wBy6ZcKodAzq8G/19kCQVWU7l/K
w4FLX73f51MbKJTmntS8iwF8xRDzxHIbuBfsT8RNxoAFlZaJCEU73HBS/3eZ
JRbKax4fzeLaQdyXhmQxJRawmBf8co3t4G/ZkS2fFweGeKd/yEs7QDqEsTux
PwGShZNlQ2PxcOWbXmysUwrI325vs6zGA/PWuJhpTwqsK6zdUyHgAb1SOWzm
TAXcU2k1OqYuuNzEvEPelwqr4VNP45O7QKLxTvY3/nS4tcbqm5XVDV1ps/tk
JFkwmZvSXl/WA74X+y8NnsmFgPIOhZTBHqBRd4Ri2VwQbPre+3qrB7bq4rZ7
/uut38jtEaxYL3RK3KcdHs8FftKvC/jaXoiac7tMU5gH7kbsFMPNfYAOtzuF
HucDM2ua4lpfPwRc11i8uFoEjbGcoTd+/DdtMohqjy8XgyFNZq8H9QC4mx19
GTIshhxitupZ1QFw2CYYhIwUg+BKgeb1gQEwInL+Jm3/ALjqaiObwc9wa5eY
LVRcCrX5Zk2HlkPgnu6vWz5eATM471Ev2xEQfU9OiJOphdUc5ppw7xGY3xq3
1zKqhR2KqviUiBHAXYs2E/GvBareFZ364hE487JGV/ZTLYhqPJrcXRmBVlL8
42LtOgh4ceV/Vs9Goa2XSBh3/gi8Ab0reo8IwJ621uTQ1wDWnYxHEmLjIKcc
LFPe1wq/iWRuofLjoENevE192ArBslu7XzXHQaKB/3cYL4Ls2r6fAU7joM9+
88+aH4LxAt/5oZpxSJpWWUvjaAO5iLUe65sTECQk8Zxmsg2YdFqS8mQnAZ96
ZcjSoAPaVkwlGZS+wGCRd/3F+C54qMdpnss0A7U3lMwClPvBA096OWhtDug7
xrz154ZBSGiITXVrASZ6F/jxVuNwIjtK94qwBDmqy82Yi19BLP3GW875FRCl
GX5QbzAHW9N88zJLq5DX7lhQa7gI/Z2PRKvw30FHRzxZ33QFqI/HzjQPrEOY
fVe3+M81MJ+KmuGs2YDnrxyGS11+Qr6KPd7l/haoGF6vEI/dgn81u434VLYh
6cDDn75yB3xL6/YDZHfAQi8oiLp3D0wrCFoC8ruw7+XWLC58AJOUb8teS+2B
+PR+40bobzg/cG6PnO8XCJo6V/PsHYOXTMfJmMA+jCx7z3lUn4DLX1oqbY4D
mGWlnRmuIMFlmYcQ2K8cwr838XeHJMhw0XL9Eay8v0GcV2Dzcgc5js7ug/x/
kcHbNwqs1ndP4Vrv1bfUsR3D8rBw6bVflLi/Ns+kdOn+wLtJHxXO5NM4UqqR
5Ot///M7XxVn5c/ipO47diiTnIDW5j2hCC4a3NF0ySrjzgksaFf5nvtJi7tn
3ROttn8ChImuW9K/aHFvjxdvBR2dgAi5HZ3JX1ocFxt72B4ZEa5pBWAaaelw
So/DBEYv/OeTJRYuwnS4+GEzq2hJIqi4nnfjtqfDCXdfXD/rQQRGclaKh3t0
OHed2/Hy3kRwipt/mPqHDte+pCPr6U8EmX6oX6XA4LTJ30ashRGB7mbLTDAj
BvcadyzYk0IEtN0UMCSFwfU0TtgENRMBd9zDl+yBwdEr7zK2tBFBh35d5sAf
gzOcomvdwxOBMJxno/sGg9s8UKAzHSDCBeUJPpZUDI5JsqZMfoYIaZdwW4XN
GNxz/KCu5wIRaDzPfcd0YXBFWj9OKleIsOTlSuI+gMHJOl5+yL1JhKnX5IEq
MxhcMCn2QG+XCPtu1zbrVjC4oegnmdEHRPDh+OZ2ZRODY+NyUeo5JoKjpTRn
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 2}, {0., 3.9999997551020448`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9156394993572187`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"788c4446-5174-42b1-bc80-5a526fd940a3"]
}, Open  ]],

Cell[TextData[{
 "To obtain the ",
 StyleBox["Plot",
  FontSlant->"Italic"],
 " template below using the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 ", we open ",
 StyleBox["Basic Commands,",
  FontSlant->"Italic"],
 " click on the ",
 StyleBox["2D",
  FontSlant->"Italic"],
 " tab, and then click on ",
 StyleBox["Plot",
  FontSlant->"Italic"],
 " under ",
 StyleBox["Visualizing Functions",
  FontSlant->"Italic"],
 ".  We then can tab from element to element."
}], "Text",
 CellChangeTimes->{{3.455382267788172*^9, 
  3.455382464174839*^9}},ExpressionUUID->"0666771e-af57-4035-b31e-\
b6ba2d36a47c"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   TagBox[
    FrameBox["function"],
    "Placeholder"], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FrameBox["var"],
      "Placeholder"], ",", 
     TagBox[
      FrameBox["min"],
      "Placeholder"], ",", 
     TagBox[
      FrameBox["max"],
      "Placeholder"]}], "}"}]}], "]"}]], "Input",
 CellMargins->{{21.333333333333332`, 10.}, {0., 
  7.}},ExpressionUUID->"9d973318-c369-498f-a2b8-8549641cb364"],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 11.1",
 StyleBox["  ",
  FontWeight->"Plain"],
 "Graph ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["e",
     FontWeight->"Plain",
     FontSlant->"Italic",
     FontTracking->"Plain",
     FontVariations->{"CompatibilityType"->0,
     "Outline"->False,
     "Shadow"->False,
     "StrikeThrough"->False,
     "Underline"->False},
     FontVariations -> {"Masked" -> False},
     FontVariations -> {"RotationAngle" -> 0}], 
    StyleBox[
     RowBox[{"sin", "(", 
      StyleBox["x",
       FontSlant->"Italic"], ")"}],
     FontWeight->"Plain"]], TraditionalForm]],ExpressionUUID->
  "4c39a83b-05db-47ac-95c7-bb30b74fcb24"],
 " from -3 to 3.  Do not define a function for this expression but place the \
expression in the ",
 StyleBox["Plot",
  FontSlant->"Italic"],
 " command."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756507020687871*^9, 3.756507021849606*^9}, 
   3.756949040326206*^9, {3.915122001992084*^9, 
   3.915122008276178*^9}},ExpressionUUID->"9039e79f-7a47-4984-9f78-\
74683219f44c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"Sin", "[", "x", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.915639528890626*^9, 3.915639566137993*^9}, {
  3.915639708179926*^9, 3.915639782581585*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"4efaa146-a7cf-4117-87fb-a96bf8caf753"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 2.7182816772389633`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9156395674451027`*^9, {3.9156397105082827`*^9, 3.915639732701169*^9}, {
   3.9156397685108852`*^9, 3.915639783247587*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"f58a6522-e573-43ad-946e-a3bdfa7b14e2"]
}, Open  ]],

Cell[TextData[{
 "After braces containing the interval and a comma in the ",
 StyleBox["Plot",
  FontSlant->"Italic"],
 " command, an ",
 StyleBox["AxesLabel",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " option generates axes labels, which should appear in all scientific \
graphics.  Following ",
 StyleBox["AxesLabel",
  FontSlant->"Italic"],
 ", the option has a hyphen (-) with a greater-than symbol (>) and braces \
containing the labels, which usually appear in quotation marks.  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " changes -> that we type to a right arrow, ",
 "\[Rule]",
 ".  The command that follows plots the graph and labels the horizontal and \
vertical axes with ",
 StyleBox["t",
  FontSlant->"Italic"],
 " and ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", respectively:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.455377358343983*^9, 
  3.455377452720228*^9}},ExpressionUUID->"736c45ff-b361-4e13-9ceb-\
adaf332ee33a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   StyleBox[
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}],
    Background->RGBColor[1, 1, 0]]}], "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[30]:=",ExpressionUUID->"64780590-2172-47b9-b1e5-1f48d2c7a9c6"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwdmHc8Ffz//q2ojFOyR1GIsrJKdF6HQlllJqQyMrI32W4rskf2zMpe2W/j
EG6yjlU+NlGyQ5TzvX+/v56P59/X9cf1uLiN7TTNyEhISJhJSUj+H7uMuGeJ
xE1U0iLf+h+Bb19S1fVwEzHwHBttbG1C6FvlhvWtTYRIqyPm5jdBtdkpbmp+
ExEuc0cNdm7CCGu3UnXnJjo+3heZDNmEOYJVxcuQTaR6Nmw+7twm/FGu8R+g
20QbiYoUtTwbIHFTiSeVcwPdsL96P+PxOuDQ+dkc+nWkfjw+V5C1CiJZBRma
174jX8FgmRPTZYjPzg9NVFlFYzlGTxgcFyBRU3lV8d4KimFp0V/5MwOehg2q
mc+WUHlwRcOD7Sk4ZhzgM9VcQIc06mlnjgmws/ngeov6HNr0rRv9mzEESQo8
ll5fp5GTcgf/8ak+CDx78vJxzyRKFt19ZnmjE4z62S9wNUwimb585lnWTrgV
KY1WiybR65NxJROyTtg478LsGT6JZqVKzyeNdoA+6/qnNPVJdPmbqEqJaweI
8n/hXyBMoCSFBJ23qB2mFeq+W8+PI7Wj4U8Chm0g6W9rG3BEQD1BUvfe+TcB
Q8RsU9IPAspI8tIO1W+CncRHZ0qnCej0MYtkvHgTlJWI5U20ElBmnbY5cbkR
+Cf3pwQDCWiGZDLqimojcIj4KkxQE1DUPO12DmcDUPwvikOQcxTVjkrteY/V
wcI3Eis5ulGkzaKEWa2sg/Ydh4+6xBEUUVZ6ZBNZBz6ntTX950dQy6C3/IBS
HRyKs4SOvx9B15cFEqeaamH9Tdaun/AIumVYqSZQVAOjtyr7xmAYMb32/pv3
rgqELQdf54sMoy+2e+WDLlXwJvmnoNulYdT1oZWLXasKcEcCUSzEIXSaVO0O
A10VlDXlaBm0DiFdVg3jqKBKCMPGT8/JDiEiyYFBkWcF+IRuTE84fUYcT5zY
J49KQHLtGnhofUZ0b8QZn7aUwPoD82w28c9IVS0l/IpfCTyhnjN7ujOACt8Y
bDhTloBE5PDGgv0AWp0rCRdg+gDf42pINmz6UcjxG94vckWgk+nJQ2HRh7Br
EuN6fe8hpZacauhBH5I2+ayW9u49zPwbsZZ6vQ9Nsfn1spi/B4vDjDLxzV7E
eFdwoJniPXhpdN4yce1FFm4Fpyrl8yCPnEat458e5GsnIKPcmwM75ukuftnd
yDbdoB5Is+CmD5+eamA3ann320ypNBO84stvs5h1ow0HaxN/vUygbG8nlvN3
I9nERVeVigxgY1sJmy3vQrH5zCS3zNJBrl84A9uKRxwriamOSykQLdrW/edL
B2qc2963uZUIgzG59tDYgW7YvGwP/pEAdLvBbAHJHejUN5pQ3swECK9Vs6XS
60AdOZtnflElQPDtr4z0Y+0o4zbN3NfZOPC6t296dbANjfzIHuspjIGm91N0
VmVtiENd0kTONAaOKFvqS962IXz60TpwxYBbbyCNmGobEjjF/utzcjQspl22
8IhFqHDVrNySLwo+V+hR5gW3INVCn37AhoOq0yV9AYUWFMayaLPV9QZ6JVdK
y8hbkK/JB6pS9TeAb3TSafBrRqlh5jzKJmHQgI/M++zZhGKYIskYkkMgbxIv
/9u2ATmLx2usSP0Dl1PDE32EGtCTh1IeuoOBkPlU8zv5ej06UJBNHrEIhJSF
2Rg6y3pk0unUsZERANHrR3NXTD6i3yfRDXXM/vCa5Iav+uNaJL1z2uWsmxec
/nZPj5K5FhXy/+qN6X8N8QN6N1rHaxDZzJdcTp7XUJLityikW4MCu2JX5Kc8
YFpiSIlWpxpVhtQUdBq4gQX7ElcXQzWKrrXmsWt3hT3Sw99ehCpkZHyR75KA
K9AOXipZ16pCn27Z1kecOAPW0u5cv2Ylwk8ilox2R+h7GLgWSF+JmE/uttjc
dARdqaQOmZEKpJfTviJX7gB25Mj5g0YFKjQv6jnIsweQ4axizC5Dc3060eIa
NkCWZ3A3Lq0YWRn8eGXD/RLYHAJ/kXEUo+nAK9rpamYgjv1Q4JhahISK1RXH
vU3BdPKIWjOlEJlsed83+W4MXTQphHPv8pFat1/o6LdnMDPVHuzHnI9If3Ed
dvoZwX7+2q2txPfI+lLB627up8AnJ50+mJCH7MzNWkm99CHUZdIsMi4HCeKL
xDRidCBLnoTlhD4HFQ95yI1YaUMDhr/PJjYbLU2KmJqpasH3IjdhtZgsFDCt
ttx+VQPI3DLnms9loW8TtXfDuR+BZGgk7xOuTESTQWU9oKgOic1CG8wX09Hc
89ySAh9l6Nb11jzgSEOukrmn/626Dwdb/XXj7KnIn9Qugv5AEfR4rX0TWJPR
hq8VNV3FXQhDTYvOLO+QllgKZQePPDQ+ob6vzZyErk0nCKQU4YA9svjcBcYE
ZCy4MGDzSQZaCc/cFHnjEQNVJGnIU2l4zs444yEZhxYLHK7VYG5CXqHvhzmd
GDQvM2eg3CMGipsS9Awvo9E5kVem1Z9FYegVYTtyPRK1DBngny8IgV5wUYSh
UDj6qF/r2c9wFdIuMOh3qoUhBscwSSwZD8xl+Vy9ZhuCKhkHvkxc5QYe4bW9
6MggxBFOMiZGzQmWTVodB2WB6DG5Yu+pmyxQdr81ymjQH9HHW8Xyj16ApQ8a
jW9mfVGc5/RzKYQB624+HT0uL0R2kq3YVH8afs0db/K+cEeOVbzjs7Fk4HM8
9GY32xm1iQxevJ96hKVkyudtX7BHKYaDS5iRbSzni30/TiUrtDSe9Ecofhkr
nJhVV99jjHgcLpS60I5jfRITJgviddH8dk6T2AzC/kNWiPF4hkW1h9tjlwgR
2B1tyrulcXfA9MXfCC3dcCzbdZvlmhe6wCOtxEX5EGG9ntPcgXJj8JMubR8Y
HsNaXTemyhOyAl2m9LxXVstYweOvFhTj9rAnUBZy8+M2Nm+O8rNUgjO0XHsT
7e55hOXoviFuqe0OnYoOrl6+ZBD3wfBd6gUv4CkyUDfMOQ1nY0L+Doz4QpAs
xdDX9xiQk3lyg6TXH5z8ar3/4i/An9INk+TCQOA+Vlo1vMoC9Vz/JIqFBoFG
ZMNVmiMOcI5j7f3XPARIOE9lBF3kBlHK8mNTpTBgIabRCx1egXX3e8InfOFg
Z5Pn8OfMVSj4MfU8ifItnLJgb9rVugZRFmSLS8bRcEhSQinUIwrr3GpelZox
kD1EF27aLgbKX5MYfeRjweZlEUXFuARQqgvdZ74cD8ZLQRMBOtJgSuU+v3g+
Ad72fxI9i2Sgo63Ds4I0ESY95Xzf38OCj7he6YP5JPjGsPGXekQOptdzFJmG
34Fswkn8AfYu3M7/ObvQlgzZh8V8PxvuwT5LIL1XViqkWkxI708pgc1JqVvZ
s0xQ/+lzya9DHZYNvEJbrmbBubsfu/738BHE13OP5WZmATnpX3c/BQ3YcbC2
tY/KBl8NxwmCghaULZFmn7HLhal7FM4NKY/BlRE7xLCdC/aE8u32L3qAVfQk
XnLKA6nr3/VprujDQMHOUym393BfmHrrZb8hrFstspn4FoCygm8sq9wLqEm9
pGxLWggDAtG+vGTG4NVv4OERWAjfHCyMNT8ZA7UwYSIqpAhmBO3OYIxM4do2
Pr456gPMqY1NX2gxhx1uUvyn8yXA9pDb/WqmBTRq3tkdiSuBH9USZwyDLOFB
Ta3GWlIpPCqspOE3egUWbvl0TFnlICJLkawiZwejJ3fxNycrgeN0sMncihNI
MS8Y3GGtAlte89ltd2dIEfHbldevgrd718cv0LqA8fPmy+rTVSBS+FwiTMYV
dtol/E3nquGPqWu1dKU7nA/ixcas1kKDhFZzJdEbnNM7xxIF6qDD1m6lr8oH
Jmtf2KRZ1UGyvl34nrkvZK2kpxWs1wHhCm2urLUfiN5nOm7Z+ghFMnTAs+YP
D6mp6r8fNoApk+UfH4YgSKynfpgq2QiqRV+EXN2CYMbs3IqKYyPIzerEaX0N
Ats2VobSH43wSMLyqO19MES4CNrbzTTB7wBy6ZcKodAzq8G/19kCQVWU7l/K
w4FLX73f51MbKJTmntS8iwF8xRDzxHIbuBfsT8RNxoAFlZaJCEU73HBS/3eZ
JRbKax4fzeLaQdyXhmQxJRawmBf8co3t4G/ZkS2fFweGeKd/yEs7QDqEsTux
PwGShZNlQ2PxcOWbXmysUwrI325vs6zGA/PWuJhpTwqsK6zdUyHgAb1SOWzm
TAXcU2k1OqYuuNzEvEPelwqr4VNP45O7QKLxTvY3/nS4tcbqm5XVDV1ps/tk
JFkwmZvSXl/WA74X+y8NnsmFgPIOhZTBHqBRd4Ri2VwQbPre+3qrB7bq4rZ7
/uut38jtEaxYL3RK3KcdHs8FftKvC/jaXoiac7tMU5gH7kbsFMPNfYAOtzuF
HucDM2ua4lpfPwRc11i8uFoEjbGcoTd+/DdtMohqjy8XgyFNZq8H9QC4mx19
GTIshhxitupZ1QFw2CYYhIwUg+BKgeb1gQEwInL+Jm3/ALjqaiObwc9wa5eY
LVRcCrX5Zk2HlkPgnu6vWz5eATM471Ev2xEQfU9OiJOphdUc5ppw7xGY3xq3
1zKqhR2KqviUiBHAXYs2E/GvBareFZ364hE487JGV/ZTLYhqPJrcXRmBVlL8
42LtOgh4ceV/Vs9Goa2XSBh3/gi8Ab0reo8IwJ621uTQ1wDWnYxHEmLjIKcc
LFPe1wq/iWRuofLjoENevE192ArBslu7XzXHQaKB/3cYL4Ls2r6fAU7joM9+
88+aH4LxAt/5oZpxSJpWWUvjaAO5iLUe65sTECQk8Zxmsg2YdFqS8mQnAZ96
ZcjSoAPaVkwlGZS+wGCRd/3F+C54qMdpnss0A7U3lMwClPvBA096OWhtDug7
xrz154ZBSGiITXVrASZ6F/jxVuNwIjtK94qwBDmqy82Yi19BLP3GW875FRCl
GX5QbzAHW9N88zJLq5DX7lhQa7gI/Z2PRKvw30FHRzxZ33QFqI/HzjQPrEOY
fVe3+M81MJ+KmuGs2YDnrxyGS11+Qr6KPd7l/haoGF6vEI/dgn81u434VLYh
6cDDn75yB3xL6/YDZHfAQi8oiLp3D0wrCFoC8ruw7+XWLC58AJOUb8teS+2B
+PR+40bobzg/cG6PnO8XCJo6V/PsHYOXTMfJmMA+jCx7z3lUn4DLX1oqbY4D
mGWlnRmuIMFlmYcQ2K8cwr838XeHJMhw0XL9Eay8v0GcV2Dzcgc5js7ug/x/
kcHbNwqs1ndP4Vrv1bfUsR3D8rBw6bVflLi/Ns+kdOn+wLtJHxXO5NM4UqqR
5Ot///M7XxVn5c/ipO47diiTnIDW5j2hCC4a3NF0ySrjzgksaFf5nvtJi7tn
3ROttn8ChImuW9K/aHFvjxdvBR2dgAi5HZ3JX1ocFxt72B4ZEa5pBWAaaelw
So/DBEYv/OeTJRYuwnS4+GEzq2hJIqi4nnfjtqfDCXdfXD/rQQRGclaKh3t0
OHed2/Hy3kRwipt/mPqHDte+pCPr6U8EmX6oX6XA4LTJ30ashRGB7mbLTDAj
BvcadyzYk0IEtN0UMCSFwfU0TtgENRMBd9zDl+yBwdEr7zK2tBFBh35d5sAf
gzOcomvdwxOBMJxno/sGg9s8UKAzHSDCBeUJPpZUDI5JsqZMfoYIaZdwW4XN
GNxz/KCu5wIRaDzPfcd0YXBFWj9OKleIsOTlSuI+gMHJOl5+yL1JhKnX5IEq
MxhcMCn2QG+XCPtu1zbrVjC4oegnmdEHRPDh+OZ2ZRODY+NyUeo5JoKjpTRn
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1, 2}, {0., 3.9999997551020448`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"t\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 2}, {0., 3.9999997551020448`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9156402283498383`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"4673804c-4836-488a-bd33-50a44f92f8ea"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " provides various templates for ",
 StyleBox["AxesLabel",
  FontSlant->"Italic"],
 " under ",
 StyleBox["Basic Commands",
  FontSlant->"Italic"],
 ", ",
 StyleBox["2D",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Options",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Axes & Frame",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.455382577931204*^9, 3.455382656307471*^9}, {
  3.455382817807167*^9, 
  3.455382903110571*^9}},ExpressionUUID->"e900b939-2af8-47a1-aaf2-\
62f04b8376a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 11.2",
 StyleBox["\t",
  FontWeight->"Plain"],
 "Adjust the answer to the previous QRQ to label the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " and ",
 StyleBox["y",
  FontSlant->"Italic"],
 " axes. Also explore the suggestions given by Mathematica to alter the style \
of the plot in two different ways you find fun."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.4553774766160383`*^9, 3.455377477531608*^9}, {
  3.756507026601027*^9, 3.756507027448558*^9}, {3.756949041261752*^9, 
  3.756949044720036*^9}, {3.915122328388827*^9, 
  3.915122404867923*^9}},ExpressionUUID->"ecad1c40-d2f3-4d04-9042-\
4a6bdff62868"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"Sin", "[", "x", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", " ", 
   StyleBox[
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}],
    Background->RGBColor[1, 1, 0]]}], "]"}]], "Input",
 CellChangeTimes->{{3.915640267628356*^9, 3.915640283948276*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"f09b2810-bb59-42fb-a608-7bbbe4d88f05"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 2.7182816772389633`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.915640284241048*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"9a25212b-d85e-4ed4-bfe3-55d3b7cd42b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%32", ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{
       "1.`", ",", "0.9034103913939117`", ",", "0.18750286106660563`"}], 
       "]"}], ",", 
      RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<DefaultBoundaryStyle\>\"", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"\"\<DefaultGraphicsInteraction\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Version\>\"", "\[Rule]", "1.2`"}], ",", 
         RowBox[{"\"\<TrackMousePosition\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], ",", 
         RowBox[{"\"\<Effects\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Highlight\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<ratio\>\"", "\[Rule]", "2"}], "}"}]}], ",", 
            RowBox[{"\"\<HighlightPoint\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<ratio\>\"", "\[Rule]", "2"}], "}"}]}], ",", 
            RowBox[{"\"\<Droplines\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<freeformCursorMode\>\"", "\[Rule]", "True"}], ",", 
               RowBox[{"\"\<placement\>\"", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<All\>\""}], ",", 
                  RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<None\>\""}]}], 
                 "}"}]}]}], "}"}]}]}], "}"}]}]}], "}"}]}], ",", 
      RowBox[{"\"\<DefaultMeshStyle\>\"", "\[Rule]", 
       RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], ",", 
      RowBox[{"\"\<ScalingFunctions\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<CoordinatesToolOptions\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<DisplayFunction\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Identity", "[", "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Identity", "[", "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "]"}]}], "}"}], "&"}], ")"}]}], ",", 
         RowBox[{"\"\<CopiedValueFunction\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Identity", "[", "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Identity", "[", "#1", "]"}], "&"}], ")"}], "[", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "]"}]}], "}"}], "&"}], ")"}]}]}], "}"}]}]}], "}"}]}]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"06288756-5e09-4e21-8f92-c84afe325863"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 2.7182816772389633`}}, 
       "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    RGBColor[1., 0.9034103913939117, 0.18750286106660563`], 
    AbsoluteThickness[1]],
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->RGBColor[1., 0., 0.43, 0.51],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 2.7182816772389633`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.915640401442284*^9, 3.915640438862053*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"dbb86ae8-81ae-45e0-a5db-39b6b0c04a2e"]
}, Open  ]],

Cell[TextData[{
 "To plot several functions on the same graph using ",
 StyleBox["Plot",
  FontSlant->"Italic"],
 ", separate the functions by commas and place them in braces, such as \
follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"deff560b-b7f2-4fea-babc-6c99380b3388"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    StyleBox["{",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     RowBox[{"f", "[", "t", "]"}], 
     StyleBox[",",
      Background->RGBColor[1, 1, 0]], 
     RowBox[{
      RowBox[{"3", " ", "t"}], "+", "4"}]}], 
    StyleBox["}",
     Background->RGBColor[1, 1, 0]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[36]:=",ExpressionUUID->"8a259e7a-e29a-40c6-9f42-a99464486f58"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV0Hk4lAkcwPGhk2FcQxlkeGUbLZ3E8vT75VFyxK4j6rFli2wXW9GzSVvO
pjKZhCIhVNslarZr6ZUGszKbjGzkGcdqnhnRjCMjw7zb/vF9Pv9/7XYlhMTq
0mi0LV/738Yddr0UpSTfjW5ZRaOpwHHSNfDolJIUMe7zgugq4PL8nw6rlKRg
ufFQsYUKAmuPXOzqV5LnY9vLPZxV0G7Z5PvwpZL06drKPLJdBX0d+6r3nFaS
1fU71R8EKpjxF6SKGUoyK+dQ3au9o7B2na/DFZtP5GrnfL9LkjFA0qS33HSY
ZP8UW0Mf/Awrym6WhDgNkc9y5ppm1E9B3rUb3IIAOVluOH9NyXkNFIT4yzf5
yEh2Br8iv1ALyVFPA0t3DpKV04lZm5/QUGMudowJGSAzVsgG1nrr4pjSb3ld
UB+pn821HRPOwUsbHfamvO8h5bG5kTXO8zBdX7snQvSONKqN9ugVzEfX1Pj4
tOkOMjunwMLIfiFK3Gta3sIbsubsrMSIq4fhpckOc39uIdm6HI+TBnTkr6xv
muluID9M/lmkOmqAx2mrTgZF/EFOxJlVtlGGaHX+trGZeT55h1bMS001wqpB
nWt6CRUQRW/yKEo0xmD6gidDU0+BG1ZGu7POBAtdCr24uULYEVXVWDtigoss
izcpWlphe3mJdN5DU5TiCUlKfDs4pdyMe5xohgdemk+vXd0JlczBT3s5TKyX
xbgyfbvB56NuS+gIE4MjbeIqLKSQcyq8Yn2lOR4T6thnKvqg6lb98IUIC3R2
bmMFqgZg1Jhx1pq1CLVeEsb+jkHodctZ+vvrRbj66iqeTb8MxovGmPvzFqOq
x7Hfc1AO3bnxiQXhltj68vuVD4RDcMBvSXuDHgvpmrd6teJhcFhfne4oZmFc
V47URvAJskaT1pxLt8IbAb8IkzaroNY9LDTSzRpfhTTtcAwYhcXPmc1RU9Z4
8t6jyTSvMbDV1fPYdc8GY6o7Qjne4xCQ0astObQE383nVR13mwD7RkVDzzJb
NBEbT8xx/AziQgN1Wo8tpng2aN9yJiGokwvVwWxMmjVcEGatBgO4nlZ6m41l
cac7rIgp6Gl6kOBkaIf8Da3Zlku/QMHl1jzFQTtkJNzx/roUrvvRPDgiO3zu
86TuEUsDzZZLT891ssfZgzvdtjJmAP7aHRadaY86C9oLl8/OQFlD1TaV1B7d
Nh9u8Kdpgfl+aKE1Ejjdc1duPqYFaTuuExUR6HNAxN8yqYWiZQEWPxYTyNP8
6545rYXw38I/j14lkM2yOjOhS0ErZ99Dq2sE+kac4UjMKHh26uKKhJsE5r2J
3cd3peCyi+wbCwGBLk1LhvWPUfDD2XOLY8QE/hr+XZ73CQoM+/LVU38T+GIw
3Cs5lQKRa1knr43AsDm8bMUZCrBfkPdYQuBx1HwrKqLAxV1qTO8mUPTsn4OZ
tRTQZSv1HsgINPUfN6+rp6DZ01O+SU5gVBfj+YSQgrQLG5vfKwhUqjcyYsQU
THttz5w3QqCFq6DKW0qB/GK6zrZxAqOFr7cmD1BQqeD1jUwQeCv0o7ZGRkE0
XCbTJgn0OmwfbKekoHPo7om7XwjM0lmvjhynIBcfR23QENjG31bKV1MQVPDC
s3OGQBY7yVekoUB/+BVrv5bA3ff5SoqioHFD5xeKIvA/E/pfLw==
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwV0Hk4lAkcwPGhk2FcQxlkeGUbLZ3E8vT75VFyxK4j6rFli2wXW9GzSVvO
pjKZhCIhVNslarZr6ZUGszKbjGzkGcdqnhnRjCMjw7zb/vF9Pv9/7XYlhMTq
0mi0LV/738Yddr0UpSTfjW5ZRaOpwHHSNfDolJIUMe7zgugq4PL8nw6rlKRg
ufFQsYUKAmuPXOzqV5LnY9vLPZxV0G7Z5PvwpZL06drKPLJdBX0d+6r3nFaS
1fU71R8EKpjxF6SKGUoyK+dQ3au9o7B2na/DFZtP5GrnfL9LkjFA0qS33HSY
ZP8UW0Mf/Awrym6WhDgNkc9y5ppm1E9B3rUb3IIAOVluOH9NyXkNFIT4yzf5
yEh2Br8iv1ALyVFPA0t3DpKV04lZm5/QUGMudowJGSAzVsgG1nrr4pjSb3ld
UB+pn821HRPOwUsbHfamvO8h5bG5kTXO8zBdX7snQvSONKqN9ugVzEfX1Pj4
tOkOMjunwMLIfiFK3Gta3sIbsubsrMSIq4fhpckOc39uIdm6HI+TBnTkr6xv
muluID9M/lmkOmqAx2mrTgZF/EFOxJlVtlGGaHX+trGZeT55h1bMS001wqpB
nWt6CRUQRW/yKEo0xmD6gidDU0+BG1ZGu7POBAtdCr24uULYEVXVWDtigoss
izcpWlphe3mJdN5DU5TiCUlKfDs4pdyMe5xohgdemk+vXd0JlczBT3s5TKyX
xbgyfbvB56NuS+gIE4MjbeIqLKSQcyq8Yn2lOR4T6thnKvqg6lb98IUIC3R2
bmMFqgZg1Jhx1pq1CLVeEsb+jkHodctZ+vvrRbj66iqeTb8MxovGmPvzFqOq
x7Hfc1AO3bnxiQXhltj68vuVD4RDcMBvSXuDHgvpmrd6teJhcFhfne4oZmFc
V47URvAJskaT1pxLt8IbAb8IkzaroNY9LDTSzRpfhTTtcAwYhcXPmc1RU9Z4
8t6jyTSvMbDV1fPYdc8GY6o7Qjne4xCQ0astObQE383nVR13mwD7RkVDzzJb
NBEbT8xx/AziQgN1Wo8tpng2aN9yJiGokwvVwWxMmjVcEGatBgO4nlZ6m41l
cac7rIgp6Gl6kOBkaIf8Da3Zlku/QMHl1jzFQTtkJNzx/roUrvvRPDgiO3zu
86TuEUsDzZZLT891ssfZgzvdtjJmAP7aHRadaY86C9oLl8/OQFlD1TaV1B7d
Nh9u8Kdpgfl+aKE1Ejjdc1duPqYFaTuuExUR6HNAxN8yqYWiZQEWPxYTyNP8
6545rYXw38I/j14lkM2yOjOhS0ErZ99Dq2sE+kac4UjMKHh26uKKhJsE5r2J
3cd3peCyi+wbCwGBLk1LhvWPUfDD2XOLY8QE/hr+XZ73CQoM+/LVU38T+GIw
3Cs5lQKRa1knr43AsDm8bMUZCrBfkPdYQuBx1HwrKqLAxV1qTO8mUPTsn4OZ
tRTQZSv1HsgINPUfN6+rp6DZ01O+SU5gVBfj+YSQgrQLG5vfKwhUqjcyYsQU
THttz5w3QqCFq6DKW0qB/GK6zrZxAqOFr7cmD1BQqeD1jUwQeCv0o7ZGRkE0
XCbTJgn0OmwfbKekoHPo7om7XwjM0lmvjhynIBcfR23QENjG31bKV1MQVPDC
s3OGQBY7yVekoUB/+BVrv5bA3ff5SoqioHFD5xeKIvA/E/pfLw==
              "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 2}, {0., 9.99999981632653}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1, 2}, {0., 9.99999981632653}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
zAEGZ1IevUkkEuHz//9ZMLj/Ay9ivMA=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwV0Hk4lAkcwPGhk2FcQxlkeGUbLZ3E8vT75VFyxK4j6rFli2wXW9GzSVvO
pjKZhCIhVNslarZr6ZUGszKbjGzkGcdqnhnRjCMjw7zb/vF9Pv9/7XYlhMTq
0mi0LV/738Yddr0UpSTfjW5ZRaOpwHHSNfDolJIUMe7zgugq4PL8nw6rlKRg
ufFQsYUKAmuPXOzqV5LnY9vLPZxV0G7Z5PvwpZL06drKPLJdBX0d+6r3nFaS
1fU71R8EKpjxF6SKGUoyK+dQ3au9o7B2na/DFZtP5GrnfL9LkjFA0qS33HSY
ZP8UW0Mf/Awrym6WhDgNkc9y5ppm1E9B3rUb3IIAOVluOH9NyXkNFIT4yzf5
yEh2Br8iv1ALyVFPA0t3DpKV04lZm5/QUGMudowJGSAzVsgG1nrr4pjSb3ld
UB+pn821HRPOwUsbHfamvO8h5bG5kTXO8zBdX7snQvSONKqN9ugVzEfX1Pj4
tOkOMjunwMLIfiFK3Gta3sIbsubsrMSIq4fhpckOc39uIdm6HI+TBnTkr6xv
muluID9M/lmkOmqAx2mrTgZF/EFOxJlVtlGGaHX+trGZeT55h1bMS001wqpB
nWt6CRUQRW/yKEo0xmD6gidDU0+BG1ZGu7POBAtdCr24uULYEVXVWDtigoss
izcpWlphe3mJdN5DU5TiCUlKfDs4pdyMe5xohgdemk+vXd0JlczBT3s5TKyX
xbgyfbvB56NuS+gIE4MjbeIqLKSQcyq8Yn2lOR4T6thnKvqg6lb98IUIC3R2
bmMFqgZg1Jhx1pq1CLVeEsb+jkHodctZ+vvrRbj66iqeTb8MxovGmPvzFqOq
x7Hfc1AO3bnxiQXhltj68vuVD4RDcMBvSXuDHgvpmrd6teJhcFhfne4oZmFc
V47URvAJskaT1pxLt8IbAb8IkzaroNY9LDTSzRpfhTTtcAwYhcXPmc1RU9Z4
8t6jyTSvMbDV1fPYdc8GY6o7Qjne4xCQ0astObQE383nVR13mwD7RkVDzzJb
NBEbT8xx/AziQgN1Wo8tpng2aN9yJiGokwvVwWxMmjVcEGatBgO4nlZ6m41l
cac7rIgp6Gl6kOBkaIf8Da3Zlku/QMHl1jzFQTtkJNzx/roUrvvRPDgiO3zu
86TuEUsDzZZLT891ssfZgzvdtjJmAP7aHRadaY86C9oLl8/OQFlD1TaV1B7d
Nh9u8Kdpgfl+aKE1Ejjdc1duPqYFaTuuExUR6HNAxN8yqYWiZQEWPxYTyNP8
6545rYXw38I/j14lkM2yOjOhS0ErZ99Dq2sE+kac4UjMKHh26uKKhJsE5r2J
3cd3peCyi+wbCwGBLk1LhvWPUfDD2XOLY8QE/hr+XZ73CQoM+/LVU38T+GIw
3Cs5lQKRa1knr43AsDm8bMUZCrBfkPdYQuBx1HwrKqLAxV1qTO8mUPTsn4OZ
tRTQZSv1HsgINPUfN6+rp6DZ01O+SU5gVBfj+YSQgrQLG5vfKwhUqjcyYsQU
THttz5w3QqCFq6DKW0qB/GK6zrZxAqOFr7cmD1BQqeD1jUwQeCv0o7ZGRkE0
XCbTJgn0OmwfbKekoHPo7om7XwjM0lmvjhynIBcfR23QENjG31bKV1MQVPDC
s3OGQBY7yVekoUB/+BVrv5bA3ff5SoqioHFD5xeKIvA/E/pfLw==
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1, 2}, {0., 9.99999981632653}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 2}, {0., 9.99999981632653}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.915640478270976*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8fa647e1-8c48-4e01-81eb-effcc8aa8479"]
}, Open  ]],

Cell["If you don\[CloseCurlyQuote]t remember what f is, try:", "Text",
 CellChangeTimes->{{3.915122471524319*^9, 
  3.915122500852234*^9}},ExpressionUUID->"0f561538-ba9f-46f5-b9ff-\
b3c7ad2cddc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.756507089415526*^9, 3.75650709311263*^9}, {
  3.915122437217485*^9, 3.915122437689817*^9}, {3.915122574338601*^9, 
  3.91512257882693*^9}, {3.915122670400036*^9, 3.915122672128097*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"e4fda17c-e93f-453c-8451-57ad9cac3d05"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f", "[", "t_", "]"}], ":=", 
                    SuperscriptBox["t", "2"]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{20., {3., 17.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{20., {3., 17.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[
         Pattern[$CellContext`t, 
          Blank[]]] :> $CellContext`t^2}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`f"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9156404813107433`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"322e45b4-f6be-426e-ab4c-7f1eaee0d6d1"]
}, Open  ]],

Cell["\<\
The word Global means that by default, all the variables and functions you \
defined are available to any other code you\[CloseCurlyQuote]re writing in a \
session. This is a major source of error, as it is easy to forget what we did \
even 10 min ago!\
\>", "Text",
 CellChangeTimes->{{3.915122538576547*^9, 
  3.915122663078674*^9}},ExpressionUUID->"10994eb3-c95f-4712-92fd-\
02c2e3aa5991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 11.3",
 StyleBox["\t",
  FontWeight->"Plain"],
 "Adjust the answer to the previous QRQ to plot ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox[
     StyleBox["e",
      FontWeight->"Plain",
      FontSlant->"Italic",
      FontTracking->"Plain",
      FontVariations->{"CompatibilityType"->0,
      "Outline"->False,
      "Shadow"->False,
      "StrikeThrough"->False,
      "Underline"->False},
      FontVariations -> {"Masked" -> False},
      FontVariations -> {"RotationAngle" -> 0}], 
     StyleBox[
      RowBox[{"sin", "(", 
       StyleBox["x",
        FontSlant->"Italic"], ")"}],
      FontWeight->"Plain"]],
    FontWeight->"Plain"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "2e0c9c25-835f-481a-bfd2-82dd439d1280"],
 " and sin(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") on the same graph. "
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756507033699473*^9, 3.756507035609219*^9}, {
  3.7569490459006157`*^9, 3.756949046975425*^9}, {3.91512267782402*^9, 
  3.915122692637328*^9}},ExpressionUUID->"63038ce3-8d7d-486d-b271-\
8c369d70a2b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Sin", "[", "x", "]"}]], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", " ", 
   StyleBox[
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}],
    Background->RGBColor[1, 1, 0]]}], "]"}]], "Input",
 CellChangeTimes->{{3.915640517873399*^9, 3.915640527250049*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"fb1d6c8b-5a70-46f1-becb-f503e4a1ffa5"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
lq1vGGPMxWcWjn+bSBesZf5R1Odi/P4vukOkNYoyr6Ws5qImY30Em/TtTe6r
dJZzUab36l8BaRH6gqYiVS6Wp36wE5IO2P7tPG0BF4Plh75wSHfWXlerk+Oi
XfL0vhHSu/eYfLKX4KL2BmFvC+nyZu7xLgoXs0ynwkpIr3Z5reDL5aBZRd/K
+6QfdfmUTP3joIlm8x9/0tJHlnqGDXMw+/DXJ0A6ZKRdQqqXg3uFv/0kSA8H
JOTfbedg/Zi0eS1ZL2eWtYPaDw6eKfHWuUb6c8jsmex6DnoemvWfEemNIuVP
9T9y0Nt/WGWA3I/MiMCd9DIOKg3pat4grSi99t/ONxx87jq8WYf01fi/Sc15
HFRo03GvJPf70COn/uEnHLxelFb3h+yHuMK/W5qSODjxVmalI+ny+sDEklsc
VDVUdPpE9pPKTMKOG6EcrPwXq3OL7DcLxWUpZ85xMFp877cBDoFnVxdwXP05
mGhjs8OA9De3xuer3TkoZvQ2t5Tsb8FZD1ElRw5ePhn+cGKKwFWxxH7Bbg4e
krV00yAdWS4j/XUrB92fZe0/SuZn65KdJwJUORj0hWp6i8yX38a2aiclDv7j
S3+7yiTwgc2xJSayHGTsZq07ReZxKjTim7yAjdlBcWf1yPzmdlWsL/jNxvRT
imKOAwT+4uyNedjMxugSd9r/8k+V7+698oWNvk95tm/J+eBpIkywK2PjWcMw
UXYXgcppm9lTj9go9fxbhEI7gebFtTZ/Eth44FJSZGQbOY++O2dV32BjkzDF
c5ycP99Eg5yTLrBxVc7i5/k/CIw4VFhi6MrG9tpbVz6T86swxFRB3Y6NzXEG
nrw6AnvufPeTtGZjzKkk1WXk/NtSNfbfr81sNGvwWe9eTeDkstVhIYvYOHfb
rB+ny8l+3lLaemg+G0PzF+R5lRK4x95qnbUUG9mNPd67ignMuebds5jPQrOZ
iuvib8j1DGSYlf9iYcKjFacXkPP86zNVSZEHLDQN1b9YeJ9ADwZd5MxtFiqL
lA3bJBE4vv4QbyCahXKX5tn0JRCoUP5spD6EhSmcPQL2LQKdfug23HNjYWFs
onjdNfL5KaZ3dNVZaOm1GdQCCDxt3h/zVJmFedXlblbHCRS7EXlVaR4LA5t8
L/j7ELhiQf3ZaVEWJl36VprmRe7nanunz31TOM+J51LkRObf+eh/HllTWD79
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
//s42v+/j4P/A+IePk8=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
lq1vGGPMxWcWjn+bSBesZf5R1Odi/P4vukOkNYoyr6Ws5qImY30Em/TtTe6r
dJZzUab36l8BaRH6gqYiVS6Wp36wE5IO2P7tPG0BF4Plh75wSHfWXlerk+Oi
XfL0vhHSu/eYfLKX4KL2BmFvC+nyZu7xLgoXs0ynwkpIr3Z5reDL5aBZRd/K
+6QfdfmUTP3joIlm8x9/0tJHlnqGDXMw+/DXJ0A6ZKRdQqqXg3uFv/0kSA8H
JOTfbedg/Zi0eS1ZL2eWtYPaDw6eKfHWuUb6c8jsmex6DnoemvWfEemNIuVP
9T9y0Nt/WGWA3I/MiMCd9DIOKg3pat4grSi99t/ONxx87jq8WYf01fi/Sc15
HFRo03GvJPf70COn/uEnHLxelFb3h+yHuMK/W5qSODjxVmalI+ny+sDEklsc
VDVUdPpE9pPKTMKOG6EcrPwXq3OL7DcLxWUpZ85xMFp877cBDoFnVxdwXP05
mGhjs8OA9De3xuer3TkoZvQ2t5Tsb8FZD1ElRw5ePhn+cGKKwFWxxH7Bbg4e
krV00yAdWS4j/XUrB92fZe0/SuZn65KdJwJUORj0hWp6i8yX38a2aiclDv7j
S3+7yiTwgc2xJSayHGTsZq07ReZxKjTim7yAjdlBcWf1yPzmdlWsL/jNxvRT
imKOAwT+4uyNedjMxugSd9r/8k+V7+698oWNvk95tm/J+eBpIkywK2PjWcMw
UXYXgcppm9lTj9go9fxbhEI7gebFtTZ/Eth44FJSZGQbOY++O2dV32BjkzDF
c5ycP99Eg5yTLrBxVc7i5/k/CIw4VFhi6MrG9tpbVz6T86swxFRB3Y6NzXEG
nrw6AnvufPeTtGZjzKkk1WXk/NtSNfbfr81sNGvwWe9eTeDkstVhIYvYOHfb
rB+ny8l+3lLaemg+G0PzF+R5lRK4x95qnbUUG9mNPd67ignMuebds5jPQrOZ
iuvib8j1DGSYlf9iYcKjFacXkPP86zNVSZEHLDQN1b9YeJ9ADwZd5MxtFiqL
lA3bJBE4vv4QbyCahXKX5tn0JRCoUP5spD6EhSmcPQL2LQKdfug23HNjYWFs
onjdNfL5KaZ3dNVZaOm1GdQCCDxt3h/zVJmFedXlblbHCRS7EXlVaR4LA5t8
L/j7ELhiQf3ZaVEWJl36VprmRe7nanunz31TOM+J51LkRObf+eh/HllTWD79
KDsGyH54IqnUlDKFMTIxi3YYk/OjP0fW/P4U8q/cTOIbkr+vAWNCnegpfJtB
L7BZT2BYxPketu8U9kd9iU9fRuCcgphnt9ZO4Zte0XgRCQJVpV+uwzeTOHiy
eU9sDRNP9Gl13MqbxIEPz+Lmf2RieWlqhEfmJIpmq1XG0ZnodvxOu0jiJJ7W
/iB2+i0THzUEXjM7O4mFajaLf6YzUTl+S1vNhkmsXK34UvUSeV5Qqgv78XIC
80rbTxdqM9GLaaqTkTWB87zSgzdpMrGwurT5bMoE2poOJr9bwkTbc3naC+Im
MO7yM0hWYOLt1vgfzv4TyPLqWighYKDcQyetztUTeMT2j//hrwycozbwdSh7
HK16kq5b+jGw45FEXVfaOKYqdttPHmbgC2Wd6p8PxlG9WP59kjsD98wPKP0Y
PY4N6xJ3fN7HwERxXlaqzzje9Yp9/c2QPO8xZC47a4+j2KDvurBZDNxcrK9X
8/wfep+/VXb4zij62V27l5U1hhYm3kdeJo9gqqB4g3bqGJqrvRZZlDiCLVlj
DTn3x7BLvvVWaOwI0mZcZudHj6H/Nu8Yg9ARVMhcf6rIbwz9Hr1Y4+oxgmXs
TqsK3THUmXM+LVJ9BBcbnBW8PUmgz5sKb98nw+hR2VmnepuB4x45kvVRQ2S/
C/Z+DB/Cv35tVpO9A/j8WEF3yZt+rFWTW9Cp2Ic+E69cYx50o6OWck5WcReu
uTTbWXxpO642fOD53u4Xzj//QyrxYRNGFWTHHd/VhD+9/LTze6txz/tt8uFV
1XguWDu25m4eFnHLM9Xj8zD7liEtXfcF2J/nqtxb9QJivcNbPC5/gsYd+ib3
PT6BzKT15ty9TVDpTZEeFG+CrjPVeoFX22HBxJwC7xe/gPl+V8W5z90gHixh
XdbdBZmRqR5eUf1grBlfdWm8FzRZOfODHg7B8J6DCj1TA/Dn9ZKyzccYcFRq
/e+ggCH4YnhKW+McAwy/aM8POz8EpeVVSRIRDBiYNKgMvzwED2u9TzU/ZQBv
fknUmYQhcOopWOHfyYBNGvLBC94NQaO8xe00Bya0K/0x3CsYgqqAgKOS2wmw
bFjCiogYBvukrusjcWNQa2/55u61EYjdUSAjcn8MzH8+YjTeHIHP7Gu3lVLH
QMN682Jq4ghsctJ5ZPJqDBJ2ch1cM0dAVTkwP6lxDLSFIPG6egQGH0i1mM77
B4LGhbES4qMQ/Nhg6aM7/0DmYcgKu9BRKNgtmfXq4T+QNJd0zYkYhVFB+6pP
T//B94UuFvybo3DAPdxgvOAfvH7QTLv2aBRM1eotLX78gy51x4sm70dBOu1g
wKTCOHj4Gtxw/jcKjzNulFknjsPskiOpfBcGnNGyTvuZPA6/jvdFcg4ywDJH
KtIzYxxqousHmEcZMPkyek9Q4Thsfx4n8fk0A6xKr/c+/T4O8se03+rEMIDz
/aokX3YCckxDnrx9x4C9lIv2zyMnQEFiRVerLBOWXzHepHdrAoqSJd1FFZgw
PXtaFRMnYJ7g4xpNZSZkSYUM/siYgBsdxqUOS5kgUDofQqmaAJ/oGH/vjUzI
Xn021ZEyCYoXfoD1ASaIuRxnzD4/CXs29ShRnjFhkZWD2obwSQgq3qqfl8OE
9ZvB1iNqEj5lKu21e8kEj0Xy74vvT0LWU/cL198zoay98Kp/8SSUJLSHxtUx
IdB1elEbfxJSOdf1VZlMuGndv1tcbApc+OGPrcaZkG7cEL5Begq8Dl4bD2Ax
oWlxyt+bi6dAqtLJ8amACbq/TQu2bZmC7CVHWJmyBAy5xezMvTQFBpT8NK3V
BFB2n7nYFjEFC2eJwg9dAhZudXspfmsKTJ7NeXNOjwBz1bVKB59MQfPISd3M
zQSk/fnerUifgrxdV4xTLQlwdVc5HyrCghMV1EFZLwJO28zKzZVkgeoxx4qN
RwmIhtE/bfIsSDin5e3kQ8C7JeVmehoseJIorRweQIBi18G5Q9tYIL/u2oj/
BQIaPJ4/23eVBeou1/IrbhNweWnopqkYFoRFnHHZfJcA/QG7L0l3WGSerFpy
kwh45EuZ6EhjAcgGGgQ/IsA30HHr0Q8suLo+Kb48gwCJG7ObQwQsqAkXAcYb
Akp3tx9VFWfDFTmjB+PvCPCXf8Wjy7DBfFy/dKyYgJZEVzXx/9jgVPRy389y
AjJSC3zjNrPBxMatbFc1AdveHhTNCGKDvOadVZ1NBLDOb7y7I4wNRKT5h4Bm
Ap4by2gNR7Lh4M5tSvwWAuZWvNu1NokN3UdfCLltBHTWy91/X8QG1ve/1Smd
BNy+1a/jWsaGZ6eO2XG6yHrvKykXVLGh2iH+iUUPAXk/j/SZ/mDDiGnO8aY+
Ai70lK1tGGfDr3xqd/wQAboZdyoCeGyw6Ky2zR8moPeot/18UQ7MFeWEfxwh
YCdDIcRJngMHjxXKdTAIEOQPy/AXciBt/OOJDiYBr07RU5LVOFAzY3+9mSD3
n+Nb3bOWA/f2zx1+9Y+A+mIT52sbOSC1vmHd3XECQi8uGF0BHJifuG7DyQkC
BkQr5Y/v5oCIhYbn/CkCimRU3Nh+HDjFvedL4ZDXdcyfnD7DgZCdA8aZpBfu
PNVNhHDgQnWj7HYuuZ6I2sOD0RxYWcotOM4j15vOeuZ1mwNXLaYi2KS7KjSG
u+5zYLumzP5gPgFmwuATbVmkv6pRfKcJCPzv2Uv7lxwoHfv7vZV01uam8ca3
5PNJeWbADAG/nIV6u5ED85KDzj0hLRWkc662mgO1L5QsOaSNEx3fmzeQ9ajX
UtkpIOBE4RV+RTMH7OSThxNIp3zP3wK/OcBedKi4lfT3sfbQkj4OzCj4RSkK
CRCTk6jYOMqBTS+yHa1IG6zWEyuc4MDf/+ZrBpM+ZuVhrsvnQIrWw3+ppO97
37ieK8qF4ws2lVWQro18V6s1hwtYOhjZQXo6o086Q54LZ06n7iVIr6maa6Ou
zIUWVQ8VPmmPHuP4ZDUuJGtr9JD/Z+A2xbtJWYsL49EDWTOkq1TvKiau5YJf
6YsTk6RZxh8c523kglzV+Q19pFe4MO7HbuWCzdrd7HrSTueVO+aYc2Gugm5x
HunopO2qkbu48Hju8gtRpEuLTnrMsudCoZXhFjfSzKbktFBX8vnOBMysJK02
XtPHP8SFYxVtpQRZn31zWcuDfLlwaSosJI/01TUa3pOnuCDpcMboCOki6905
AcFceFtYyVIiPeATzBgN58Idn7ACOrkfC6My13pHcYHiXOZ/iPSFj4KCg/e4
UCQr9fcOub95vdqs30+4sGebZZo66S4RR8P9z7iwONLTLYvsD9Ot+aX73nCh
lh3flEL2zxnXdkFDGRdmGrtj55HODKaaWH3kwphy2M6LZP/Neev+0fQHF26s
XFW5hexP4+YYKr2dXG9XaNgdNtkPE28tjXu5cLPvxdYeFgGNa+c26I1z4XeU
frkP2e+iu43nvuKS9XXpDk2fJEDP79i+1SI8cGyVMv1J5uNeFr1Fcy4PsmRu
N6wg81NbPbowbQEPovSsk7aT+ZruW+iiuoQHC/tNPF3HCHBXP9mptIYHtMQX
wjNkPpc/UB+kWvPgQE3IgX1kvu9rngtabseDLrdEqhqZf+lX9RLbXXmQUiAM
6v9LwMSncysv+/EgukrsjWM/AfSpLz7TN3iQ3WmU1kbOG73wpXyVuzyYnvtf
0uE/BDyTPh9jlMyD/7bPcxzqICB26bLcwBc86AkvNWol55XL3mDG2Bce2Ota
3bUl511Dx9eLci08EL81zEhuJOfhMU3ZNX94IHF6QKHrKwFaod/W+DJ5sFrr
w1ererL/cpcH9MvyYZJQFP9QRUCcRNN4mw0fEp9W9WkUEjArQesKx5EPjhce
uA2/IvO85NL8BR58eEZn5T7PJ8DNYKWeXQAfvr5IbJTLIUDbK/RsQxwfkrMN
TINTCfiIOpyKRj5oJjPtPt8gwNAq/Hp3Gx9+vnEPk4kmILelZSGlhw+u2g9v
7Iwk88IIN9oyzochX6udueFknha1Br+dNw3CUMEJ2UACeIFXZ3Jsp+HO13/U
3W5kfzRXM8BlGiw796tY7idAZYPknybPaUhkuCzb4kiAEXGznH9yGuL9etXn
7iUg6GhSqFXcNLAlYlsOmpHrd8wWGamfhu8duZ8KVxIwbvhttrb5DBRnuyxX
JZggmjSPVbZrBt6n6ScbjTBh3pTdwF77GdixKn7Z7r9MWPeqrfq81wxUdO07
5tnJhICVvZE1l2egbY/I741fmcBUZkl64wwsQU2LpBdMGOEtks0yFMDU2Qed
aw4zwbg60voPTQAy7guXSHgwITZ+IlrBUgD3XxkfaNtPng+06qjhzgKwzRjr
OrSHPG/YB4vsDxZA4/IqVeXNTKC8bJ2UKhVAZv3Yu9lyTFA6fLfdH4SgJewp
+feSPNfqiqhk7hDCUOho2ZdsBrzj+zl12Ajh2A1nIjWdLN1ts2YLDyFI/usa
WH+PASk40aAeLoTwh9kO7EsM0FHZV9FUIYSbv+a+lLIirx+N/LFoKYUmlurv
d+L3KEiEHKtbuoJCS5cz6jrTMgoBsZYVOjoUWo/ZHZEzX0cBiqRebt5AoV0p
XWjn+mEU/ojGxbiYUmjuvzJ9mtNHYfHje9seHqLQXge3Tfn4jMK9H89fqqRT
aAPdPhm6YyMQZ1J/Q1lThLbOzMHr7sAwmJc/3dChJUI7M1Mk9PszDNObQn49
XiVC+zXpnLO1ZRiO6WlrLdMToVn/yN707eMw0FZcr1xjKkKrXeDul5s+DGPS
ZjzTgyK0HxkNb3ceHAab1pKjJ5JFaIKwB3NXtQyBrH/OtkpFUZpfx8/ZRN4g
lJu9K3ujMosmMjB2y7C/H2aOuxs4yIrRDB5kMB5zekCE+v2+zowYLVV/+vfc
l51gYHGqYidFnJbQ2n+U69MKvI7cQcVxcZrbC2tGwo5GMPP7HLeLJU4r23NK
WmlFI9zk9xpe44nTanTh6G3xRlBTWRQ1KUqldcyamrjw8RvscIxa2TSfSiu7
t/yoiuk3SGg87BOnT6V5inHNZ4IbYE216uic81QatW/IzulALQTZb0rYdpFK
M9JUfmW9uBY+9NkbB4dTaW2ej+uMftWA3aybN4aiqLT0o2rXBPY1EELjr/r8
gErL358lrbfrM3wu/nn8WimV1t1qHOW+qRrm7ZxQLKNTaVeN4n0G2R/BtU22
fLKKSgNnpq5v0Ucg2Ntlvb5QaSut894c0P0ISvqFedv+UGmxQvlcoWYVeFR9
dQjuodJO2R0vce6thOe2I4JXA1SasP67aV5KJRif0rBRJ6i0mN+/JHcsqoQI
ka1spwkqjZ0Q5xfTWgHf4pyfxLHJ6+mBt2vvVoCK2tkdn/lUWpelSqyYbQX8
//s42v+/j4P/A+IePk8=
              "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {-0.9999996810338911, 
             2.7182816772389633`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {-0.9999996810338911, 
            2.7182816772389633`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
OiEdHxUUanh4s+D//w/GO/8mH/rizoL/AzMGUeU=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
lq1vGGPMxWcWjn+bSBesZf5R1Odi/P4vukOkNYoyr6Ws5qImY30Em/TtTe6r
dJZzUab36l8BaRH6gqYiVS6Wp36wE5IO2P7tPG0BF4Plh75wSHfWXlerk+Oi
XfL0vhHSu/eYfLKX4KL2BmFvC+nyZu7xLgoXs0ynwkpIr3Z5reDL5aBZRd/K
+6QfdfmUTP3joIlm8x9/0tJHlnqGDXMw+/DXJ0A6ZKRdQqqXg3uFv/0kSA8H
JOTfbedg/Zi0eS1ZL2eWtYPaDw6eKfHWuUb6c8jsmex6DnoemvWfEemNIuVP
9T9y0Nt/WGWA3I/MiMCd9DIOKg3pat4grSi99t/ONxx87jq8WYf01fi/Sc15
HFRo03GvJPf70COn/uEnHLxelFb3h+yHuMK/W5qSODjxVmalI+ny+sDEklsc
VDVUdPpE9pPKTMKOG6EcrPwXq3OL7DcLxWUpZ85xMFp877cBDoFnVxdwXP05
mGhjs8OA9De3xuer3TkoZvQ2t5Tsb8FZD1ElRw5ePhn+cGKKwFWxxH7Bbg4e
krV00yAdWS4j/XUrB92fZe0/SuZn65KdJwJUORj0hWp6i8yX38a2aiclDv7j
S3+7yiTwgc2xJSayHGTsZq07ReZxKjTim7yAjdlBcWf1yPzmdlWsL/jNxvRT
imKOAwT+4uyNedjMxugSd9r/8k+V7+698oWNvk95tm/J+eBpIkywK2PjWcMw
UXYXgcppm9lTj9go9fxbhEI7gebFtTZ/Eth44FJSZGQbOY++O2dV32BjkzDF
c5ycP99Eg5yTLrBxVc7i5/k/CIw4VFhi6MrG9tpbVz6T86swxFRB3Y6NzXEG
nrw6AnvufPeTtGZjzKkk1WXk/NtSNfbfr81sNGvwWe9eTeDkstVhIYvYOHfb
rB+ny8l+3lLaemg+G0PzF+R5lRK4x95qnbUUG9mNPd67ignMuebds5jPQrOZ
iuvib8j1DGSYlf9iYcKjFacXkPP86zNVSZEHLDQN1b9YeJ9ADwZd5MxtFiqL
lA3bJBE4vv4QbyCahXKX5tn0JRCoUP5spD6EhSmcPQL2LQKdfug23HNjYWFs
onjdNfL5KaZ3dNVZaOm1GdQCCDxt3h/zVJmFedXlblbHCRS7EXlVaR4LA5t8
L/j7ELhiQf3ZaVEWJl36VprmRe7nanunz31TOM+J51LkRObf+eh/HllTWD79
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
//s42v+/j4P/A+IePk8=
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {-0.9999996810338911, 2.7182816772389633`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.9999996810338911, 2.7182816772389633`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9156405281724*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8be49f24-8df0-4b4c-9be3-1a0de9a42cd8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["12. Manipulate ", "Section",
 CellMargins->{{20, 3}, {4, 4}},
 CellChangeTimes->{{3.504812528749475*^9, 3.504812535973018*^9}, {
   3.504812592845634*^9, 3.504812598902317*^9}, 3.504813340848831*^9, {
   3.504814567225962*^9, 3.504814570316006*^9}, 3.7569499966673326`*^9, {
   3.756950116068512*^9, 3.7569501174843893`*^9}},
 TextAlignment->Left,
 TextJustification->0.,ExpressionUUID->"a3ff27b5-4cc1-4741-aba7-1dc2f6572b8f"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has a very powerful and simple   \"Manipulate\" command which allows user \
interaction with the output. Say you want to interactively change the \
frequency in the graph of a cosine function. The frequency is changed by \
making \[Omega] vary in cos(\[Omega]t). "
}], "Text",
 CellMargins->{{20, 10}, {7, 7}},
 CellChangeTimes->{{3.504812584702263*^9, 3.504812745165901*^9}, {
  3.504812830158199*^9, 3.504812831150263*^9}, {3.504813094263218*^9, 
  3.504813135150254*^9}, {3.756950126839748*^9, 3.75695015115232*^9}, {
  3.915122702365835*^9, 
  3.9151227213554688`*^9}},ExpressionUUID->"ef2e1ac3-0ee7-4d8c-8950-\
00d12c63dc3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["Manipulate",
    Background->RGBColor[1, 1, 0]], 
   StyleBox["[",
    Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", " ", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], 
    StyleBox[",",
     Background->RGBColor[1, 1, 0]], 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", " ", "0.5", ",", " ", "3"}], "}"}],
     Background->RGBColor[1, 1, 0]]}], 
   StyleBox["]",
    Background->RGBColor[1, 1, 0]]}], 
  StyleBox[" ",
   Background->RGBColor[1, 1, 0]]}]], "Input",
 CellMargins->{{20, 10}, {0, 7}},
 CellChangeTimes->{{3.504812720535555*^9, 3.504812728735172*^9}, {
  3.504812817671418*^9, 3.50481286816946*^9}, {3.504812906575008*^9, 
  3.50481294275187*^9}, {3.504812988565544*^9, 3.504813014503147*^9}, {
  3.504813047954194*^9, 3.504813066591316*^9}, {3.504814626237777*^9, 
  3.5048146302781878`*^9}, {3.5048146846502333`*^9, 3.504814686470168*^9}, {
  3.9156405685653973`*^9, 3.9156406201073503`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"f9abcc63-e360-49f8-9cb1-70bf91e7ed73"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Omega]$$ = 2.1719999999999997`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Omega]$$], 0.5, 3, ControlType -> Manipulator}}, 
    Typeset`size$$ = {667., {201., 212.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Omega]$$ = 0.5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Cos[$CellContext`\[Omega]$$ $CellContext`t], {$CellContext`t, (-2) Pi,
          2 Pi}], "Specifications" :> {{$CellContext`\[Omega]$$, 0.5, 3}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{751., {305., 317.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.915640607496538*^9, 3.915640621354422*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"5399b2fd-1de0-4074-9916-a06486c0b5cf"]
}, Open  ]],

Cell["\<\
The Manipulate command just wraps around any command, providing a range for a \
parameter to vary inside the command. You can set the exact value of the \
parameter by clicking on the + sign. Try this.  
(note the  fourth entry \", 1\" in the range {n, 1, 30, 1} of n,  insures it \
increments in whole number)\
\>", "Text",
 CellMargins->{{20, 10}, {7, 7}},
 CellChangeTimes->{{3.504813148223219*^9, 3.504813238727128*^9}, {
  3.504813327354719*^9, 3.504813330104102*^9}, {3.504813362608501*^9, 
  3.50481339626487*^9}, {3.504814603359982*^9, 3.504814611775425*^9}, {
  3.50481473342253*^9, 3.5048148074066277`*^9}, {3.504814874670998*^9, 
  3.504814891284003*^9}, {3.915225341027198*^9, 
  3.915225385712233*^9}},ExpressionUUID->"ec46e86b-d285-4c39-b25b-\
35fb16f40617"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"n", "!"}], ")"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", ".5", ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", " ", "30", 
     StyleBox[",",
      Background->RGBColor[1, 1, 0]], 
     StyleBox[" ",
      Background->RGBColor[1, 1, 0]], 
     StyleBox["1",
      Background->RGBColor[1, 1, 0]]}], "}"}]}], "]"}]], "Input",
 CellMargins->{{21.333333333333332`, 10.}, {0., 7.}},
 CellChangeTimes->{{3.504813241675663*^9, 3.5048133072034283`*^9}, {
  3.504814052620558*^9, 3.504814110419248*^9}, {3.504814142832749*^9, 
  3.504814148691088*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3dd062f3-b3aa-43fb-819f-93e5b6811979"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.822, $CellContext`n$$ = 17, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.5, 3, ControlType -> Manipulator}, {
      Hold[$CellContext`n$$], 1, 30, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {189., {1., 24.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.5, $CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`a$$ Factorial[$CellContext`n$$], 
      "Specifications" :> {{$CellContext`a$$, 0.5, 3}, {$CellContext`n$$, 1, 
         30, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{481., {126., 138.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.915640646510868*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"e7086bec-00ba-47dd-9376-0d30c24714d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["QRQ 12.1 Write a Manipulate plotting the functions ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", 
     RowBox[{"sin", "(", "x", ")"}]], " "}], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->
  "f5fdf79c-4a61-4794-baee-3fb43ee9188e"],
 StyleBox["and mx+b where the two parameters m and b can be manipulated in \
the intervals [.2 , 2], and [-1, 3] respectively. Use it to find, \
approximately, the equation of the tangent line to the graph at x=0. Use \
Calculus and Mathematica to compute its exact equation.",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellMargins->{{21.333333333333332`, 10.}, {7., 7.}},
 CellChangeTimes->{
  3.504813439749321*^9, {3.504813491203858*^9, 3.504813713654333*^9}, 
   3.756949049530957*^9, {3.756950183208343*^9, 3.756950187581078*^9}, {
   3.915122979717225*^9, 3.915123087739421*^9}, {3.9152254080351872`*^9, 
   3.9152254117657137`*^9}},
 FontWeight->"Bold",ExpressionUUID->"0d56e86a-79ba-4413-9985-59bb8000cae9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   StyleBox["Manipulate",
    Background->RGBColor[1, 1, 0]], 
   StyleBox["[",
    Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"Sin", "[", "x", "]"}]], ",", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "x"}], "+", "b"}], ")"}]}], "}"}], ",", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}],
       Background->RGBColor[1, 1, 0]]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", " ", ".2", ",", " ", "2"}], " ", "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"b", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "3"}], "}"}],
     Background->RGBColor[1, 1, 0]]}], 
   StyleBox["]",
    Background->RGBColor[1, 1, 0]]}], 
  StyleBox[" ",
   Background->RGBColor[1, 1, 0]]}]], "Input",
 CellChangeTimes->{{3.9156408497223177`*^9, 3.915640940250705*^9}, {
  3.9156409791783333`*^9, 3.915641109016095*^9}, {3.915641147680835*^9, 
  3.915641219531749*^9}, {3.9156412588288527`*^9, 3.9156413037103043`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e16a8aba-6297-400d-a9d1-90dbcd5da5fd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 1., $CellContext`m$$ = 0.2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], 0.2, 2, ControlType -> Manipulator}, {
      Hold[$CellContext`b$$], -1, 3, ControlType -> Manipulator}}, 
    Typeset`size$$ = {660., {198., 209.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = -1, $CellContext`m$$ = 0.2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{E^Sin[$CellContext`x], $CellContext`m$$ $CellContext`x + \
$CellContext`b$$}, {$CellContext`x, -10, 10}], 
      "Specifications" :> {{$CellContext`m$$, 0.2, 2}, {$CellContext`b$$, -1, 
         3}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{744., {332., 343.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.915640943216901*^9, {3.9156410123336563`*^9, 3.91564103722512*^9}, {
   3.91564107198577*^9, 3.9156411062184677`*^9}, {3.915641156139287*^9, 
   3.915641184792942*^9}, 3.91564122027254*^9, {3.915641283775612*^9, 
   3.915641304860723*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"8eba638d-936d-426e-9027-e0759ac0a85f"]
}, Open  ]],

Cell["tangent line to e^sin(x)= (y=1x+1) when x=0", "Text",
 CellChangeTimes->{{3.9156418859125423`*^9, 
  3.9156419151097307`*^9}},ExpressionUUID->"1896496e-66e7-4ccc-bfdb-\
271828f4d049"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["13. Differentiation & Integration", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.756950205413522*^9, 3.756950206628359*^9}, {
  3.75695031708754*^9, 
  3.75695032173742*^9}},ExpressionUUID->"1e4de332-b28c-4314-9977-\
41808a6faaa4"],

Cell[TextData[{
 "As in calculus, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides the ",
 StyleBox["prime notation",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " for taking the derivative.  For example, consider the following function:\n\
\t ",
 StyleBox["s",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") = -5.9",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "487967ca-c5fb-453f-9d35-0550cfc19946"],
 " +15",
 StyleBox["t",
  FontSlant->"Italic"],
 " + 11\nWe define the function in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568071387663684*^9, 3.5680713891489677`*^9}, 
   3.757013838321629*^9, {3.915225534532423*^9, 
   3.915225549974346*^9}},ExpressionUUID->"6d1715b5-403d-4d19-a32a-\
6ab915337307"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", " ", "t"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Hygene", ",", " ", 
    RowBox[{
    "just", " ", "in", " ", "case", " ", "we", " ", "used", " ", "these", " ",
      "variables", " ", "before"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5.9"}], 
    SuperscriptBox["t", "2"]}], " ", "+", " ", 
   RowBox[{"15", "t"}], " ", "+", " ", "11"}]}]}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.757013838331406*^9, {3.915225560965911*^9, 3.915225606528606*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"e701cb47-b149-4705-8f4a-fa1cfcb77183"],

Cell[TextData[{
 "The following prime notation returns the derivative function, 15 \[Dash] \
5.9",
 StyleBox["t:",
  FontSlant->"Italic"]
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.757013838346384*^9},ExpressionUUID->"48dc1804-4b6a-42f5-90b5-\
e33e6154b39a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", 
   StyleBox["'",
    Background->RGBColor[1, 1, 0]]}], "[", "t", "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[58]:=",ExpressionUUID->"e056edd2-1ca3-44c2-821f-b743b6ad8515"],

Cell[BoxData[
 RowBox[{"15", "-", 
  RowBox[{"11.8`", " ", "t"}]}]], "Output",
 CellChangeTimes->{{3.915642219383792*^9, 3.915642227496468*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"1752ce26-15b2-445f-b870-3ebecefee2e9"]
}, Open  ]],

Cell[TextData[{
 "To evaluate the derivative at 1, which is ",
 StyleBox["s",
  FontSlant->"Italic"],
 "'(1) = 5.20, we call this derivative function at 1:"
}], "Text",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"fbef5add-d4aa-4bdc-8fd0-072c6b88f84c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "'"}], "[", "1", "]"}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[59]:=",ExpressionUUID->"2a44fed9-049b-410e-9c18-f08f631a7576"],

Cell[BoxData["3.1999999999999993`"], "Output",
 CellChangeTimes->{{3.9156422222811604`*^9, 3.915642230293508*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"65ccfafc-60c0-479c-9fa1-ed07417b340d"]
}, Open  ]],

Cell[TextData[{
 "Alternatively, to avoid first defining a function, or if the function has \
more than one variable, we can employ the ",
 StyleBox["D",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " command in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to compute the derivative.  The first argument is an expression for which \
we want the derivative, and the second is the independent variable.  Thus, to \
take the derivative of -5.9",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", 
    StyleBox["2",
     FontColor->GrayLevel[0]]], TraditionalForm]],ExpressionUUID->
  "a7fe5b45-6dbb-44f4-8efc-c7c3f1eab995"],
 " +15",
 StyleBox["t",
  FontSlant->"Italic"],
 " + 11 with respect to ",
 StyleBox["t",
  FontSlant->"Italic"],
 ", we can employ the following command:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568071420403509*^9, 3.568071431570373*^9}, 
   3.757013838365022*^9},ExpressionUUID->"26908745-c722-43f9-9f39-\
5b6aeaea4f8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["D",
   Background->RGBColor[1, 1, 0]], 
  StyleBox["[",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "5.9"}], 
     SuperscriptBox["t", "2"]}], " ", "+", " ", 
    RowBox[{"15", "t"}], " ", "+", " ", "11"}], 
   StyleBox[",",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[" ",
    Background->RGBColor[1, 1, 0]], 
   StyleBox["t",
    Background->RGBColor[1, 1, 0]]}], 
  StyleBox["]",
   Background->RGBColor[1, 1, 0]]}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.757013838374433*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"f637c60f-505c-493f-87c0-d56e35a8c173"],

Cell[BoxData[
 RowBox[{"15", "-", 
  RowBox[{"11.8`", " ", "t"}]}]], "Output",
 CellChangeTimes->{3.915642883904149*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"75bea697-c767-49e1-a2f4-184614ad1cc6"]
}, Open  ]],

Cell[TextData[{
 "As indicated with the prime notation for the derivative, input to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can be quite natural.  Using the ",
 StyleBox["Classroom Assistant",
  FontSlant->"Italic"],
 " palette, we can request that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " evaluate definite integrals and indefinite integrals using the notation of \
mathematics, such as with the following examples:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{3.4516829000705767`*^9, 
  3.756506577413356*^9},ExpressionUUID->"b6c51e4e-3279-46d8-9720-\
2c0cd0e66cdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\[Integral]",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["t", "2"]}], "+", 
     RowBox[{"10", "t"}], "+", "24"}], ")"}], 
   StyleBox[
    RowBox[{"\[DifferentialD]", "t"}],
    Background->RGBColor[1, 1, 0]]}]}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[61]:=",ExpressionUUID->"23c57fa5-b8a7-4d4a-85bb-e8875adceb3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"24", " ", "t"}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["t", "2"]}], "-", 
  FractionBox[
   SuperscriptBox["t", "3"], "3"]}]], "Output",
 CellChangeTimes->{3.915643130375098*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"28f57425-7855-4864-9e67-6c1f0dd9915f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   SubsuperscriptBox["\[Integral]", "0", "5"],
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["t", "2"]}], "+", 
     RowBox[{"10", "t"}], "+", "24"}], ")"}], 
   StyleBox[
    RowBox[{"\[DifferentialD]", "t"}],
    Background->RGBColor[1, 1, 0]]}]}]], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellLabel->"In[62]:=",ExpressionUUID->"ba23f1a6-26fb-4b4a-8c2d-6142351f1a02"],

Cell[BoxData[
 FractionBox["610", "3"]], "Output",
 CellChangeTimes->{3.9156431329002447`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"af86b7c4-8f30-406d-85ae-5d65ec995666"]
}, Open  ]],

Cell["Alternatively, as we discovered with Wolfram Alpha:", "Text",
 CellChangeTimes->{{3.756506514790997*^9, 3.756506552470847*^9}, {
  3.756506591235104*^9, 3.756506609415216*^9}},
 TextAlignment->AlignmentMarker,
 TextJustification->0.,ExpressionUUID->"58f61c96-0a3f-4016-9028-db62f9b57b27"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["t", "2"]}], "+", 
    RowBox[{"10", "t"}], "+", "24"}], ",", " ", "t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["t", "2"]}], "+", 
    RowBox[{"10", "t"}], "+", "24"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756506621166006*^9, 3.75650665249648*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"a5ef06de-51db-40a6-ae26-fb3b1f359247"],

Cell[BoxData[
 RowBox[{
  RowBox[{"24", " ", "t"}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["t", "2"]}], "-", 
  FractionBox[
   SuperscriptBox["t", "3"], "3"]}]], "Output",
 CellChangeTimes->{3.915643177696973*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"f6a160eb-50aa-4ad0-8e1d-6939ac1f090f"],

Cell[BoxData[
 FractionBox["610", "3"]], "Output",
 CellChangeTimes->{3.915643177699428*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"d7f6ecce-1ff0-4fe7-847c-2de1612b8783"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Warning! ",
  FontWeight->"Bold"],
 StyleBox["Most ",
  FontSlant->"Italic"],
 "functions are not integrable, by humans or machines, in the sense of giving \
an explicit antiderivative:"
}], "Text",
 CellChangeTimes->{{3.761595874553644*^9, 3.761595933131628*^9}, {
  3.761596064313529*^9, 3.761596068304682*^9}, {3.761596698000695*^9, 
  3.761596699525062*^9}},ExpressionUUID->"f372ddc2-9887-486c-a70e-\
083daaf6a361"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "-", 
        RowBox[{"3", "x"}]}], "]"}], 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", "4"}], ")"}]}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.761595941432407*^9, 3.761596047219193*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"3e90d977-a4c1-4219-a5f4-488b80568cb7"],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}], "+", 
       SuperscriptBox["x", "3"]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"]}], 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SuperscriptBox["x", "3"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.9156432277769012`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"f303e7cf-e3a4-4cc9-84fe-48d9e94149e0"]
}, Open  ]],

Cell[TextData[{
 "However Mathematica will always be able to give you a numerical integral, \
using fancy ",
 StyleBox["numerical",
  FontSlant->"Italic"],
 " integration methods (Trapezoid rule, or Simpson rules and more \
sophisticated variations on those ...). The command is:"
}], "Text",
 CellChangeTimes->{{3.761596079114104*^9, 3.76159616484665*^9}, {
  3.7615963287113056`*^9, 
  3.7615963339689302`*^9}},ExpressionUUID->"61c2b129-7fe5-4f7b-b2a2-\
786b41647645"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "-", 
        RowBox[{"3", "x"}]}], "]"}], 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", "4"}], ")"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761596176079798*^9, 3.7615961979883556`*^9}, {
  3.761596295251231*^9, 3.7615963083701*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"281b272a-0ded-451b-9fc7-5a621f46ff70"],

Cell[BoxData[
 RowBox[{"-", "0.859330102298983`"}]], "Output",
 CellChangeTimes->{3.915643227940639*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"f73008a0-532e-4b86-a3a9-3c9fab1d6b51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 13.1\t",
 StyleBox["Give ",
  FontWeight->"Plain"],
 StyleBox["Mathematica",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" code to do the following:\n",
  FontWeight->"Plain"],
 "a.\tDefine the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = 2.9 sin(0.03",
 StyleBox["x",
  FontSlant->"Italic"],
 ")."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.756949050726507*^9, {3.7569503409486017`*^9, 
   3.756950342151889*^9}},ExpressionUUID->"d3e37167-f46e-4bcc-b15d-\
2b43259fe8ac"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x", ",", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"2.9", 
   RowBox[{"Sin", "[", 
    RowBox[{".03", "*", "x"}], "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9156432578041983`*^9, 3.915643336963455*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"91719c47-31a7-4a8c-99b6-aa904ba4ffe3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b.\t",
 "Evaluate the derivative of ",
 StyleBox["f",
  FontSlant->"Italic"],
 " at 35."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"5b16b9f8-52a5-4083-a921-71e91d8e1253"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "35", "]"}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"0f5e8ed7-5453-42f6-a9fb-ea1f1d7bea53"],

Cell[BoxData["0.043288681166580245`"], "Output",
 CellChangeTimes->{3.91564334118073*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d93231b2-5bae-4d81-8ffe-6717e380d2d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "c.\t",
 "Define a function ",
 StyleBox["d",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") = ",
 StyleBox["f'",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") using the prime notation."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"e7fce5b0-d494-4647-80f2-599f4017ea9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.9156433515542727`*^9, 3.915643368506276*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"7977b35a-6f1e-431d-9f0b-bf1eb69b93b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "d.\tFind the derivative of 2.9 sin(0.03",
 StyleBox["x",
  FontSlant->"Italic"],
 ") using the ",
 StyleBox["D",
  FontSlant->"Italic"],
 " notation."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.504815871283195*^9, 
  3.504815872168166*^9}},ExpressionUUID->"fd2e86d1-2277-4821-9684-\
12cfc60eb1ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"2.9", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"0.03", 
      StyleBox["x",
       FontSlant->"Italic"]}], 
     StyleBox["]",
      FontSlant->"Italic"]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.91564341296881*^9, 3.915643433801443*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"22892f4c-0ba2-4edb-a9c5-c33e796e37b9"],

Cell[BoxData[
 RowBox[{"0.087`", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"0.03`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.915643423433601*^9, 3.915643436966893*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"cf175ac9-1217-4514-bd04-44667de6637a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "e.\tFind the ",
 StyleBox["second ",
  FontSlant->"Italic"],
 "derivative of 2.9 sin(0.03",
 StyleBox["x",
  FontSlant->"Italic"],
 ") using the ",
 StyleBox["D",
  FontSlant->"Italic"],
 " notation (find how to do it in the Help menu). Does the double prime \
notation work? more primes?"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.504813796270191*^9, 3.504813842314877*^9}, {
  3.504815875225721*^9, 3.50481587600852*^9}, {3.915225778974114*^9, 
  3.915225817570739*^9}},ExpressionUUID->"b1639bc9-9681-47e8-acf1-\
10137472f2de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"2.9", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"0.03", 
      StyleBox["x",
       FontSlant->"Italic"]}], 
     StyleBox["]",
      FontSlant->"Italic"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9156434579391193`*^9, 3.915643503016967*^9}, {
  3.915643574569697*^9, 3.915643584451326*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b1218e37-65f9-4fdd-9368-cfb230e228f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.00261`"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"0.03`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.915643507616665*^9, 3.9156435848918743`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"54640c4e-c59a-4f14-bfb2-bc3b8868bcef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "d.\tWrite a Manipulate that gives the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "507c261e-7f7e-44dc-ae9a-3375560bfd5b"],
 " derivative of 2.9 sin(0.03",
 StyleBox["x",
  FontSlant->"Italic"],
 ") using the ",
 StyleBox["D",
  FontSlant->"Italic"],
 " notation, with ",
 StyleBox["n ",
  FontSlant->"Italic"],
 "varying",
 StyleBox[" ",
  FontSlant->"Italic"],
 "between 1 and 10 (in increments of 1). Could you have used the prime \
notation here?"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.504813876974004*^9, 3.504813975866458*^9}, {
  3.504814936132204*^9, 3.504814954309242*^9}, {3.504815883042309*^9, 
  3.504815883960277*^9}, {3.915225834187022*^9, 
  3.915225850151403*^9}},ExpressionUUID->"ef3b4e27-46e7-4094-ad23-\
262ec4b70772"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"2.9", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"0.03", 
        StyleBox["x",
         FontSlant->"Italic"]}], 
       StyleBox["]",
        FontSlant->"Italic"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9156435913690643`*^9, 3.915643626585889*^9}, {
  3.915643693419153*^9, 3.915643693887506*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"25172868-4383-4a9c-8e08-ff46c4e48270"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 10, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {363., {4.8876953125, 24.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      D[2.9 Sin[0.03 $CellContext`x], {$CellContext`x, $CellContext`n$$}], 
      "Specifications" :> {{$CellContext`n$$, 1, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{481., {99., 111.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9156436274312773`*^9, 3.9156436567709017`*^9}, 
   3.9156436948167048`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"dcec9262-fe84-498d-b329-8e1e39661dd1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 13.2",
 StyleBox["\n",
  FontWeight->"Bold"],
 "a.\tPlot ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["sin", "2"],
    FontWeight->"Plain"], TraditionalForm]],ExpressionUUID->
  "81275215-f569-47b3-9119-318fff51ce30"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") from 0 to 2\[Pi]. (Careful - think about how you'd enter ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["sin", "2"],
    FontWeight->"Plain"], TraditionalForm]],ExpressionUUID->
  "4b4235c6-870a-4569-9a74-2626846cacf5"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") on a calculator...)"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.504815661801544*^9, 3.504815687295171*^9}, 
   3.756949055950069*^9, {3.756950369584477*^9, 
   3.756950370898551*^9}},ExpressionUUID->"0f381184-7707-4142-b138-\
7b5b900e542b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.915643725068247*^9, 3.915643743587605*^9}, {
  3.915643836950117*^9, 3.915643859067041*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"e7ee0c13-3e6e-49ce-be73-0451304327de"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 2 Pi}, {0., 0.9999997564224381}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 2 Pi}, {0., 0.9999997564224381}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwVmnk41N8Xx5GYsRQzZJSIQglFioRzUxFJRaGsyZYk+5JdQomQPfsSLfZ9
KUuULfkiKWQru/nY9+X3+f0z87yemc+557zf59x7n3mG3/iRhikdDQ1NKv7y
//dd1UxtI6d9FJqvlkaffUKSF5z4dI73lSFkPHph+UH4u8J63gmTX+GP4Mpg
6AaPMKaQvww/2HOcQWtHpnzgKS3847BYLQn3Ag29vMoKob3wgruRNafyCeyV
oPMR1KLAm6N6STQ5AWAq82Ag6Sk/1EjPntRMDoJlGvcf138Jw28lv7qM8Jdg
mLHlyid0AtZFWETc68JAybtPh67kFARIdttlVL4COuQp7X5LBjhkkyvbiiLB
f+u/HhdbeUg5b0m/mh0Nd/UbU9b8zoO4itRV/sxYqChMobN/eREqr29Hqia/
Bk2uI7GCPcrwwzBcOCE8CaqXGO4eO3IN8k+Jy4w0JMPW8Hpl+asb4Cz9qs+5
LgXOxPcoOxRpAj3oC6ZUpsHkB2tXfk0daFasazpdlg6x4n1Je/+7A2FKwtbN
RRkQXcJ7mclaH3jV50oWsjPB45vP/WDfu/D3hpZu4LssuBalnBq5Ywzvb1Xu
8GS+hcSPI+94X5iAjP7Ty0rJ72FQzp0ju9McNKy4f8eE54KaWPWdYJ5HwCID
1VHKefDj4Eel0uc2MFtuyz7UkAe/rsxZDYXYQsnH7mLHunxwclO/Z5BjDxca
krcTKwvhi/3FB/0qLiCk3Hl94mwRmGOW5K0nrsDUtDvtVFkRLHhQXnxreAzt
rZbKjUXFsG3kQOdu5AH6XVKhc9mlcJlRymHJxQeQlvnwOdEyeFkhE10i5QtH
emKl/N+VAU9tS5fqoi9M9m737M8sh2ylifwJTz9wHmnkv5hcCd+cp9KmagMg
bF6vMCq8Gt6yJ1WqbIdAMGecXA1rDWAHnHtWd4dCR/5TvtMaNRBG9VWmfxkK
upN6/3h7a8ChgY21OjMMrHWZbeenayGg9IZNwcIriJC3CIxlqwf+2vnD64sx
8OuX5oM9t+ohPZTNaDkxFnidQP1JbD0kDHlw8l2Jg8ycfRwPBRqg7cjkj/m3
r6GCryEJSX2Br0vxT4N9EmGAVqB0TLsRfD0qBaeupMKRRNY4vfhGGN27eIKn
IBUsZNfc/xtshIsPSZV63Gkwb9euWHm/CfxGFB8zTaUB/V/PthC3ZlC0CzJh
fp0BIl96/51OaoW7Lu7Sp8XewrkGVSZF+3YYijzgoBCUB2xdb75Lv2oHOjPJ
co3mPPg7TBcpVtgOW54D0z+I+RBCU8nHvdAOIRWHBY4+z4fhc8dPz9r9B34f
r1YuviyAwAJmo0S7Dhj+T3BtMbcIupNai9dtu6DtjQw5B8rhfc5Rt9mwLuiV
T5A6+KIcvD/6odH8LpjJNguc7ymHY71yLf/NdYHQa4mINvsKcN+XPZhl+wN4
2aprL+RUwuHgYGZt225Y5eO92X/6E9g8Vr9baNMD1k9K2Rq/1IKqtVwWIbQH
PMvq/pyer4XDxiKYfm4PdAurdX0/WAfdKgweBGoP9F1xDQlwrAN57k8x+g9+
gWuJRSqt8GdgKhNrZzT7DTP3v/5aD6uHjCUW0NPtA39Nldpv/l/hYZlpCN3h
QXguTj3za+gbdI2rEDON/0JnxHm/X+nd8PzEMk3J7XG4ZiV2KvHRH7A93hhZ
kzENsY00ksHuI7B+70FOv/UsFPG3zL18NAZG7AsuVU6zULPwTNPdYwwaPj2+
8NpzFsg6bo53g8YglPt5j07ILAxySdZzZo6B8Pcsuq7sWdBuObxP8M8Y3JQd
1WqenoUJ7oSZDtVxyGG7u1NiOQdK7ra72XgngOPTeFOk3RyUNp/D1kUmwPWB
TYTD4zk4zBS01ic9ARe/eB2TfD4HxqeH5P1vTECvW6Jm9ts5cNO1EbHymwDC
WG9m2vgcZHRL9TwenwDjj1rXQ83mwWjkc/C1t5MgWUIhcT+ahzqjywm7SiaB
Lvd3Z4rzPHiz67u/r5uE1GQD7cLAeXi/lvWou3cShp+YGXS/m4db11fjolmn
wFjVyYoHmwcvE9eiCmucf0YGZjkvwBCly+aI8DRItmurSngvQD4lLEVachro
mrhZKgIXgDtKYk5OfhpSKxJetsQuQJ8YXeVBzWkYTsiIolYugM6z5IQzntNg
bFKcLkWzCEFNQWsV/03DvbmumprARXB95g1VD2fA6HGodlnoIoiM+ekZOs2A
3i41am7MIvgee8C35DkDWpyfDyRlLcLnt70Oqy9n4PLZfCePxkV4sn7MXj9/
BsR9gkVlCUvw4KlFaOzcDIgwqXyWYFvC+2rv8XtrMyD8iv7OMcoSxFa9meCl
pcKhDLcAytElcJ8kFFmxUYHcdH94WXkJftDLvTMSp8Iqm1JMYcASZNxmy00z
p8JiLO2J9y+XQNO6fM8LayrMCXxsSI1egl0Rh3jNHKkwKSW1EJaJx3tFkMB8
qdCvI6Bu83UJnLtcrW4mUKEueXuXGOMyKFypCDf9ToVPxyrijuxdhpY9+/6Y
/qBCZYGjBA/XMuyZE7PX7qVCUf20AbPwMsQhlnt7xqiQOf67fEJpGaI3WMua
t6jw4mTpozf+y6BqUa3rchSDZsmfo44hy+DF7y9rK4YB4fSK/qWoZUhp607R
lcTA76y02t+MZehZMV2hl8PATbH0qEDDMjxWs1V4q46B5c3SoYRdKzC5bvdA
yhaDLK2fOg+ZV8DCYurTBUcMRnVWvsuRV0DmkYvWRVcMP0elP/UKrMDbmdeK
3D4Y6JiVxnErrsD5szmZ7KEYKLuUakZ6r0AzxSPm7Ht8/cc/m00CV6Dj5zVf
3RwM6txXzkuFruD+tbha52Og4CN9sjNpBYwU9vmbl2Jw5nkpC3v1CvQFWTZk
1GHg8OLnk8EvK2AXFP/tWgMGBSEr67ltK3CxP+rb5FcMxF5JT6j/WYHfn3e9
X2jF4Eh8acOLrRUg7/sYe70bA+PEn3J6u1cBjbQc9O3BIDl5pfA46yrQ/tEK
SP+NAU+GdGozzyq0urXSVf3B4E6mNnfckVUYKmhnyx/EIOatc+h90VXQv+C3
GTWMATmn1JMgtwpWZ1tMT49icD3v59LPC6vwMnZqYGYMg5CCFavMK6vgf+XH
yegJDJhKpXWVdFch1+/j9appDC6Xa3dw3luFsJQqHhkqBv6Vzir/LFfBR8G/
PB3DgK6mVNrv8SpMqXMbXZ/H4B0r6c2W7ypQtA073i5goKFrxeEctApPWA0N
5hYxWM/64jv7ahWoY1l0wssYpC0fmrsfvwou9kMfVVcwULvoZjiSvgoiWrUh
eqsYLIb9+KaXvQpG1zkd9NYwuCj2/N21T6vgS8l3FtrAYPrxX0rTl1XwXl5+
NYtzRKNCgOL3VbDek12TtYmB3L7Ypcqfq9BUQr+lvoXBv3sL904PrgK/+YXL
IziH5F/tyBlfhbmyuhTTbdzPnUx0dG4VblvMErpx/qNGl5uytgpVN9U9pHbw
+uP0Dh6gW4PbPnbb3jiLj5cERTCtQSkn44tKnLtPs6+zkteA2aBZ8C/Onk8e
WAQcWAPflpCWdZyF/2vopjmyBtaLsh47OLfzHrr0WHQN7kc0yc7j7GL1uHBB
ag0MXqjQd+J8qKKL/6H8GjwY7v+VgnMj44nQ0Utr8LX2Y6UBzja3nm0bqq+B
12Opd0ScKWkjVr+01oDXJyUjFc+/Zla+V8NwDa5Yu+Qcw/m+QoxKq/kayG6j
hkS8ftKL+dJLNmsgyBY9SYtzxS81oWqXNQjKEOHTxPUzFs6MkPFZA6eh6nvh
uL5MjrS7Cp6tQQLjifLqdby/63Rtj4evgb2byaFe3J87bCUD6XFrQKo2ivuL
+0dnwKbOm7YGx+1kjvbh/r5/b1kV/X4Nmq9ztNTi/t9cqxdhL1qDXZISfpFL
GGwq8cU+r1qDCIbBm9p4v6gNdzp6fMPrqX+tmDGH98MJ8b/LP9bgGG2uscQs
BvEegRo2f9ZAtdso+T3enzMU+RP3sDUYqHrmZjmF+3vtzfhl9nXIji7+x/4X
9zeBRruOex1mhZaF9uLz8WfyTsM5gXW4r5EfuT6AwQn/vanip9Yh9jft7vhe
3J8qF12OW+vwaEnDltiB+8PU2RSsvw6BMYdNXL7j/uiIyTCarcN0umrsD3ye
bRaGONad1qE4zq/7Dj7v7CJX2gZi1kG1QH8xtBLfnxiT2BuT8Xg96+pZZbje
/+Zv5mWtg/fv/Kt5xRiYpMT1epetg4XpvgvhuRiUUSbH+XvWQQklGSemYhC8
LC/KNLgO9e0BkueScH+6wh7Nj63D15t3qxtfY8Acena5bmUd4KX1wZIIDAwY
n+0y4dqAtLJRtd9PMTj1r09JjW8DHmqPmG7h+yHh88nnUsIbMChurMPuifvp
2cO2W3oDmpcv/2J2wmD3sjDvG60N+Hgss/yKKQYf/n6RGY/cgNM1WvHrCAOf
uv3u7QkbcKfT+6wYvl9rJVtXl2VsQJbx3cXr0hjQ6O1Tela8AU6/Nbof4Pu9
ZqeppsiPDWjM9ujEKPh+UEtvbcWxCW6ZQUKnZ6hwOUkxbTZ8E1qfclT1PqdC
QGN7v+/rTXCVj7iT/YQKX+YMKJzpmxB9tO+atTsVLl10Cz5bvAm9ygeNPj2k
guJEobPvT/x5hU36mGtUkDslqMbBswXD4vTMZ/Hz8+RXxiXpjC142Ot9yv7p
DDyajTzRnL0F12LoT593n4Ec7iOWeiVbwKVTULljNwNiVmjA++sWUM4ffKJu
hJ/X7K5NTRNb0MJJOColOwNHdCcTdMW3IV3b3O7Y1DRwYa1KXqXbcDT9XAeL
4jTEhFXfnajeBiGS+qnT0tNAkSpw12zchjqDT2zXRXF2jS4Q/rUNnStbNvr7
pmH/LmPe9vVt+HeZl6dnYgp4uVaWDinsgESl1LJ2yBQIAX9GXf0OHNc54Nj7
bRLivlbQ7rpPg3yqms5MH5uA2cE8V8yKBrkfGZRkOjgByutv5nptaJD1M7Il
H9sELIq+GipyoUEyxLDKE8vjoB7+oNYskAbZGqxenqgdBzp9Hp/mTBoUEz9K
adEehwfzHjThozQI2aoEpOH3TbmD53cOmdCiNlR5+2XRPzg+yPbXw4EOlYkc
+anxagiys0gWxXa7EHZe9m6zbC+4/9HvPO5Pj16WpjF2bHXAorJ8gulzemQg
90R3+U8HWOXzmCeF0KNx7sdax2o6QNevd50UTY+qyg62VPp2gKzIbYH1THok
QX3zMIrQAWuON20bm+hR//1BDcT1HzixXtlryrobjRm7BKT4toGtnMyVxIjd
KJdQVTOe+BVorCO8XsbsRo0FfBks1l8hJGm20Dt+Nwrj8pzTlv8K7+je8txL
341y/JCXad8XGG7kpgoX7UbHYrfD7vJ8gZu3NkLzO3Ee6BRlSK+HM9afuutJ
DEijoLxMvrMW6pP2M5fsY0BxUHkhM7MWNP5zgsz9DCg7t6BD3r0WrKVOZD0T
YEAslbQZ84K1kLme5KouyYBOvlv44OVWA5QAH56eGwzo9bFjwVEGn2A96aLx
VCgDEvMtNPB0LAeFFflwiUgGpEPo4ek7XA4+6tJ1zrEMyFU6QC23owwIW8cE
6FMZkGpSpV2pRBlw3tk7zFOIfz/Svk9nqQROcvy+q/6DAUXQ/XMUf1UE9g86
wyJ+MaDY6pxIVpUiKKlrrf3dz4A8XzIUmO8UgrxtNb/5KAMyen/iZMjDQlBt
Sx/yWmFAboISGtnXCsA08NHdfG5GtDkn2vP4eB5kDViErRxkRCJSeyYNO3Jh
+oxxrbwAI4o4Jry/WT0X7P7d5G8WYURDpreLk1VzwFtRdmj4HCOq2VHaNlP/
AHGb9Hc5DBgRx+adiz/8s6DdJs7IOZUR9T3V9xv9lAIioWwbDm8YUcZrR07q
3RR4kusfafeOES3tnRMa2Z0CZ6h2zQ8LGNHKxRiZ6OvJkPDgipRJHSPa8Jiq
uzucAJZmm4w3hhmRfe3LI1OfYqD+qV2q+igjmgmxF9wUiIGDGeNyapOMSDDq
YuV8YDS0j3TZKs8zImbTPcRXd6JA+m52rzwdAT3cNfo4jyMC6PUMckUECMjb
R7SjuOklGLh1qRwVIqA8ppuD7N9DoDRO9a+gCAFNlWg+Vu0JBstfZ7j5JQlo
1MD3yK3lIPhPa+8TLkX8+d4AuUmjQBBxenqQU4mAhP+Ty734NAD8IjdKSaoE
lHGln+qb7Q8yXWPTrBoEdCh6+3gO8Skk3qjRojcmoIIiM6HuWR9YtTkzR2tG
QPVNJ9NNpXxAI/RD0M59ArLNPC0z4OYNu7/H1Kzb4vmcN9wQEvMEKzVbkTkf
AvLSuKogvOwCXx6M1VOfEpDO4UjOPVXOwBekbzj9jIB8N5TLO585QUeTSsRY
GAE58inz08g7wFllge3+FAK6FDPau0lrA1JpzYFfMwjIRRIgi8saxHfsyPlv
CUit8b1KoKwVCJR+PuqXT0A3YxLWR7ItgIdsVfiwmID8bXUZ7m2bwb5HHAra
5QQU2edjuN/AFJiF8fOhloByCvSOyFwxBoYnrH/IDQR0b/67d0qPEdAMFFts
NRIQ97mrlPBJA1iMYvBsbyegBwwwlFt2G6jzOYSKLgJKCC4MenJVG8bVtV+l
9eCfq6v69dPcgn6GrCynQQKSVt6/V+zzdegxvn7K6C8BFf7oNLyafhU6Pq1+
VBknIHt3oov+jgq07k+5fGqagIz+XhkJjlaCL04qnTyzBNRNEzMyZHUBajrm
9BkWCYhWxtpbzwtBhXjcOLZCQDNriay0ieeg6Lmi/a8NAqq84EhKKT0DuaOT
W3U7BPS3TrM64YokvFN8FfhhFxFJBikmLheKQnriOXIUIxHNfDXd69YgCInr
IwlezEQ08px/LDGaD2K0Xhy9v5eIxo8eoV8I5oTwAqlCDTIRTV1hPLTaywQv
9vTLy3ERUW76+HnGgU0Ff8unjYIHiCj5nUDJjTtjCj5fxDT38hHRkWP2C8fJ
tQruAt39qwJEpLPy1ETo3ksFJ09Pi2EhIpps49CUIvYo2PwWWmgRISLurwMa
i1YLCpZnvnsUixPR3EZ5jDbQg0m4MyFJkoikhiSMf19lBwMq36vAM0Sk5/11
pdZ0P+ioNh60kyWirnv7Zz4UCoDmG5ssXQUiuuC9t/bKsWOgTsd96pIiEUUu
z6b3qpyEywa1H8WViEjheq20g6sUKFbcv0xRJSLzT/3RDw6fxe/zpE5adSK6
+/jAtY/KCnDGrkJ/6gYReQoKnJVcOA8n24zHu27h8eKD27N3LoKgf+FWpj4R
lUVQj7O3X4FDw7qBYXeJSM1b/MH8q2uwX4Ge7GZKRPcv2Wg6N9+APcs3j6o/
JCJHoxcXOIS1gKCxVSBtS0T9dOkT4k90gC4nQ57fEderNaW4besOrJguayy6
ExEHeYikKmwE87WJ/f3eRNR6juPOnfC7MH1Q2eKrHxHpZ3rzZrHcg8Ef0R5x
L4jod9KQxbK4GTRdOpuF4olIs2etR1LkIbh89RT3SiYip3+Swb9lHsFRlfqi
j+l4Pf7ocv4HG/BXu1Yrm42vz0BHpR+3g4uapr+lPhFR08bJzyVNzrDY9c7I
vo6IFAM3+SworpCmNTua/4WIUu60LG8/egx0d9wWxL8T0S67Q1vdZz2gxiiM
5dggEfklpXbSxvuAzXB3uPlfIqLscxX5beYLfCY83G/GiejWWVIm75kn4Gme
KXh4joh47I6bjw/5gZz1R4WDdEyIg2nxgol1IJS6TdiwH2FCalX/YpnFQsFs
S3zl2lEmlPcW/YgvDoV9Xg4eIaJMSOypea4uCgMH351nzKeZUPHezlZDvXCQ
fMaZtluJCQ3xSGw+yomAnKjzP9bMmZBKzufs/RWxYEAJ0JWxYkL69d5K0qZx
wBrXOuRkw4RiWu9FOZFeg1WCNnXBhQlFKdFdvWMfDyLpDxmpz5iQxZjIsWT1
JMjIjz07/J4JNXk7SEoXp4Llhq5ITy4TmkpecWzmSIOTl3gPtBUyoWTooFNy
TIOqntTN8komJHjwsseiTDp07ryvDmthQko+6SZHWjKAVv3TpfNTTOhFy+tX
Lvvfgv7k8I1kEWaUymH9nl4iDwSkMhSjxJkRRYilmmqdB+Me5qdeSDIjg0S1
00rZeeDAPs3hIsuMNMmtN+WO50OQzNLPa6rMKKiFJUpBtADK/RkNdu4zo4Me
m873FIuA87CopcFbZuTCdJpG72MZhIYHab3NZkZqXBK9n/eUAxPdlOJiPjPi
y+u+mGpUDjRDbw88r2BGOzdtVGt3V8B0ovC34hZmdMLrQbbHrUqo33/4JCuV
GdnNKYbEMX0CB9L+5UpJFiR0uuH7tb+10EFL8OWuYkEdNgdaCQqNQM2ONbhe
w4Lq1OkHluwagXjn+LmAehbUJzbTsyerEVCB+uJiKwvqfNYa+ZnUBDnGkWbt
/SzoxuuIYonJJgj6LHAlYIcFeV0ypJlOboGLT+U5lhRZkdYzbFVE9DsUE+zf
tDexonrhUa/pW50gyslmadywB212Xfqz2vcbsJBljlPdexED8aA2JWcIDgcE
nHhkyYaOB/rxeAX9A7tuKU9jKzZ0SlTWmC/uH9QIDrfesmZDS2xMNyuy/oFB
vZylnB0bolGzph9s+AdxtPPpxMds6Ed3CsfEzj8guevtT3/GhhTu04z9sxsF
OluJ3b+y2BDFNIz3+M0xGL7T+1txjA39+i37eZtmAljktTONJtjQLlO2rNU9
E3Car9Pec4oN9f84YjHOMwGBI80sFRgbOqT/9txbmQk4YVWhILHKhs5pbHnk
PJoAd4/YVD4iO/oddWh3Re8EcCZrW26KsKO1GeWLVu8nQcG388x+MXY0OSB7
jr5sEixMru2SOcGOvk46SYTWT0LVUeV4+1PsiG4ufeRJ/yQY559pmzzHjjrb
m3t69kxBTh2n5C81dlSjM08n9mgKLv/rXCu2ZkfTTiP8/ELT4HE8xC3Xhh25
x9K0GJ+chgLby1tZduyoatAoPEZ2Gg5sV9HEO+H5DAvdHFSfBuq+N4y+nuzo
cfHaywGnaYi47MKpHsKOTFTGbCLqp2HwPY/EaDY7Oitq9jJKawY457sLBnLZ
UYtoZqKK4QyoyoRJ/cpnR0XU0XTMfAYK63fLtBazo7CwEgcO1xnw76cqFHxk
R63OH2Rq4mZAdG+tmuc3dvTn1YBUbO8MuNiZWuybYUdX75t/3q9JhcArVHNZ
jB158E4EF96hQvQRZ3ODOXZEv9A5es6YCiXdgWZvltjx+5I9/wFbKizIfjA5
s82ObEb+tZJCqGC9a8FIay8JXXTT7Ryop4JHn5vRY3YSsrLzSX3YQoUXxfRG
iWQSejA84zn5HxXem+8zHOUioffHFs7n/6HCeMtZfadDJFR44q6g3QoV7kV4
346SICFv7njlSkEM7B4Sb1ecIqF+Fc64M8cx8FUK1/lzmoSelu1/kXwSg+TV
NG0hWRLS8Nt7Bp3D4I/e11sliiQ0wz6ymn0Ng5nT12/9vkhClUqOiQk3Mdjc
8+vmthIJxU0JFrndxuBA7aSm0hUSamvL4t51DwMdwT0a3ZokdNuI6YyCIwYW
21E31m+R0N/vPfXJrhg4/+S7watDQpJahrFzHhhEPZO4bqZHQtfuDe/o+2PQ
OXNTfdmEhE7r3JS/G4WBeslr1X1OJCQ69TSMtRCPt2C8w+lCQo7Ptx4fKMHg
yUmRIs7HJCThvlrAXY5B2buyg5yeJAQfwunGPmEgkPRjluxPQoHZXu31TRjI
9cVnkAPx5zNb+m+2YqDNbXKH/JyEBPdbHP7RhsGLV/OfSSEkRMeUfvVNJwbL
AXuj2aPw/CS5+p73YcDW0H2FPYaEjJvN78f/weA4XSINexwJVed+4UkcxMDI
XdSSLZGE9BsrZmz/YvC4fIGXLZmE2lU9GC+OYhC5XNG5N5WEqqqygGEcg2Yb
Ffm9b0go2vMCve4UBn+z2eb3ZJFQHr1h8Mw0BjuTP9/seUdC1Ilz4jZUDKRM
zdj25OD1raP8S3O4PqliDax5eD84R4TGzGNwf2DRlbWAhMo2dnx6FzBIvP1k
hKWEhKzLjkRJLOP6RKnGsJSRUOeLwJKLK7jenexXWSpIKDPl9l/lVQyobL9o
WapISJszkvfcGgYE9eQS5k8kdHRJ2YR3HdczyPwBcw2+vsLLojmc5RvFDzHX
kZDHn+g9xRu4/7uXu5jqSUilONHWYhPvP8WPz5i+kJBuxGwf8xaur5efAlMj
CdmjyWtJOGdWXVkgNpPQgu1qk8A2BnVrpCxiKwk5/YhWjcK578xvPWIbCd1i
ufXfGs7L9insxHYS2pfdqn91BwP2fIsvhA4S6r7wHgvFWZR6wo3QRUKvNLL9
63FWOr5ygtCN+30jSWAcZyOLT38Ze0iIMVf/8wbObhlPYxl/4/62d1n8//fQ
qGE1dcY+EhpjoyUv4JzHx7GL8Q/eD5+ptd04N+v1ljIMkpDRiQrHdzj/i021
YhgmIfHIl+LWONP8vM/P8JeE+o69n+bHeT+HRPfuURIaodzOa8Dzl7qx+nz3
OJ7PkyXX2zhfC6mG3ZMkJOA9rdKP62HZ4r9IP01CD/dXHLqBsx9B/S09Fa9f
Y3K7CNcz8RKnAf0sCVUc4P5HwLnct49EP09CXfrznWq4/tRNS/ddyyT0KCOt
LR3377bOlWNrK3h8Rdu0j7i/9YXHu6lrJPy+Vy3wFfc/1nL6xO8tvN6rKUc+
LGFA/6W17/sOCVm+Ofs2YBEDa/7sZw20ZPRxXL9PE++niz0PR/J2kxHj5LLG
p1kMck+ph75hJKPRxtEYPQyv96W4fDyRjLbadMKnZjCYvYRFBbCS0VcR3Yze
SQxeF9qoGnCSUeauM070+Hww7L2xoslFRo0CYr5HhzGwsZRIV+EmI/UXmury
+Dwp8c9vSR0kI3qF1+Jn8fmbD7HPZxYkoyWRi0qP8fnUn9Q0oBUmo25+j+dH
/sOg8ZIU88pRMvprcy6pGp/nhM1Fk2FRMrrsEHihEZ//y5ZOlHIpMupi0ao8
XI1BYYNWQ84ZMuJLvfT1ZhUGvPzSduky+Pfji0ud8P1k4edKy0s5MupAR28E
F/5ff1cvs4tklDS6VbI7EwNiym1RPSUykkk9Kf0pDQOHzbO/blwmoyw6r0Lz
ZAxUCtcl5dXI6GWeenZwLAaLh9xHyTfJyDl5h04oCANDd71XRC0y2ms8W2MW
gPfXTzm0o01GxmGSUTFPMEgK2Yqd1CWj0AStyO9uGKhuel6tvUdGT8VmrgU9
wCDlp0+RtT0ZRQcEnZK/jMFow8mBEEcyauX6cOH4BXweigaIuc5k9EVEaR9B
AYOSUHlDzI2MRr6c3B9yCoNWlTWijR8ZBTEKXmw9iMFqpY2hbSQZbSoJxe3D
qKDwju95WDQZpUvEFy2MU+FJTFtRfiwZMas6rFQPU2GPoyjTfALuF6MJSaib
CofFx4vs3pBRX8E+s2NVVFBPNmRyKCUjEQ5NIvkpFSJC9pyOKCcjt5b5A6Me
VPjl/tGwqJKMZJeHvmc5UcHk9oHixWoy0qN3ltsyp4Ir6aehYyPeT0zb7CMq
VEj3Uy92+kVGKq9fn3nHRIV1C3kj1w0y+qdDp2vmjZ/vlSLIcYuMaOf0Inud
Z+A1K+WQ7Q4eT+DUywuPZkCuYH7AYhcH+nVccmRKfwY8NzINdZg5kKKxzWai
7AzsCiEZSh/gQOr+HQlRc9PAUjimvyTLgQqDa54wa03Dwa0wXdvHHKhr3lzo
1MYkXB6+Wh7tzoFYBz1j31EnweErkeuTJwcim3y15ByehOYwnw6mJxzIpfGw
cUPjJDgJ2aqkB3EgWtEChdDISWi/dl36ZzwH2pk6VvhHdBJ8U/eQ5as5UOun
Bq8mjQkYVQ5qJtBzInf3Z390vMbgs1Ar8AZxoiY+rTyV4BGwJLyh5yfuQ6/t
i48XqAxAafIR+c9h+1CoIWui2WA3tJ2Ta9Bg50Jk+rvk3pPf4XmZ44YSmQuN
LLjeOLfRBsqncyXOcXKhFu1IcmVDG9SICyQe5uZC2rarGLduGxTyE5wXD3Gh
oqbG6DsB3yCGseto1Eku9PaUZR55tAXudT548esaF9o6P9D+6WMjHLqeUfft
BhdKdaA9YPOiEfpa/6zWanIh1dgNFmXdRtD6csP0nTYX2m1On2629hUul0sr
uBlyobLI66W20l9BPGnXLM8jLiRLlKwdqGiAVcvXmkYhXKgrSn+v1mAdvHyc
xugVyoV2aVduaubVgdDz95UJ4Vxo6Pm7Dj/vOrj1tvJwbxQXiqAM7vHmr4OC
sd6FW0lc6PumR9ywaS1YmfBEXMnjQjzneF4zz1XDoH5C15kOLlTeNp99NbgC
nB9mBN7q4kJPLT0Hm2UrYI9HtpxDNxdy3wq3rBgvB/n4j+n5v7nQZlL60tyl
coj73e8gOsKFxMvO97fuLoOb2rycAotciCGwZdHrdTE0Xk+6xbqPgiJOtnOe
5M8Hy/p/nxgpFKTD/CGCfzgPWGVEj9Ltp6APVdVfvdLyQIOvfH35IAXV5sjC
E+E86J3pSBoUpKD1sPfcd+7nAPU5w2ThaQo68HOJ4vX1HYRuq2nmSOPx6a3P
ntR+B6fsXlVlnaWgp8/5GerG3oLL7UMvE+QpyDLtvvYz5rdAd1RWKuASBdnK
+70s0M8EzoaHnnduUVCa06RYs2g6lMkUjd3UpqDpqXal0uY0uPNh/fq12xQk
PEDvEHQ/DRJfBRy+qE9BdhH5/pNvU+GocUqjmCkFoUJCZfDpFJDb6SLROlKQ
DfHul4dz8fDH7oD7hhMFydQvV3mpxoPP6N1/Sy4UxPjf9XHLjNfw5Ru1dNKd
gr6c8Lr73SgOrsUT9Lv8KMjqkSvn8Ew0GJ+Vy8yMoKBr3uqXC+6+gvsz35b6
oiiI7Zu9+7fGcLBJMbxIiqUgMwnmxfOS4eBFfDLknkBBl9+3BJ5lCYP4X00H
NN7g+V5aUZspC4a0YF3LgCwKuuOq0P7nwwt4d36mrOodBVknj+cHZwRB+Vs2
LeFcCtp7IzHkaMYz6HbVDt0spaD7HIN6Dv1PoV9s4o9EBQX1Plx9Z7fiB3+H
HouZV1FQ3qWTH6X3+cGCSmLzfzUUtCxsb7ff2BfY9v+jz2yiIDWBN7YfzTyB
q81Js6+Fgvq0DToMx9yB15eQyt5GQR3zLxOSbN1AbPI4uHdQ0I8bwv7bqS6g
WmHneqOXgmYr1cItXO3hhjV9o38/7k/50nNBZTvQEYjaVzVAQZ4lcsMveG3B
/Hl5odBfCoquUgqp6XoI1gpX6PRG8fpK9hATPz4Ap/m+62HjeD+YHKTpLb8P
fndoqBvTFFTSYMXrMW0KQXvC5SQwCmo+rjw+KmAC4XWHg8zmKKiOMcq+3MoY
UkSUj/63REHlxof5FB0NIOtPjxPDKgWRyw8yO3joQl64ZcO5dQqKn5HZG/BB
Bz6tBxu/2cb1dO6e0vfShIYcvvxeGm5E+NNGPnr4BrQa5++w7eJGSadi/1X3
XoWufRfUlXZzo9WzvfZs1SrQ29wV78bIjVhMcn8ozV6CYU+zqTwiN1pqs8w1
f6QIk5KrZ0eZuRHrRusLqosCzI0+Czywhxspqy/SLuTIwGrcgZ/X2bgRVx+1
dcT7FOyoZwv6k7iRoFGUe0i/GDDsAodKDm7k2rbcfmlOEFhL2+tm93Gj4xFn
vaiuvMDxwJhdiJsbcdZmTtzyIcMBvkVD3QPc6PVHMd/Eud0g0Pk0J/QgN5qd
sC945bOgIBLAtdXAx412zn3I/OfTqSBx7u2VDX58Pex7zP//D/o/lnQbMw==

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 2 Pi}, {0., 0.9999997564224381}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {0., 0.9999997564224381}}, {{0, 6.283185307179586}, {0.,
      0.9999997564224381}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.915643860799345*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"1a2a0ed1-f2f9-466b-a5bb-dc3a435665a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b.\t",
 "Obtain the indefinite integral of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["sin", "2"],
    FontWeight->"Plain"], TraditionalForm]],ExpressionUUID->
  "1bef16b6-65df-4811-99a6-cd38322613d5"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ")."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"f2edd7ef-aa49-4b00-b6fb-3897fab7b4ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.915643972519075*^9, 3.91564399451618*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"632d75ee-0106-4370-8b5f-758a945e9584"],

Cell[BoxData[
 RowBox[{
  FractionBox["x", "2"], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.915643995057598*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"a7aaa618-45b8-4d09-b162-cfb08a1ae273"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "c.\tObtain the definite integral of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["sin", "2"],
    FontWeight->"Plain"], TraditionalForm]],ExpressionUUID->
  "b453e9cb-8025-4206-9e3c-9c68a1353fae"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") from 0 to 2\[Pi]."
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {
   Inherited, 
    Inherited}},ExpressionUUID->"a802248f-e9b2-42e7-a366-dc9e9e5ff1b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.91564403107024*^9, 3.915644039245412*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"7fefb4ac-0187-4dad-8cf7-e626ad6e5047"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.915644040556898*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"9591c564-88d9-4c9e-b665-4292a2f1b8de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "d.\tIn a Manipulate, obtain the definite integral of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["sin", "2"],
    FontWeight->"Plain"], TraditionalForm]],ExpressionUUID->
  "0411e93a-9fb6-41ec-8cd0-3e47b34061f9"],
 "(\[Omega]",
 StyleBox["x",
  FontSlant->"Italic"],
 ") from 0 to 2\[Pi], for \[Omega] varying between .2 and 2"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.5048150379636583`*^9, 
  3.504815122138005*^9}},ExpressionUUID->"e513ae7f-89ba-4930-80a5-\
84e5cb7d32e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "x"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", ".2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9156440984654503`*^9, 3.915644179717598*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"e0623328-7d6c-4f8c-9006-8b95172925ae"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Omega]$$ = 0.9119999999999999, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Omega]$$], 0.2, 2, ControlType -> Manipulator}}, 
    Typeset`size$$ = {109., {0.312, 16.9}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Omega]$$ = 0.2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Integrate[
       Sin[$CellContext`\[Omega]$$ $CellContext`x]^2, {$CellContext`x, 0, 2 
         Pi}], "Specifications" :> {{$CellContext`\[Omega]$$, 0.2, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{485., {99., 111.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9156441235500517`*^9, 3.915644180248495*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"31a117dd-b786-4149-ad99-d0434081bf88"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 13.3 Find the definite integral of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Sin", "(", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"3", " ", "x"}], " ", "+", "2"}], ")"}], " ", "for", " ", "x", 
    " ", 
    RowBox[{"in", " ", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", " ", "2"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"78435bd5-81c0-442a-be23-d21c3d5573ce"]
}], "Subsection",
 CellChangeTimes->{{3.761596384415051*^9, 
  3.761596461964745*^9}},ExpressionUUID->"858735a3-e8f3-4d2f-8b0a-\
1498388ece9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     SuperscriptBox["x", "3"], "-", 
     RowBox[{"3", " ", "x"}], " ", "+", "2"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.915644200283684*^9, 3.915644228733302*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"112ce4ec-dbd9-4d4b-b222-11c83873a1c5"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "1"}], "2"], 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", "-", 
     RowBox[{"3", " ", "x"}], "+", 
     SuperscriptBox["x", "3"]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.915644232888781*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"22bc1b03-15c5-4874-b581-bd0a53a5790b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["14. Solving  Equations", "Section",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.75695021321143*^9, 3.756950220438053*^9}, 
   3.757013838389646*^9, 3.915123376896921*^9, {3.915225907489028*^9, 
   3.915225908853092*^9}},ExpressionUUID->"ff493579-76d9-4bfa-846c-\
decae025a8c1"],

Cell[TextData[{
 "Representing differential equations in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " requires that we be able to represent equalities.  To avoid confusion with \
the assignment equal sign (=), ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses a ",
 StyleBox["double-equal sign",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 " (",
 StyleBox["==",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 ") for equality in an equation.  Thus, we write the mathematical equation ",
 StyleBox["y",
  FontSlant->"Italic"],
 " = 5",
 StyleBox["x",
  FontSlant->"Italic"],
 " + 3 as ",
 StyleBox["y",
  FontSlant->"Italic"],
 " ",
 StyleBox["==",
  FontWeight->"Bold"],
 " 5",
 StyleBox["x",
  FontSlant->"Italic"],
 " + 3 in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  \nThere are several ways to solve algebraic equations in Mathematica. \
The most common is using the command Solve:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568071529611996*^9, 3.568071531033072*^9}, {
  3.915123395232422*^9, 3.915123457113571*^9}, {3.9151234889994497`*^9, 
  3.91512349777785*^9}},ExpressionUUID->"d585f094-6808-49d1-a780-\
1823dde9d243"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"x", "^", "2"}]}], " ", "-", " ", "6"}], "==", "2"}], ",", " ", 
   "x"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.915123463681181*^9, 
  3.915123566349671*^9}},ExpressionUUID->"caad5cce-8dab-4167-874e-\
294cec090b38"],

Cell["\<\
Other commands that solve algebraic equations are NSolve, Reduce, FindRoots.\
\>", "Text",
 CellChangeTimes->{{3.915123580282817*^9, 3.915123619024708*^9}, {
   3.915123655145363*^9, 3.9151236615126557`*^9}, 
   3.915204093350384*^9},ExpressionUUID->"52d60dc0-12af-408a-ba7a-\
405e8fb51263"],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 14.1 Solve the equations \ni) ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "+", "x"}], " ", "=", "0"}]}], 
   TraditionalForm]], "Subsection",ExpressionUUID->
  "8a216538-5cd9-451c-a276-1a448486c8bb"],
 "\nii) ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "+", "x", " ", "-", ".2"}], " ", "=", "0"}]}],
    TraditionalForm]], "Subsection",ExpressionUUID->
  "e7230303-8ff8-4af4-aa84-9747242fac36"],
 " , asking for only the real solutions\niii) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "3"], "+", 
     RowBox[{"Sin", "[", "x", "]"}], " ", "-", ".2"}], " ", "=", "0"}], 
   TraditionalForm]], "Subsection",ExpressionUUID->
  "34aa63ec-c9e5-4004-9af8-fb05d0ec4e1b"],
 " , asking for the solution nearest to -\[ImaginaryI]"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.756949054963765*^9, {3.756950246195744*^9, 3.75695024826445*^9}, 
   3.7570028167814493`*^9, {3.757002870323735*^9, 3.757002871061788*^9}, 
   3.757013838408418*^9, {3.761596855346354*^9, 3.761596866694008*^9}, {
   3.915123797606*^9, 3.915123820083166*^9}, {3.915200123543602*^9, 
   3.91520025444986*^9}, {3.915204117123807*^9, 3.915204192412888*^9}, {
   3.915225912731592*^9, 
   3.915225913364664*^9}},ExpressionUUID->"8b745e95-709e-4609-9b07-\
cf7e010be294"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   FormBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", "x"}], " ", "==", "0"}]}],
    TraditionalForm], ",", " ", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "3"], "+", "x", " ", "-", ".2"}], " ", "==", "0"}], 
   ",", "x", ",", " ", "Reals"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "+", 
      RowBox[{"Sin", "[", "x", "]"}], "-", ".2"}], " ", "==", "0"}], ",", "x",
     " ", ",", "i"}],
   TraditionalForm], "]"}]}], "Input",
 CellChangeTimes->{{3.9156443197349777`*^9, 3.915644346838763*^9}, {
   3.915644447910063*^9, 3.915644572597178*^9}, {3.9156446277596197`*^9, 
   3.9156447077789097`*^9}, 3.9156448399322233`*^9, {3.9156448806509438`*^9, 
   3.91564488375541*^9}, {3.9156449938052177`*^9, 3.915645008604334*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[122]:=",ExpressionUUID->"4be32b0c-d985-464b-8574-7bc017d90c8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "\[ImaginaryI]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.915644339723612*^9, 3.915644347555358*^9}, 
   3.91564448318898*^9, 3.9156445345900507`*^9, 3.9156446308894444`*^9, {
   3.915644667973768*^9, 3.915644696286983*^9}, {3.9156448254319696`*^9, 
   3.915644884567389*^9}, {3.915644995551244*^9, 3.9156450119164953`*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"f4517240-26fe-4b33-a4bf-9cdb3ee0587f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.19282993096291295`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.915644339723612*^9, 3.915644347555358*^9}, 
   3.91564448318898*^9, 3.9156445345900507`*^9, 3.9156446308894444`*^9, {
   3.915644667973768*^9, 3.915644696286983*^9}, {3.9156448254319696`*^9, 
   3.915644884567389*^9}, {3.915644995551244*^9, 3.915645011919366*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"ad22db9c-4fbd-48bb-b2e2-9766fadc2da9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential Equations", "Subsection",
 CellChangeTimes->{{3.915123750148195*^9, 
  3.915123758771122*^9}},ExpressionUUID->"4ed7f8c2-7ca8-42a0-abd9-\
c958b9af80cf"],

Cell[TextData[{
 "We can employ the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 StyleBox["DSolve",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1],
  Background->RGBColor[1, 1, 0]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "to solve a differential equation or a system of differential equations.  \
For example, suppose we wish to solve the differential equation ",
 StyleBox["F'",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") = -",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", 
    StyleBox["2",
     FontColor->GrayLevel[0]]], TraditionalForm]],ExpressionUUID->
  "eb528141-493a-4632-b8fa-21de80a676cd"],
 " + 10",
 StyleBox["t",
  FontSlant->"Italic"],
 " + 24 with initial condition ",
 StyleBox["F",
  FontSlant->"Italic"],
 "(0) = 30.  With braces surrounding these equations and double-equal signs \
to express the equality, we also indicate that we want to solve for ",
 StyleBox["F",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") and ",
 StyleBox["t",
  FontSlant->"Italic"],
 " is the independent variable, as follows:"
}], "Text",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.568071529611996*^9, 
  3.568071531033072*^9}},ExpressionUUID->"89a78665-8afc-4fea-a18b-\
d00ef6d2ab4b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "t", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["DSolve",
   Background->RGBColor[1, 1, 0]], 
  StyleBox["[",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{
    StyleBox["{",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"F", "'"}], "[", "t", "]"}],
       Background->RGBColor[1, 1, 0]], 
      StyleBox[" ",
       Background->RGBColor[1, 1, 0]], 
      StyleBox["==",
       Background->RGBColor[1, 1, 0]], "  ", 
      RowBox[{
       RowBox[{"10", " ", 
        RowBox[{"F", "[", "t", "]"}]}], " ", "-", 
       SuperscriptBox["t", "2"], " ", "+", " ", "24"}]}], ",", " ", 
     RowBox[{
      RowBox[{"F", "[", "0", "]"}], " ", 
      StyleBox["==",
       Background->RGBColor[1, 1, 0]], " ", "30"}]}], 
    StyleBox["}",
     Background->RGBColor[1, 1, 0]]}], 
   StyleBox[",",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[" ",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[
    RowBox[{"F", "[", "t", "]"}],
    Background->RGBColor[1, 1, 0]], 
   StyleBox[",",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[" ",
    Background->RGBColor[1, 1, 0]], 
   StyleBox["t",
    Background->RGBColor[1, 1, 0]]}], 
  StyleBox["]",
   Background->RGBColor[1, 1, 0]]}]}], "Input",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.76159677830871*^9, 3.76159682044876*^9}, {
  3.915204408857355*^9, 3.915204412322708*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"13b2cb7b-c47b-40ad-9fee-aafea51b63e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"F", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "500"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1199"}], "+", 
       RowBox[{"16199", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"10", " ", "t"}]]}], "+", 
       RowBox[{"10", " ", "t"}], "+", 
       RowBox[{"50", " ", 
        SuperscriptBox["t", "2"]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9156477279527073`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"c3fe7f48-0399-4e71-b641-82920398cdb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "QRQ 14.2  i) Solve the differential equation ",
 StyleBox["P'",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") = 0.1",
 StyleBox["P",
  FontSlant->"Italic"],
 "(",
 StyleBox["t",
  FontSlant->"Italic"],
 ") with initial condition ",
 StyleBox["P",
  FontSlant->"Italic"],
 "(0) = 100 , using Mathematica. \nii) Graph  the solution for t in [0, 20] \
and hover over the graph to estimate P(19). Then give the value to 3 digits \
of accuracy. How close were you in your estimate? Can you get more digits of \
accuracy?"
}], "Subsubsection",
 CellMargins->{{20, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.756949054963765*^9, {3.756950246195744*^9, 3.75695024826445*^9}, 
   3.7570028167814493`*^9, {3.757002870323735*^9, 3.757002871061788*^9}, 
   3.7570138384084177`*^9, {3.761596855346354*^9, 3.761596866694008*^9}, {
   3.915204208641349*^9, 3.915204250891149*^9}, {3.915204686118431*^9, 
   3.915204789005549*^9}, {3.9152048375605993`*^9, 3.915204862864753*^9}, {
   3.915205444438931*^9, 3.915205461072486*^9}, {3.915224989773278*^9, 
   3.915225000886133*^9}, {3.915225197562106*^9, 3.915225214558181*^9}, {
   3.9152259182087927`*^9, 
   3.915225919852324*^9}},ExpressionUUID->"801ce721-0332-427b-8d57-\
5d22f6f784ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["DSolve",
   Background->RGBColor[1, 1, 0]], 
  StyleBox["[",
   Background->RGBColor[1, 1, 0]], 
  RowBox[{
   RowBox[{
    StyleBox["{",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"P", "'"}], "[", "t", "]"}],
       Background->RGBColor[1, 1, 0]], 
      StyleBox[" ",
       Background->RGBColor[1, 1, 0]], 
      StyleBox["==",
       Background->RGBColor[1, 1, 0]], "  ", 
      RowBox[{"0.1", " ", "*", 
       RowBox[{"P", "[", "t", "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"P", "[", "0", "]"}], " ", 
      StyleBox["==",
       Background->RGBColor[1, 1, 0]], " ", "100"}]}], 
    StyleBox["}",
     Background->RGBColor[1, 1, 0]]}], 
   StyleBox[",",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[" ",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[
    RowBox[{"P", "[", "t", "]"}],
    Background->RGBColor[1, 1, 0]], 
   StyleBox[",",
    Background->RGBColor[1, 1, 0]], 
   StyleBox[" ",
    Background->RGBColor[1, 1, 0]], 
   StyleBox["t",
    Background->RGBColor[1, 1, 0]]}], 
  StyleBox["]",
   Background->RGBColor[1, 1, 0]]}]}], "Input",
 CellChangeTimes->{{3.91564786995616*^9, 3.915648055423465*^9}, {
  3.915648107348322*^9, 3.915648149258421*^9}, {3.915648227362067*^9, 
  3.915648231656091*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b35a07d6-0c53-4189-86c1-1c43d86b3f3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"P", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"100.`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.1`", " ", "t"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.915720611251243*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"749efa10-b5c2-43f3-8a9f-6daf2a7027a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"P", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"100.`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.1`", " ", "t"}]]}]}], "}"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"0.1`", " ", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"100.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"0.1`", " ", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.915648246223561*^9, 3.915648361253772*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"7e027a5b-d5ae-45a8-80f7-bf8f92f3d8c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"P", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"100.`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.1`", " ", "t"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.915648269756393*^9, 3.915648362341157*^9}, 
   3.915720612519433*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"89e30ae2-79c7-443c-8e9d-6f90081b6941"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwVkWs01AkAR8cOQ4wzWb2smPFYNCH825NU5he1RVTKZA3RjOdhPDNLSEz8
JxWNWMkjJFospUWpXYts8mhKpAfiYGpTThspI2XbD/fcj/fDNRBE7Av4hkKh
uH7lfxclCWjW/gX2VRf0tSgUT7T3sVw8WEc4ltVnvaeonli803ycxUrnFIa8
3T6o6omilgymCus8Z9+WO9M3GJ4QbhGFfWRWcqyqSq4nMD3R9yk4519mE8eb
6KUyOZ5QHRwznWJ2clYKCe5wkidKu4qjXjOfcnglJN+ewkPtlfRBoeUkR9hG
G7lk4IUgTu/5N9EzHDs7f7UNm7wRLl8zXl+r4DxoVrf14B2EukGq6YgtBd5V
3YzrF3yQubSbXXqICiVz59eMZ74QDLr/Re2hIaylZ4d28SFE/Z0qiDBVxweG
+roILh91kfT9q5w00esXwcumCVCaEDpp5bEU7B39zEqZAOLiBbf3b7Sgomek
9GOWHyh9o/gjXhta/o70Og9/mMQExrmzl+PE1s2uoxsCMDF77oDGnyswqLbM
oVUrEM7ykKNno1ZBcK1k833VIOyekK7V1/8Ow4mfbTqpwZi8LUi+W6MLZ9kS
3fi5YFhqDeg5+uqheLVG4AQ9BOqcWf7QjD5uL7H1r9IJxY4p3kdDLgvpL3yy
jZ2EeNLmr8QzN0APteOUUnIYGk60+7BmDVDXNbRNrTYcgSqiUZnMEA+z+Dez
lSLhF53QQM83wopRJivlciTWBa2VufCN0fRErbZubxTuf2uuIdr4PT5mvnd6
zIjGrVpxgTnVBL+4RKWWd0YjQYm9t2fYBMcmndxiCw5DfSh+Z3i9KTYxQ4O8
omMgrzDIKU40w/J8DzNtRxFyzHSUm7hr4KMQrx6w/BnS/MAOPosNG19uJnNZ
LHg5B2X0l2yUCBkPRj/HYm5buaK4eS1oKUNKFNoRjMsd4tok5pDXrS+spMXj
4hZr3Xt8C2QYRbpLzBJQkybSCrKwRFy7vPKsQyIkXL9d1FlLJLU7CKwFR/HD
UGml5N46fBZpvNW7nIS8NQU193ZZwWJPmVBl/BiOtWTk7WqyQnnhc7/hsmS4
6nLLu4yt8Uj8xPc0LwVbwzu8tNKtMeXNP6NMF3/9IjDumbXGnoj557H9Yhjf
vpy728sG0u3RbofPHYfUoo39sNkGbZoTj+CTisAZ5d5ONgF2WuHdYfs0COqm
WelnCFyzjw200CEhFO9fcM4i8El/7ClDj4Rof/1jejaBxpDVC9MsEidmRZnS
XAJ56+Ndb5mRqN2o+HSuiADFzdbU3ZaEonVxoKKaQGtIc2+FBwnpQ3pGewcB
5wbNoQe5JPLLwoLJTgL9T38K6MwnURYjc9zZTaBmJ7e07QKJxhXS+W4ZgT1X
R6yvV5AY4mkH9z0i8Ft69Y1fG0mYjus4jo0TCCq7EVczQMKqPl7/kpyAwZvh
TXXPSNilDSoCXhLoqqn5veE5CRfToquvJgmYVHW3trwgER3K0n/3jkCvUaLX
yAcSiZtTFNdmvvYrIzr+mSeRpjnWHzNLgHeA/mr6C4m8K2Wn5uYI5MhbXJeo
SnAxWTno5jyBZ42rspZrSFDtFuCQuEAg+PT5k4YMCeoN7+jZfyFQFepnZ6Ut
QfOMiWJxkUCtb26J/UoJ/gPRYiQF
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwVkWs01AkAR8cOQ4wzWb2smPFYNCH825NU5he1RVTKZA3RjOdhPDNLSEz8
JxWNWMkjJFospUWpXYts8mhKpAfiYGpTThspI2XbD/fcj/fDNRBE7Av4hkKh
uH7lfxclCWjW/gX2VRf0tSgUT7T3sVw8WEc4ltVnvaeonli803ycxUrnFIa8
3T6o6omilgymCus8Z9+WO9M3GJ4QbhGFfWRWcqyqSq4nMD3R9yk4519mE8eb
6KUyOZ5QHRwznWJ2clYKCe5wkidKu4qjXjOfcnglJN+ewkPtlfRBoeUkR9hG
G7lk4IUgTu/5N9EzHDs7f7UNm7wRLl8zXl+r4DxoVrf14B2EukGq6YgtBd5V
3YzrF3yQubSbXXqICiVz59eMZ74QDLr/Re2hIaylZ4d28SFE/Z0qiDBVxweG
+roILh91kfT9q5w00esXwcumCVCaEDpp5bEU7B39zEqZAOLiBbf3b7Sgomek
9GOWHyh9o/gjXhta/o70Og9/mMQExrmzl+PE1s2uoxsCMDF77oDGnyswqLbM
oVUrEM7ykKNno1ZBcK1k833VIOyekK7V1/8Ow4mfbTqpwZi8LUi+W6MLZ9kS
3fi5YFhqDeg5+uqheLVG4AQ9BOqcWf7QjD5uL7H1r9IJxY4p3kdDLgvpL3yy
jZ2EeNLmr8QzN0APteOUUnIYGk60+7BmDVDXNbRNrTYcgSqiUZnMEA+z+Dez
lSLhF53QQM83wopRJivlciTWBa2VufCN0fRErbZubxTuf2uuIdr4PT5mvnd6
zIjGrVpxgTnVBL+4RKWWd0YjQYm9t2fYBMcmndxiCw5DfSh+Z3i9KTYxQ4O8
omMgrzDIKU40w/J8DzNtRxFyzHSUm7hr4KMQrx6w/BnS/MAOPosNG19uJnNZ
LHg5B2X0l2yUCBkPRj/HYm5buaK4eS1oKUNKFNoRjMsd4tok5pDXrS+spMXj
4hZr3Xt8C2QYRbpLzBJQkybSCrKwRFy7vPKsQyIkXL9d1FlLJLU7CKwFR/HD
UGml5N46fBZpvNW7nIS8NQU193ZZwWJPmVBl/BiOtWTk7WqyQnnhc7/hsmS4
6nLLu4yt8Uj8xPc0LwVbwzu8tNKtMeXNP6NMF3/9IjDumbXGnoj557H9Yhjf
vpy728sG0u3RbofPHYfUoo39sNkGbZoTj+CTisAZ5d5ONgF2WuHdYfs0COqm
WelnCFyzjw200CEhFO9fcM4i8El/7ClDj4Rof/1jejaBxpDVC9MsEidmRZnS
XAJ56+Ndb5mRqN2o+HSuiADFzdbU3ZaEonVxoKKaQGtIc2+FBwnpQ3pGewcB
5wbNoQe5JPLLwoLJTgL9T38K6MwnURYjc9zZTaBmJ7e07QKJxhXS+W4ZgT1X
R6yvV5AY4mkH9z0i8Ft69Y1fG0mYjus4jo0TCCq7EVczQMKqPl7/kpyAwZvh
TXXPSNilDSoCXhLoqqn5veE5CRfToquvJgmYVHW3trwgER3K0n/3jkCvUaLX
yAcSiZtTFNdmvvYrIzr+mSeRpjnWHzNLgHeA/mr6C4m8K2Wn5uYI5MhbXJeo
SnAxWTno5jyBZ42rspZrSFDtFuCQuEAg+PT5k4YMCeoN7+jZfyFQFepnZ6Ut
QfOMiWJxkUCtb26J/UoJ/gPRYiQF
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 20}, {100.00000408163274`, 738.905579733653}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 100.00000408163297`}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 20}, {100.00000408163274`, 738.905579733653}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 100.00000408163297`}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwVkWs01AkAR8cOQ4wzWb2smPFYNCH825NU5he1RVTKZA3RjOdhPDNLSEz8
JxWNWMkjJFospUWpXYts8mhKpAfiYGpTThspI2XbD/fcj/fDNRBE7Av4hkKh
uH7lfxclCWjW/gX2VRf0tSgUT7T3sVw8WEc4ltVnvaeonli803ycxUrnFIa8
3T6o6omilgymCus8Z9+WO9M3GJ4QbhGFfWRWcqyqSq4nMD3R9yk4519mE8eb
6KUyOZ5QHRwznWJ2clYKCe5wkidKu4qjXjOfcnglJN+ewkPtlfRBoeUkR9hG
G7lk4IUgTu/5N9EzHDs7f7UNm7wRLl8zXl+r4DxoVrf14B2EukGq6YgtBd5V
3YzrF3yQubSbXXqICiVz59eMZ74QDLr/Re2hIaylZ4d28SFE/Z0qiDBVxweG
+roILh91kfT9q5w00esXwcumCVCaEDpp5bEU7B39zEqZAOLiBbf3b7Sgomek
9GOWHyh9o/gjXhta/o70Og9/mMQExrmzl+PE1s2uoxsCMDF77oDGnyswqLbM
oVUrEM7ykKNno1ZBcK1k833VIOyekK7V1/8Ow4mfbTqpwZi8LUi+W6MLZ9kS
3fi5YFhqDeg5+uqheLVG4AQ9BOqcWf7QjD5uL7H1r9IJxY4p3kdDLgvpL3yy
jZ2EeNLmr8QzN0APteOUUnIYGk60+7BmDVDXNbRNrTYcgSqiUZnMEA+z+Dez
lSLhF53QQM83wopRJivlciTWBa2VufCN0fRErbZubxTuf2uuIdr4PT5mvnd6
zIjGrVpxgTnVBL+4RKWWd0YjQYm9t2fYBMcmndxiCw5DfSh+Z3i9KTYxQ4O8
omMgrzDIKU40w/J8DzNtRxFyzHSUm7hr4KMQrx6w/BnS/MAOPosNG19uJnNZ
LHg5B2X0l2yUCBkPRj/HYm5buaK4eS1oKUNKFNoRjMsd4tok5pDXrS+spMXj
4hZr3Xt8C2QYRbpLzBJQkybSCrKwRFy7vPKsQyIkXL9d1FlLJLU7CKwFR/HD
UGml5N46fBZpvNW7nIS8NQU193ZZwWJPmVBl/BiOtWTk7WqyQnnhc7/hsmS4
6nLLu4yt8Uj8xPc0LwVbwzu8tNKtMeXNP6NMF3/9IjDumbXGnoj557H9Yhjf
vpy728sG0u3RbofPHYfUoo39sNkGbZoTj+CTisAZ5d5ONgF2WuHdYfs0COqm
WelnCFyzjw200CEhFO9fcM4i8El/7ClDj4Rof/1jejaBxpDVC9MsEidmRZnS
XAJ56+Ndb5mRqN2o+HSuiADFzdbU3ZaEonVxoKKaQGtIc2+FBwnpQ3pGewcB
5wbNoQe5JPLLwoLJTgL9T38K6MwnURYjc9zZTaBmJ7e07QKJxhXS+W4ZgT1X
R6yvV5AY4mkH9z0i8Ft69Y1fG0mYjus4jo0TCCq7EVczQMKqPl7/kpyAwZvh
TXXPSNilDSoCXhLoqqn5veE5CRfToquvJgmYVHW3trwgER3K0n/3jkCvUaLX
yAcSiZtTFNdmvvYrIzr+mSeRpjnWHzNLgHeA/mr6C4m8K2Wn5uYI5MhbXJeo
SnAxWTno5jyBZ42rspZrSFDtFuCQuEAg+PT5k4YMCeoN7+jZfyFQFepnZ6Ut
QfOMiWJxkUCtb26J/UoJ/gPRYiQF
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 20}, {100.00000408163274`, 738.905579733653}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 100.00000408163297`}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 100.00000408163297`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {100.00000408163274`, 738.905579733653}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.915648269756393*^9, 3.915648362341157*^9}, 
   3.915720612775646*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5eff4159-1727-44b6-8da3-c1415e1ecc33"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 19, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20, ControlType -> Manipulator}}, 
    Typeset`size$$ = {109., {0.312, 16.9}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 100. E^(0.1 $CellContext`t$$), 
      "Specifications" :> {{$CellContext`t$$, 0, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{477., {125., 137.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.915648269756393*^9, 3.915648362341157*^9}, {
  3.915720612807749*^9, 3.915720616820047*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"50e65274-34ff-4668-8d74-6e1d2f588f7d"]
}, Open  ]],

Cell["P(19)=668.589", "Text",
 CellChangeTimes->{{3.915648386845015*^9, 
  3.915648400686489*^9}},ExpressionUUID->"2292ecbd-60ac-4ab8-aead-\
249009664862"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{979, 990},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>2. Inherited,
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"6c62e5de-877c-4534-badd-cab4606ba7a1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 671, 17, 238, "Title",ExpressionUUID->"e345cf19-41bc-43c5-a8c1-ec9ffdebf482"],
Cell[1254, 41, 855, 16, 118, "Copyright",ExpressionUUID->"fe635811-19ac-4688-80be-379dca964580"],
Cell[2112, 59, 1504, 28, 472, "Text",ExpressionUUID->"620d3464-3216-42f2-aed9-2da9af1ba8ec"],
Cell[CellGroupData[{
Cell[3641, 91, 220, 4, 138, "Section",ExpressionUUID->"959411b3-9a23-4d2d-aea1-cfe9652e3ae0"],
Cell[3864, 97, 3775, 104, 1237, "Text",ExpressionUUID->"d2d4c0f3-a30e-4d3a-8682-4f1eccff40a4"],
Cell[CellGroupData[{
Cell[7664, 205, 100, 1, 81, "Input",ExpressionUUID->"92f1ba27-6b5d-4162-bb65-641ddded158a"],
Cell[7767, 208, 173, 2, 81, "Output",ExpressionUUID->"d698c024-71d0-4c37-9b47-b76e18480dae"]
}, Open  ]],
Cell[7955, 213, 371, 7, 112, "Text",ExpressionUUID->"949aaa74-4679-4250-b11d-9ae2b895e9d9"],
Cell[CellGroupData[{
Cell[8351, 224, 727, 13, 320, "Subsubsection",ExpressionUUID->"d0c2ebf4-ae48-4836-8997-a1d1e92c635f"],
Cell[CellGroupData[{
Cell[9103, 241, 101, 1, 81, "Input",ExpressionUUID->"9f1785b4-f2bc-45da-a657-0860ed4f7241"],
Cell[9207, 244, 313, 5, 205, "Output",ExpressionUUID->"9db790c6-ca07-448d-bee0-23adc28a34f0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9581, 256, 211, 4, 138, "Section",ExpressionUUID->"9548bdeb-297e-4ed0-8ff1-76d61e7b28e7"],
Cell[9795, 262, 1710, 54, 472, "Text",ExpressionUUID->"86de5e87-dcab-4a29-8929-6141c3683e84"],
Cell[11508, 318, 678, 16, 218, "Subsubsection",ExpressionUUID->"78386f60-7bd5-4555-80b7-73df6fdfe096"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12223, 339, 224, 4, 138, "Section",ExpressionUUID->"71a58b0c-677e-4fb3-a46d-1d846e5ca834"],
Cell[12450, 345, 963, 32, 202, "Text",ExpressionUUID->"28d84f78-3fc7-4865-94a7-f193a2ac53d7"],
Cell[CellGroupData[{
Cell[13438, 381, 462, 11, 116, "Subsubsection",ExpressionUUID->"85cd3755-0009-4c10-a8c4-e4755b94c802"],
Cell[13903, 394, 1480, 42, 337, "Text",ExpressionUUID->"9e1bfe99-cb33-4c41-954b-0296c180d6aa"],
Cell[15386, 438, 434, 11, 67, "Text",ExpressionUUID->"56d2cc9e-ac71-4a78-96fd-2bfb45785348"],
Cell[15823, 451, 1383, 37, 472, "Text",ExpressionUUID->"f1390528-96f2-4025-8179-5561bd64e601"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17255, 494, 478, 10, 214, "Section",ExpressionUUID->"7170969d-2ca7-452b-9cb3-2eb41de10a37"],
Cell[17736, 506, 1387, 27, 562, "Text",ExpressionUUID->"1ee69a73-b818-4017-9a15-39d5c7d293a9"],
Cell[CellGroupData[{
Cell[19148, 537, 14379, 352, 127, "WolframAlphaShortInput",ExpressionUUID->"46a989cb-b011-4cc9-9134-0e5ab996f959"],
Cell[33530, 891, 452, 13, 101, "Output",ExpressionUUID->"e06da399-83f1-469c-a135-f7eef9c23910"]
}, Open  ]],
Cell[33997, 907, 190, 3, 67, "Text",ExpressionUUID->"80c067c6-75bb-4100-9870-360747ac3234"],
Cell[CellGroupData[{
Cell[34212, 914, 35600, 759, 201, "WolframAlphaShortInput",ExpressionUUID->"8ff71ef0-96d1-49f5-b909-46285c0ca0b4"],
Cell[69815, 1675, 1002, 24, 133, "Output",ExpressionUUID->"5e18a1c3-31ea-4d6f-9619-353f44355aa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70854, 1704, 1094, 23, 333, "Subsection",ExpressionUUID->"7c2ac41b-0d73-42bb-b761-bb8b96e2b87a"],
Cell[CellGroupData[{
Cell[71973, 1731, 11558, 234, 374, "WolframAlphaShortInput",ExpressionUUID->"077fd802-cbb2-4e4e-a4fe-c1de80609baa"],
Cell[83534, 1967, 635, 17, 87, "Output",ExpressionUUID->"6eef7e9d-87d7-440c-90a1-ed0a8cdd163f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84206, 1989, 14171, 349, 127, "WolframAlphaShortInput",ExpressionUUID->"bc7ff2d9-a083-4a57-b3ef-ff3b79ff1308"],
Cell[98380, 2340, 193, 4, 81, "Output",ExpressionUUID->"7b7d5365-400d-4b40-a287-fd1ba104e98e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98634, 2351, 309, 6, 214, "Section",ExpressionUUID->"97c4b78f-340a-4a90-be5a-7ef7b2060e34",
 Evaluatable->False],
Cell[98946, 2359, 1720, 55, 202, "Text",ExpressionUUID->"0f439f1c-becf-436c-980c-a5cc2ef842f9",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[100691, 2418, 371, 9, 138, "Input",ExpressionUUID->"3750f4ea-b2ad-43fe-8c9d-28dd6bdb432e"],
Cell[101065, 2429, 170, 3, 101, "Output",ExpressionUUID->"ebce2f9a-4be2-4def-9e92-3c6a3d8607e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101272, 2437, 573, 16, 239, "Input",ExpressionUUID->"92cd7fd4-b620-4cea-8afd-92fdda4aaa8a"],
Cell[101848, 2455, 170, 3, 101, "Output",ExpressionUUID->"dbd428ff-d82d-4689-9781-c13ea8d5f944"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102055, 2463, 1341, 34, 480, "Subsubsection",ExpressionUUID->"e9d3d776-5756-441d-9576-f564d34dad20"],
Cell[103399, 2499, 902, 24, 202, "Text",ExpressionUUID->"7dfde6a4-d862-41b6-bdcf-d274ee692888",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[104326, 2527, 375, 11, 110, "Input",ExpressionUUID->"19fd1a2a-76a1-4aa6-bb4e-c0f805eb8413"],
Cell[104704, 2540, 229, 5, 109, "Output",ExpressionUUID->"4acf7cad-cbdb-4082-ada3-e0b441a2c7e5"]
}, Open  ]]
}, Open  ]],
Cell[104960, 2549, 1102, 29, 277, "Subsubsection",ExpressionUUID->"d5990816-dbd9-46fd-8167-82d0f01aaff4"],
Cell[CellGroupData[{
Cell[106087, 2582, 1768, 58, 316, "Subsubsection",ExpressionUUID->"d0b8d449-fc68-436c-816e-1c020b0f17eb",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[107880, 2644, 12596, 313, 127, "WolframAlphaShortInput",ExpressionUUID->"3ace3aea-a445-4d38-ad91-cbc3cc10ab56"],
Cell[120479, 2959, 166, 2, 81, "Output",ExpressionUUID->"12a6b2ba-2a16-403e-9aa6-f095ca9f7d77"]
}, Open  ]],
Cell[120660, 2964, 412, 12, 112, "Text",ExpressionUUID->"6c8a6916-8aea-4dc8-b819-f7f019f32d7b",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[121097, 2980, 303, 9, 110, "Input",ExpressionUUID->"fee5b2bb-e08b-44fa-91a1-cfc014c40d0e"],
Cell[121403, 2991, 166, 2, 81, "Output",ExpressionUUID->"114bf58a-af35-4631-8db3-909553952fbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121606, 2998, 256, 7, 110, "Input",ExpressionUUID->"2edcf8df-1f4b-442d-a42e-bb976b79287e"],
Cell[121865, 3007, 168, 2, 81, "Output",ExpressionUUID->"7aaed252-b67e-43ef-94f4-5862d3c08eec"]
}, Open  ]],
Cell[122048, 3012, 456, 9, 157, "Text",ExpressionUUID->"cbc0fdc0-ae90-45b9-8059-8b797efbc85d"],
Cell[CellGroupData[{
Cell[122529, 3025, 650, 15, 81, "Input",ExpressionUUID->"2d34f628-0f1f-4cad-945a-2a949966142e"],
Cell[123182, 3042, 198, 2, 81, "Output",ExpressionUUID->"0ac1cb8a-d6e3-43b0-ba0b-d163299dbdd2"]
}, Open  ]]
}, Open  ]],
Cell[123407, 3048, 2772, 94, 271, "Subsubsection",ExpressionUUID->"b6bb51af-0fcb-48e3-98da-dc925a60db49",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[126216, 3147, 252, 4, 138, "Section",ExpressionUUID->"389e5465-a0a3-4181-817c-f496ffdf9cd9"],
Cell[126471, 3153, 2324, 71, 922, "Text",ExpressionUUID->"4fc54abc-1353-4b03-bae3-7dd075f0731b"],
Cell[128798, 3226, 380, 11, 74, "Input",ExpressionUUID->"94edab48-74d3-4404-824c-86c5dba4f2d8"],
Cell[129181, 3239, 978, 29, 292, "Text",ExpressionUUID->"e7fe3819-67ae-4daa-8cc0-a7bf895f17b3"],
Cell[CellGroupData[{
Cell[130184, 3272, 390, 7, 164, "Input",ExpressionUUID->"714d5599-c40b-438b-8876-a2dad00bcb23"],
Cell[130577, 3281, 175, 2, 81, "Output",ExpressionUUID->"e1877648-8b58-4e51-9633-e8761b2aa3e7"],
Cell[130755, 3285, 173, 2, 81, "Output",ExpressionUUID->"282692c8-3f9b-40b8-9624-bc37ee1a4e4c"],
Cell[130931, 3289, 176, 2, 81, "Output",ExpressionUUID->"d33e4c6e-08e7-4f5d-95bd-a9adb417816f"]
}, Open  ]],
Cell[131122, 3294, 396, 7, 157, "Text",ExpressionUUID->"63ceac14-e8da-47a7-94b2-378fbbd8cbd2"],
Cell[CellGroupData[{
Cell[131543, 3305, 608, 16, 167, "Subsubsection",ExpressionUUID->"09b59150-2482-408b-ac01-9b546a38aada",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[132176, 3325, 211, 3, 81, "Input",ExpressionUUID->"1ec8530d-f8bb-4434-aff0-bd97176054cb"],
Cell[132390, 3330, 152, 2, 81, "Output",ExpressionUUID->"06b0f3d2-f771-4de6-9273-6e49762dbc78"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132591, 3338, 273, 9, 65, "Subsubsection",ExpressionUUID->"f1841d10-5439-48db-877d-e7b196dbb3f2",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[132889, 3351, 175, 2, 81, "Input",ExpressionUUID->"81a455cd-da32-4e31-ae6d-7c96c48cc26a"],
Cell[133067, 3355, 152, 2, 81, "Output",ExpressionUUID->"b97ed770-1e7f-47fc-bdff-7603d6cd113b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133268, 3363, 275, 9, 65, "Subsubsection",ExpressionUUID->"dc4b0f40-f127-4bc9-969b-eb27a4afff9d",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[133568, 3376, 199, 3, 81, "Input",ExpressionUUID->"954a7c13-240d-4def-92eb-1a03ee53eacc"],
Cell[133770, 3381, 152, 2, 81, "Output",ExpressionUUID->"5b414952-e777-4be7-9ba9-19acb73eab5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133971, 3389, 421, 13, 116, "Subsubsection",ExpressionUUID->"c0957f77-a186-40f0-ba8e-ff3f74230945",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[134417, 3406, 175, 2, 81, "Input",ExpressionUUID->"92076e0f-6329-49f0-89fe-1200ae0f42b0"],
Cell[134595, 3410, 152, 2, 81, "Output",ExpressionUUID->"2c8209d4-d136-44cf-88f9-c8831b2695ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134796, 3418, 515, 15, 116, "Subsubsection",ExpressionUUID->"3cc41623-cab4-484f-a517-08c5eaf673fc",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[135336, 3437, 198, 3, 81, "Input",ExpressionUUID->"c4828a90-74cf-419e-a3d1-fbeb56146141"],
Cell[135537, 3442, 149, 2, 81, "Output",ExpressionUUID->"0d858371-7e9d-4ddc-9b16-896b875c3eba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135735, 3450, 544, 18, 65, "Subsubsection",ExpressionUUID->"d1280cd3-0317-4cad-a75c-be9da03f607e",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[136304, 3472, 270, 6, 81, "Input",ExpressionUUID->"e37cad0d-37b8-4d81-9427-1aabcc0ce8fd"],
Cell[136577, 3480, 171, 3, 101, "Output",ExpressionUUID->"815766fa-075b-4016-893d-3bb627c079bd"]
}, Open  ]],
Cell[136763, 3486, 161, 3, 67, "Text",ExpressionUUID->"5eb01df0-0e1c-4842-b65f-a5a3503272a4"],
Cell[136927, 3491, 270, 7, 74, "Input",ExpressionUUID->"74a3da3f-40e7-4f23-9d2d-4568f8eb6e1c"],
Cell[137200, 3500, 353, 9, 157, "Text",ExpressionUUID->"fd14d49a-be5d-4853-83d9-e9b79d3aad03"],
Cell[137556, 3511, 408, 12, 123, "Input",ExpressionUUID->"d7a488e6-8ce7-4896-94bb-9b2efb85c42f"],
Cell[137967, 3525, 1252, 34, 382, "Text",ExpressionUUID->"0cd09808-3eb1-42b8-bf24-34b4968b4b55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139256, 3564, 757, 17, 218, "Subsubsection",ExpressionUUID->"ff055fe3-6441-431e-8115-4fbe2016054e",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[140038, 3585, 280, 5, 123, "Input",ExpressionUUID->"e6a91475-e663-44f7-9adf-896cead50bc5"],
Cell[140321, 3592, 150, 2, 81, "Output",ExpressionUUID->"75d43946-a6df-4ab8-85e2-b0c9ec8c592d"],
Cell[140474, 3596, 153, 2, 81, "Output",ExpressionUUID->"0282d859-862c-487b-86d9-770679cda3c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140664, 3603, 201, 3, 81, "Input",ExpressionUUID->"e713b14a-d24e-4cf1-8c1b-c998e7e7f835"],
Cell[140868, 3608, 153, 2, 81, "Output",ExpressionUUID->"623720d2-5147-41a2-bce0-d83d0aa962c8"]
}, Open  ]],
Cell[141036, 3613, 688, 22, 202, "Text",ExpressionUUID->"82611a78-ad45-4d0d-9614-11c7378cf7ca"],
Cell[141727, 3637, 292, 9, 74, "Input",ExpressionUUID->"4173e1e2-0723-4afe-a173-fab9b27fcc22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142056, 3651, 476, 12, 116, "Subsubsection",ExpressionUUID->"42f3d036-442b-4389-ac84-af5c74903002",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[142557, 3667, 396, 8, 205, "Input",ExpressionUUID->"f6dca656-e37f-4df9-ab1a-ffc49b768f49"],
Cell[142956, 3677, 153, 2, 81, "Output",ExpressionUUID->"e72ddbba-4d79-47f8-a509-006eb28730e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143170, 3686, 298, 6, 138, "Section",ExpressionUUID->"570177e1-e1e8-4c2f-8fe5-6237440191eb",
 Evaluatable->False],
Cell[143471, 3694, 1377, 42, 427, "Text",ExpressionUUID->"de61ea93-d4aa-4b21-b236-680f22a743c8",
 Evaluatable->False],
Cell[144851, 3738, 241, 5, 109, "Input",ExpressionUUID->"abe9ce84-8902-41bf-99f7-bca65505e116"],
Cell[145095, 3745, 263, 6, 112, "Text",ExpressionUUID->"fc81c70d-5fe3-417e-ba1f-7c7eb563fc8c"],
Cell[145361, 3753, 296, 9, 74, "Input",ExpressionUUID->"37690483-12b7-4f4d-a7bc-8ae244985349"],
Cell[145660, 3764, 1658, 56, 337, "Text",ExpressionUUID->"056ecb54-587d-4e0f-aa71-0ff87cbf04b5"],
Cell[147321, 3822, 324, 10, 81, "Input",ExpressionUUID->"9b8639f8-81e2-4eb5-a9c5-e6e1dfc8610a"],
Cell[147648, 3834, 695, 24, 202, "Text",ExpressionUUID->"e4cf577b-4b07-4eba-8d1d-788b25b1ea35"],
Cell[148346, 3860, 318, 14, 87, "Input",ExpressionUUID->"2cf36079-6f77-435c-aae3-5e67bc9de35c"],
Cell[CellGroupData[{
Cell[148689, 3878, 531, 15, 116, "Subsubsection",ExpressionUUID->"8cfdccc3-3fbf-41fe-8ccb-f110c3511a76",
 Evaluatable->False],
Cell[149223, 3895, 442, 13, 157, "Text",ExpressionUUID->"5112c04d-1d4b-48c1-baa2-8d9e0999101a",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[149690, 3912, 319, 9, 110, "Input",ExpressionUUID->"75b5b234-e9db-44aa-8982-03d5b9851d0d"],
Cell[150012, 3923, 199, 4, 81, "Output",ExpressionUUID->"0d8ef195-3fcd-4c1e-96aa-8d7fe263fa8c"]
}, Open  ]]
}, Open  ]],
Cell[150238, 3931, 456, 16, 116, "Subsubsection",ExpressionUUID->"c7a84984-5062-4336-a6a8-6ed6cc1e6272"],
Cell[CellGroupData[{
Cell[150719, 3951, 957, 38, 214, "Subsubsection",ExpressionUUID->"7ff16080-3ba6-45e8-9683-829dc5fbb032"],
Cell[151679, 3991, 621, 13, 164, "Input",ExpressionUUID->"92878cdd-d53d-46fc-a68f-6482a786d303"],
Cell[152303, 4006, 237, 5, 67, "Text",ExpressionUUID->"ed7acbe4-cdca-4b1d-8585-dfb16a5a77ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152577, 4016, 272, 11, 65, "Subsubsection",ExpressionUUID->"caa01c28-6600-4116-8804-0da43d90f694"],
Cell[CellGroupData[{
Cell[152874, 4031, 204, 3, 81, "Input",ExpressionUUID->"714a1617-e97d-4765-9e9e-03b495c9314a"],
Cell[153081, 4036, 191, 2, 81, "Output",ExpressionUUID->"c129d441-921a-4588-bd04-de7592b15940"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153333, 4045, 314, 5, 138, "Section",ExpressionUUID->"32b37922-aa40-4b42-a47a-b13606df1e97"],
Cell[153650, 4052, 2218, 42, 877, "Text",ExpressionUUID->"70384d3f-2630-4a85-b7c7-10c7ad0fb083"],
Cell[CellGroupData[{
Cell[155893, 4098, 157, 3, 65, "Subsubsection",ExpressionUUID->"fa7ef7d1-0c49-45f8-bb85-1d75b221ec1e"],
Cell[156053, 4103, 696, 21, 292, "Text",ExpressionUUID->"94dc35a0-9174-41c1-a1d2-77cc1b9d1809"],
Cell[156752, 4126, 214, 6, 81, "Input",ExpressionUUID->"979f9785-69d1-4692-befc-5d8412384b33"],
Cell[156969, 4134, 603, 20, 112, "Text",ExpressionUUID->"d72392ef-bca1-4ed5-ad77-f2d67811c397"],
Cell[157575, 4156, 254, 5, 81, "Input",ExpressionUUID->"4e9f57ee-1d43-4c97-8df2-d5def43cf181"],
Cell[157832, 4163, 241, 8, 67, "Text",ExpressionUUID->"f216bcd0-517f-4aa7-b257-03f76b0c60a5"],
Cell[158076, 4173, 211, 5, 81, "Input",ExpressionUUID->"68fe8afb-5107-46fe-83a2-b2aa9530a60c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158324, 4183, 586, 14, 269, "Subsubsection",ExpressionUUID->"8655c5df-8e46-47e1-b0bc-b9196cf3582d"],
Cell[CellGroupData[{
Cell[158935, 4201, 191, 3, 81, "Input",ExpressionUUID->"72a11d02-5c9f-477e-affc-47ba125baf7b"],
Cell[159129, 4206, 10121, 256, 388, "Output",ExpressionUUID->"647661c4-86ff-4f7c-b574-18400cfb5b40"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169299, 4468, 293, 8, 116, "Subsubsection",ExpressionUUID->"f30e9453-6569-44ee-9c49-8197f09ff1ce"],
Cell[CellGroupData[{
Cell[169617, 4480, 194, 3, 81, "Input",ExpressionUUID->"f9b8dc29-b9cb-4d40-a87c-151a27697de0"],
Cell[169814, 4485, 53805, 1289, 2809, "Output",ExpressionUUID->"5ad2db62-c865-4fec-b25b-cb0a77ea5f33"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223668, 5780, 368, 12, 116, "Subsubsection",ExpressionUUID->"95317bf1-80e6-4a74-a637-0de0d97a05bd"],
Cell[CellGroupData[{
Cell[224061, 5796, 191, 3, 81, "Input",ExpressionUUID->"5c02a835-37f5-4154-a52e-1f387f8492c8"],
Cell[224255, 5801, 12822, 312, 324, "Output",ExpressionUUID->"ac2cb25e-386b-47a9-b6ae-9c0916e0ff55"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237138, 6120, 213, 4, 138, "Section",ExpressionUUID->"a670e18a-90ff-4945-9eed-658684d521a9"],
Cell[237354, 6126, 2539, 80, 832, "Text",ExpressionUUID->"1688a07e-d97b-4918-92f8-f51acc22aa18"],
Cell[CellGroupData[{
Cell[239918, 6210, 461, 11, 151, "Input",ExpressionUUID->"04e1bf37-aff4-4c56-8cb7-20814fa54d7e"],
Cell[240382, 6223, 385, 9, 47, "Print",ExpressionUUID->"3d639431-58ed-4cfc-9563-8460435f38a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240804, 6237, 784, 24, 371, "Subsubsection",ExpressionUUID->"7893711d-8b55-459c-a837-936120d79907"],
Cell[CellGroupData[{
Cell[241613, 6265, 520, 12, 164, "Input",ExpressionUUID->"0f81efe7-7121-4210-99bd-8a74a5d57fb1"],
Cell[242136, 6279, 184, 3, 81, "Output",ExpressionUUID->"fc2b626a-7ab4-454a-b456-8c323e2172f3"],
Cell[242323, 6284, 415, 10, 47, "Print",ExpressionUUID->"d6a34a8d-44cd-44a8-9594-686fcc44345b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242799, 6301, 213, 4, 138, "Section",ExpressionUUID->"028edec1-89d5-41a8-a824-0cdd1f86a603"],
Cell[243015, 6307, 3016, 89, 1057, "Text",ExpressionUUID->"e4672c21-5b25-4e5b-9dd1-244ab7557604"],
Cell[CellGroupData[{
Cell[246056, 6400, 1140, 40, 356, "Input",ExpressionUUID->"b4309057-f693-4080-bc2e-86bccc540a20"],
Cell[247199, 6442, 153, 2, 81, "Output",ExpressionUUID->"d6982e12-e369-4d53-9cec-d2c58a3a6a46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247389, 6449, 851, 27, 371, "Subsubsection",ExpressionUUID->"b85280ff-0bda-49ab-9ce5-4b8a39d8cfef"],
Cell[CellGroupData[{
Cell[248265, 6480, 409, 9, 164, "Input",ExpressionUUID->"2c0a121c-5889-4712-8d04-3c91d1188c0e"],
Cell[248677, 6491, 150, 2, 81, "Output",ExpressionUUID->"76f74fbd-a015-451f-a6ec-1674a3008ba1"]
}, Open  ]],
Cell[248842, 6496, 889, 24, 307, "Text",ExpressionUUID->"44440212-da2d-4f64-abc0-c6566fd44f6e"],
Cell[CellGroupData[{
Cell[249756, 6524, 1799, 61, 467, "Input",ExpressionUUID->"8b5e3f65-4e56-4255-b34e-d4d620a51204"],
Cell[CellGroupData[{
Cell[251580, 6589, 505, 11, 47, "Print",ExpressionUUID->"bb66bb66-f341-4924-9313-c311489fe1a0"],
Cell[252088, 6602, 500, 11, 47, "Print",ExpressionUUID->"d3c734af-9810-49c6-9576-3fa0ced8a588"],
Cell[252591, 6615, 504, 11, 47, "Print",ExpressionUUID->"8e8f2951-2d16-4ff9-9663-8163312b8ab9"],
Cell[253098, 6628, 498, 11, 47, "Print",ExpressionUUID->"256e9b35-22b0-4028-9dad-90eef7929701"],
Cell[253599, 6641, 502, 11, 47, "Print",ExpressionUUID->"0ea7d72a-6511-40f9-8c61-504f34d75e71"],
Cell[254104, 6654, 504, 11, 47, "Print",ExpressionUUID->"debe393f-e6ec-41af-a34a-5b58681734ca"],
Cell[254611, 6667, 506, 11, 47, "Print",ExpressionUUID->"d5763490-77ef-44c0-80d6-3ded7a366fb1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255178, 6685, 1050, 27, 371, "Subsubsection",ExpressionUUID->"2741f485-233e-4e67-a303-2011ffffb8c4"],
Cell[CellGroupData[{
Cell[256253, 6716, 507, 12, 164, "Input",ExpressionUUID->"b341173b-8a60-42e2-8a74-0408f0c294fb"],
Cell[CellGroupData[{
Cell[256785, 6732, 290, 8, 47, "Print",ExpressionUUID->"c2bfabbb-5bda-4f37-a472-7969a55dd86b"],
Cell[257078, 6742, 288, 8, 47, "Print",ExpressionUUID->"e48cf218-1ff7-4c1c-95b8-f960f200f4d1"],
Cell[257369, 6752, 288, 8, 47, "Print",ExpressionUUID->"ecda5a2b-7f84-4820-a8a7-4da659d1600d"],
Cell[257660, 6762, 290, 8, 47, "Print",ExpressionUUID->"18d3ee2e-e8d1-46aa-93fe-126838867e05"],
Cell[257953, 6772, 292, 8, 47, "Print",ExpressionUUID->"21b8b1bb-d946-4757-bcca-735396e5f406"],
Cell[258248, 6782, 292, 8, 47, "Print",ExpressionUUID->"6eeeddf9-4276-4333-8727-bdcb3eced13c"],
Cell[258543, 6792, 292, 8, 47, "Print",ExpressionUUID->"f5cef825-28c1-4d28-bb8a-a22cc39e7170"],
Cell[258838, 6802, 291, 8, 47, "Print",ExpressionUUID->"a1f7fb25-b289-43d8-b203-f83d91fe5999"],
Cell[259132, 6812, 294, 8, 47, "Print",ExpressionUUID->"b17e815b-49c2-4f88-8678-9dd9ab78e3df"],
Cell[259429, 6822, 294, 8, 47, "Print",ExpressionUUID->"e826d184-be21-4b15-97fb-39a15c4d0821"]
}, Open  ]]
}, Open  ]],
Cell[259750, 6834, 3763, 148, 427, "Text",ExpressionUUID->"416fbcc3-0b19-401d-873b-57f9afbfa9bb"],
Cell[CellGroupData[{
Cell[263538, 6986, 702, 23, 192, "Input",ExpressionUUID->"773dbb6c-34a4-45cc-bcbf-c45bc6c4acde"],
Cell[CellGroupData[{
Cell[264265, 7013, 318, 8, 47, "Print",ExpressionUUID->"cba5f6a6-90ed-4ca0-b012-dfa60de4539e"],
Cell[264586, 7023, 316, 8, 47, "Print",ExpressionUUID->"4f7d9685-c3b2-41f7-b5b3-1c92ffa2aeb8"],
Cell[264905, 7033, 316, 8, 47, "Print",ExpressionUUID->"fed387dc-b54b-4d5c-ab62-1e0e656b0823"],
Cell[265224, 7043, 323, 9, 47, "Print",ExpressionUUID->"97e95615-daa2-4f80-8ffe-7c691d65a5d7"],
Cell[265550, 7054, 320, 8, 47, "Print",ExpressionUUID->"54c32ecb-5be0-4169-9a21-e50f24ac5343"],
Cell[265873, 7064, 320, 8, 47, "Print",ExpressionUUID->"be44fe03-b014-4e29-a901-12c78818c4d8"],
Cell[266196, 7074, 327, 9, 47, "Print",ExpressionUUID->"b9162c68-72ce-4059-978c-d9c917d14cfe"],
Cell[266526, 7085, 327, 9, 47, "Print",ExpressionUUID->"d58c30a1-4fb9-4cf5-a2dc-ad2510d4c7c7"],
Cell[266856, 7096, 331, 9, 47, "Print",ExpressionUUID->"9ca4110e-0463-400d-9837-ac469191f94e"]
}, Open  ]]
}, Open  ]],
Cell[267214, 7109, 249, 6, 112, "Text",ExpressionUUID->"c73b3baa-12bc-46cc-830e-00af02efe446"],
Cell[CellGroupData[{
Cell[267488, 7119, 717, 23, 192, "Input",ExpressionUUID->"ebd62312-3fea-4dc3-8d76-92cef8e25f27"],
Cell[CellGroupData[{
Cell[268230, 7146, 318, 8, 47, "Print",ExpressionUUID->"16011fa1-af9a-4707-97de-e67ea7eb47fa"],
Cell[268551, 7156, 316, 8, 47, "Print",ExpressionUUID->"4a5ac6b3-686e-460c-8db3-db1f30f3afdb"],
Cell[268870, 7166, 318, 8, 47, "Print",ExpressionUUID->"b29a57db-22f2-467e-b7d7-213f71b984bd"],
Cell[269191, 7176, 316, 8, 47, "Print",ExpressionUUID->"5509c865-3f2d-41ae-9eb4-89a649364d97"],
Cell[269510, 7186, 321, 9, 47, "Print",ExpressionUUID->"6b9f78a2-27ce-4edb-adc6-3f027334f24b"],
Cell[269834, 7197, 319, 8, 47, "Print",ExpressionUUID->"17cec37d-06a0-4041-93a9-eb90de27bd85"],
Cell[270156, 7207, 320, 8, 47, "Print",ExpressionUUID->"65fed16e-d9ab-4f26-a736-14ec3d433eb6"],
Cell[270479, 7217, 325, 9, 47, "Print",ExpressionUUID->"fb25fc13-5a89-4686-aa94-82a35683b56e"],
Cell[270807, 7228, 327, 9, 47, "Print",ExpressionUUID->"a0c60a9e-d102-4f3a-acd4-4a1f6b076e8c"],
Cell[271137, 7239, 329, 9, 47, "Print",ExpressionUUID->"a3994d0e-b25d-4182-b918-cc8836de32c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271527, 7255, 984, 28, 422, "Subsubsection",ExpressionUUID->"18f84597-c3bb-4773-8c0d-ff3c9e33f064"],
Cell[CellGroupData[{
Cell[272536, 7287, 1799, 61, 384, "Input",ExpressionUUID->"829fa221-1d76-4476-bb7a-4cf058fd7f36"],
Cell[CellGroupData[{
Cell[274360, 7352, 506, 11, 47, "Print",ExpressionUUID->"244ceb92-c7d7-46dd-974f-342a97a41bcc"],
Cell[274869, 7365, 501, 11, 47, "Print",ExpressionUUID->"4659090e-7d4a-46d8-8486-da1653873e92"],
Cell[275373, 7378, 503, 11, 47, "Print",ExpressionUUID->"00787d2d-cbff-4d35-86cb-4eab85ed4be1"],
Cell[275879, 7391, 501, 11, 47, "Print",ExpressionUUID->"0fd58e9f-d2a5-474b-b315-de27a330a313"],
Cell[276383, 7404, 503, 11, 47, "Print",ExpressionUUID->"15a20015-15c6-45c6-953a-b81df42cf987"],
Cell[276889, 7417, 503, 11, 47, "Print",ExpressionUUID->"f7cd0c69-f20b-4dc9-bc8a-3e3d4e5bae41"],
Cell[277395, 7430, 504, 11, 47, "Print",ExpressionUUID->"f5338909-0d4d-4b1e-a515-98e086f3d38a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277960, 7448, 436, 15, 116, "Subsubsection",ExpressionUUID->"23385741-a43e-4899-b982-74adc9194e36"],
Cell[278399, 7465, 227, 4, 81, "Input",ExpressionUUID->"d3f140aa-d3d3-40c4-8838-8c889031298f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278663, 7474, 490, 20, 116, "Subsubsection",ExpressionUUID->"2304c174-f849-4ae7-8dc9-d82205cc5d74"],
Cell[279156, 7496, 298, 7, 81, "Input",ExpressionUUID->"4d85adc9-9569-410a-8cf3-cb8eb86b0d39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279491, 7508, 434, 17, 116, "Subsubsection",ExpressionUUID->"4126b298-cdca-42c7-b75a-d337cfa13a87"],
Cell[CellGroupData[{
Cell[279950, 7529, 557, 15, 166, "Input",ExpressionUUID->"44b90e93-a598-4f38-9e6b-ccfcb6e04f85"],
Cell[CellGroupData[{
Cell[280532, 7548, 369, 10, 47, "Print",ExpressionUUID->"8bc6fb3b-0ec1-4dd3-a9bd-ff927ee27e1b"],
Cell[280904, 7560, 367, 10, 47, "Print",ExpressionUUID->"bb782acd-12fe-452d-9779-125f3662959d"],
Cell[281274, 7572, 371, 10, 47, "Print",ExpressionUUID->"e4f86efc-2a9a-498a-b61e-936cd4939948"],
Cell[281648, 7584, 369, 10, 47, "Print",ExpressionUUID->"f42aa62c-51c1-4779-b366-2b54d9577d0c"],
Cell[282020, 7596, 369, 10, 47, "Print",ExpressionUUID->"42c9be48-bf55-48ce-a9d6-8e885daf3045"],
Cell[282392, 7608, 369, 10, 47, "Print",ExpressionUUID->"01f02cda-8ed6-4f0f-9c0d-9a5987cbeab2"],
Cell[282764, 7620, 369, 10, 47, "Print",ExpressionUUID->"e4ac4a6d-503b-42b4-a3d7-8e4c16e95524"],
Cell[283136, 7632, 369, 10, 47, "Print",ExpressionUUID->"b705cb90-c641-49ce-b4c5-d4d314ae2645"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283578, 7650, 216, 4, 138, "Section",ExpressionUUID->"8d278cc3-b6a7-4472-b929-c445b8b51d3b"],
Cell[283797, 7656, 2460, 92, 337, "Text",ExpressionUUID->"a5501f56-4e3b-4136-92fc-779d126fad93"],
Cell[CellGroupData[{
Cell[286282, 7752, 1018, 32, 151, "Input",ExpressionUUID->"d97ec931-2bff-41d2-98f0-7b5db5db47ce"],
Cell[287303, 7786, 23790, 436, 472, "Output",ExpressionUUID->"defa0f8d-d3be-4026-b53d-5a64a2bca831"]
}, Open  ]],
Cell[311108, 8225, 678, 24, 202, "Text",ExpressionUUID->"97c28122-fcda-461d-a2e6-ebb8f5e163da"],
Cell[CellGroupData[{
Cell[311811, 8253, 600, 20, 115, "Input",ExpressionUUID->"9b9a51a2-0f0d-4acd-b73d-087d78523eb1"],
Cell[312414, 8275, 23790, 436, 472, "Output",ExpressionUUID->"788c4446-5174-42b1-bc80-5a526fd940a3"]
}, Open  ]],
Cell[336219, 8714, 618, 23, 202, "Text",ExpressionUUID->"0666771e-af57-4035-b31e-b6ba2d36a47c"],
Cell[336840, 8739, 466, 18, 87, "Input",ExpressionUUID->"9d973318-c369-498f-a2b8-8549641cb364"],
Cell[CellGroupData[{
Cell[337331, 8761, 1095, 35, 167, "Subsubsection",ExpressionUUID->"9039e79f-7a47-4984-9f78-74683219f44c"],
Cell[CellGroupData[{
Cell[338451, 8800, 425, 10, 87, "Input",ExpressionUUID->"4efaa146-a7cf-4117-87fb-a96bf8caf753"],
Cell[338879, 8812, 36178, 639, 472, "Output",ExpressionUUID->"f58a6522-e573-43ad-946e-a3bdfa7b14e2"]
}, Open  ]],
Cell[375072, 9454, 1069, 32, 382, "Text",ExpressionUUID->"736c45ff-b361-4e13-9ceb-adaf332ee33a"],
Cell[CellGroupData[{
Cell[376166, 9490, 492, 13, 109, "Input",ExpressionUUID->"64780590-2172-47b9-b1e5-1f48d2c7a9c6"],
Cell[376661, 9505, 23906, 440, 491, "Output",ExpressionUUID->"4673804c-4836-488a-bd33-50a44f92f8ea"]
}, Open  ]],
Cell[400582, 9948, 577, 24, 112, "Text",ExpressionUUID->"e900b939-2af8-47a1-aaf2-62f04b8376a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401196, 9977, 691, 18, 218, "Subsubsection",ExpressionUUID->"ecad1c40-d2f3-4d04-9042-4a6bdff62868"],
Cell[CellGroupData[{
Cell[401912, 9999, 548, 14, 87, "Input",ExpressionUUID->"f09b2810-bb59-42fb-a608-7bbbe4d88f05"],
Cell[402463, 10015, 36189, 641, 492, "Output",ExpressionUUID->"9a25212b-d85e-4ed4-bfe3-55d3b7cd42b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438689, 10661, 3603, 87, 984, "Input",ExpressionUUID->"06288756-5e09-4e21-8f92-c84afe325863"],
Cell[442295, 10750, 36351, 645, 507, "Output",ExpressionUUID->"dbb86ae8-81ae-45e0-a5db-39b6b0c04a2e"]
}, Open  ]],
Cell[478661, 11398, 328, 9, 112, "Text",ExpressionUUID->"deff560b-b7f2-4fea-babc-6c99380b3388"],
Cell[CellGroupData[{
Cell[479014, 11411, 584, 18, 109, "Input",ExpressionUUID->"8a259e7a-e29a-40c6-9f42-a99464486f58"],
Cell[479601, 11431, 29976, 551, 468, "Output",ExpressionUUID->"8fa647e1-8c48-4e01-81eb-effcc8aa8479"]
}, Open  ]],
Cell[509592, 11985, 196, 3, 67, "Text",ExpressionUUID->"0f561538-ba9f-46f5-b9ff-b3c7ad2cddc4"],
Cell[CellGroupData[{
Cell[509813, 11992, 331, 5, 81, "Input",ExpressionUUID->"e4fda17c-e93f-453c-8451-57ad9cac3d05"],
Cell[510147, 11999, 9997, 253, 388, "Output",ExpressionUUID->"322e45b4-f6be-426e-ab4c-7f1eaee0d6d1"]
}, Open  ]],
Cell[520159, 12255, 402, 8, 202, "Text",ExpressionUUID->"10994eb3-c95f-4712-92fd-02c2e3aa5991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520598, 12268, 1160, 37, 116, "Subsubsection",ExpressionUUID->"63038ce3-8d7d-486d-b271-8c369d70a2b7"],
Cell[CellGroupData[{
Cell[521783, 12309, 634, 17, 133, "Input",ExpressionUUID->"fb1d6c8b-5a70-46f1-becb-f503e4a1ffa5"],
Cell[522420, 12328, 64712, 1124, 483, "Output",ExpressionUUID->"8be49f24-8df0-4b4c-9be3-1a0de9a42cd8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[587193, 13459, 432, 7, 102, "Section",ExpressionUUID->"a3ff27b5-4cc1-4741-aba7-1dc2f6572b8f"],
Cell[587628, 13468, 698, 14, 202, "Text",ExpressionUUID->"ef2e1ac3-0ee7-4d8c-8950-00d12c63dc3d"],
Cell[CellGroupData[{
Cell[588351, 13486, 1327, 34, 151, "Input",ExpressionUUID->"f9abcc63-e360-49f8-9cb1-70bf91e7ed73"],
Cell[589681, 13522, 1718, 33, 672, "Output",ExpressionUUID->"5399b2fd-1de0-4074-9916-a06486c0b5cf"]
}, Open  ]],
Cell[591414, 13558, 782, 14, 292, "Text",ExpressionUUID->"ec46e86b-d285-4c39-b25b-35fb16f40617"],
Cell[CellGroupData[{
Cell[592221, 13576, 789, 20, 109, "Input",ExpressionUUID->"3dd062f3-b3aa-43fb-819f-93e5b6811979"],
Cell[593013, 13598, 1762, 35, 314, "Output",ExpressionUUID->"e7086bec-00ba-47dd-9376-0d30c24714d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594812, 13638, 1032, 22, 383, "Subsubsection",ExpressionUUID->"0d56e86a-79ba-4413-9985-59bb8000cae9"],
Cell[CellGroupData[{
Cell[595869, 13664, 1367, 38, 221, "Input",ExpressionUUID->"e16a8aba-6297-400d-a9d1-90dbcd5da5fd"],
Cell[597239, 13704, 2046, 40, 725, "Output",ExpressionUUID->"8eba638d-936d-426e-9027-e0759ac0a85f"]
}, Open  ]],
Cell[599300, 13747, 189, 3, 67, "Text",ExpressionUUID->"1896496e-66e7-4ccc-bfdb-271828f4d049"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[599538, 13756, 282, 5, 138, "Section",ExpressionUUID->"1e4de332-b28c-4314-9977-41808a6faaa4"],
Cell[599823, 13763, 958, 33, 202, "Text",ExpressionUUID->"6d1715b5-403d-4d19-a32a-6ab915337307"],
Cell[600784, 13798, 783, 20, 192, "Input",ExpressionUUID->"e701cb47-b149-4705-8f4a-fa1cfcb77183"],
Cell[601570, 13820, 308, 9, 67, "Text",ExpressionUUID->"48dc1804-4b6a-42f5-90b5-e33e6154b39a"],
Cell[CellGroupData[{
Cell[601903, 13833, 257, 6, 109, "Input",ExpressionUUID->"e056edd2-1ca3-44c2-821f-b743b6ad8515"],
Cell[602163, 13841, 223, 4, 81, "Output",ExpressionUUID->"1752ce26-15b2-445f-b870-3ebecefee2e9"]
}, Open  ]],
Cell[602401, 13848, 289, 8, 112, "Text",ExpressionUUID->"fbef5add-d4aa-4bdc-8fd0-072c6b88f84c"],
Cell[CellGroupData[{
Cell[602715, 13860, 208, 4, 109, "Input",ExpressionUUID->"2a44fed9-049b-410e-9c18-f08f631a7576"],
Cell[602926, 13866, 193, 2, 81, "Output",ExpressionUUID->"65ccfafc-60c0-479c-9fa1-ed07417b340d"]
}, Open  ]],
Cell[603134, 13871, 1071, 31, 292, "Text",ExpressionUUID->"26908745-c722-43f9-9f39-5b6aeaea4f8a"],
Cell[CellGroupData[{
Cell[604230, 13906, 694, 22, 115, "Input",ExpressionUUID->"f637c60f-505c-493f-87c0-d56e35a8c173"],
Cell[604927, 13930, 199, 4, 81, "Output",ExpressionUUID->"75bea697-c767-49e1-a2f4-184614ad1cc6"]
}, Open  ]],
Cell[605141, 13937, 641, 16, 247, "Text",ExpressionUUID->"b6c51e4e-3279-46d8-9720-2c0cd0e66cdc"],
Cell[CellGroupData[{
Cell[605807, 13957, 470, 14, 136, "Input",ExpressionUUID->"23c57fa5-b8a7-4d4a-85bb-e8875adceb3c"],
Cell[606280, 13973, 299, 8, 107, "Output",ExpressionUUID->"28f57425-7855-4864-9e67-6c1f0dd9915f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606616, 13986, 503, 15, 138, "Input",ExpressionUUID->"ba23f1a6-26fb-4b4a-8c2d-6142351f1a02"],
Cell[607122, 14003, 173, 3, 101, "Output",ExpressionUUID->"af86b7c4-8f30-406d-85ae-5d65ec995666"]
}, Open  ]],
Cell[607310, 14009, 294, 4, 67, "Text",ExpressionUUID->"58f61c96-0a3f-4016-9028-db62f9b57b27"],
Cell[CellGroupData[{
Cell[607629, 14017, 605, 17, 133, "Input",ExpressionUUID->"a5ef06de-51db-40a6-ae26-fb3b1f359247"],
Cell[608237, 14036, 299, 8, 107, "Output",ExpressionUUID->"f6a160eb-50aa-4ad0-8e1d-6939ac1f090f"],
Cell[608539, 14046, 171, 3, 101, "Output",ExpressionUUID->"d7f6ecce-1ff0-4fe7-847c-2de1612b8783"]
}, Open  ]],
Cell[608725, 14052, 446, 11, 112, "Text",ExpressionUUID->"f372ddc2-9887-486c-a70e-083daaf6a361"],
Cell[CellGroupData[{
Cell[609196, 14067, 563, 17, 81, "Input",ExpressionUUID->"3e90d977-a4c1-4219-a5f4-488b80568cb7"],
Cell[609762, 14086, 560, 17, 119, "Output",ExpressionUUID->"f303e7cf-e3a4-4cc9-84fe-48d9e94149e0"]
}, Open  ]],
Cell[610337, 14106, 470, 11, 202, "Text",ExpressionUUID->"61c2b129-7fe5-4f7b-b2a2-786b41647645"],
Cell[CellGroupData[{
Cell[610832, 14121, 700, 20, 123, "Input",ExpressionUUID->"281b272a-0ded-451b-9fc7-5a621f46ff70"],
Cell[611535, 14143, 183, 3, 81, "Output",ExpressionUUID->"f73008a0-532e-4b86-a3a9-3c9fab1d6b51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611755, 14151, 622, 24, 167, "Subsubsection",ExpressionUUID->"d3e37167-f46e-4bcc-b15d-2b43259fe8ac"],
Cell[612380, 14177, 426, 9, 164, "Input",ExpressionUUID->"91719c47-31a7-4a8c-99b6-aa904ba4ffe3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612843, 14191, 248, 9, 65, "Subsubsection",ExpressionUUID->"5b16b9f8-52a5-4083-a921-71e91d8e1253"],
Cell[CellGroupData[{
Cell[613116, 14204, 152, 3, 81, "Input",ExpressionUUID->"0f5e8ed7-5453-42f6-a9fb-ea1f1d7bea53"],
Cell[613271, 14209, 168, 2, 81, "Output",ExpressionUUID->"d93231b2-5bae-4d81-8ffe-6717e380d2d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[613488, 14217, 398, 18, 116, "Subsubsection",ExpressionUUID->"e7fce5b0-d494-4647-80f2-599f4017ea9d"],
Cell[613889, 14237, 273, 6, 81, "Input",ExpressionUUID->"7977b35a-6f1e-431d-9f0b-bf1eb69b93b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614199, 14248, 372, 12, 116, "Subsubsection",ExpressionUUID->"fd2e86d1-2277-4821-9684-12cfc60eb1ba"],
Cell[CellGroupData[{
Cell[614596, 14264, 391, 11, 81, "Input",ExpressionUUID->"22892f4c-0ba2-4edb-a9c5-c33e796e37b9"],
Cell[614990, 14277, 258, 5, 81, "Output",ExpressionUUID->"cf175ac9-1217-4514-bd04-44667de6637a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[615297, 14288, 605, 17, 218, "Subsubsection",ExpressionUUID->"b1639bc9-9681-47e8-acf1-10137472f2de"],
Cell[CellGroupData[{
Cell[615927, 14309, 492, 14, 81, "Input",ExpressionUUID->"b1218e37-65f9-4fdd-9368-cfb230e228f2"],
Cell[616422, 14325, 278, 6, 81, "Output",ExpressionUUID->"54640c4e-c59a-4f14-bfb2-bc3b8868bcef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[616749, 14337, 868, 26, 218, "Subsubsection",ExpressionUUID->"ef3b4e27-46e7-4094-ad23-262ec4b70772"],
Cell[CellGroupData[{
Cell[617642, 14367, 643, 18, 123, "Input",ExpressionUUID->"25172868-4383-4a9c-8e08-ff46c4e48270"],
Cell[618288, 14387, 1692, 34, 260, "Output",ExpressionUUID->"dcec9262-fe84-498d-b329-8e1e39661dd1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[620029, 14427, 887, 30, 167, "Subsubsection",ExpressionUUID->"0f381184-7707-4142-b138-7b5b900e542b"],
Cell[CellGroupData[{
Cell[620941, 14461, 420, 10, 87, "Input",ExpressionUUID->"e7ee0c13-3e6e-49ce-be73-0451304327de"],
Cell[621364, 14473, 48105, 837, 460, "Output",ExpressionUUID->"1a2a0ed1-f2f9-466b-a5bb-dc3a435665a6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[669518, 15316, 431, 16, 65, "Subsubsection",ExpressionUUID->"f2edd7ef-aa49-4b00-b6fb-3897fab7b4ad"],
Cell[CellGroupData[{
Cell[669974, 15336, 286, 6, 87, "Input",ExpressionUUID->"632d75ee-0106-4370-8b5f-758a945e9584"],
Cell[670263, 15344, 293, 8, 101, "Output",ExpressionUUID->"a7aaa618-45b8-4d09-b162-cfb08a1ae273"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[670605, 15358, 441, 15, 116, "Subsubsection",ExpressionUUID->"a802248f-e9b2-42e7-a366-dc9e9e5ff1b2"],
Cell[CellGroupData[{
Cell[671071, 15377, 370, 9, 87, "Input",ExpressionUUID->"7fefb4ac-0187-4dad-8cf7-e626ad6e5047"],
Cell[671444, 15388, 153, 2, 81, "Output",ExpressionUUID->"9591c564-88d9-4c9e-b665-4292a2f1b8de"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671646, 15396, 568, 16, 116, "Subsubsection",ExpressionUUID->"e513ae7f-89ba-4930-80a5-84e5cb7d32e5"],
Cell[CellGroupData[{
Cell[672239, 15416, 553, 14, 133, "Input",ExpressionUUID->"e0623328-7d6c-4f8c-9006-8b95172925ae"],
Cell[672795, 15432, 1726, 34, 260, "Output",ExpressionUUID->"31a117dd-b786-4149-ad99-d0434081bf88"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[674570, 15472, 578, 17, 121, "Subsection",ExpressionUUID->"858735a3-e8f3-4d2f-8b0a-1498388ece9a"],
Cell[CellGroupData[{
Cell[675173, 15493, 439, 11, 87, "Input",ExpressionUUID->"112ce4ec-dbd9-4d4b-b222-11c83873a1c5"],
Cell[675615, 15506, 398, 11, 110, "Output",ExpressionUUID->"22bc1b03-15c5-4874-b581-bd0a53a5790b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[676074, 15524, 318, 5, 138, "Section",ExpressionUUID->"ff493579-76d9-4bfa-846c-decae025a8c1"],
Cell[676395, 15531, 1297, 43, 337, "Text",ExpressionUUID->"d585f094-6808-49d1-a780-1823dde9d243"],
Cell[677695, 15576, 334, 10, 81, "Input",ExpressionUUID->"caad5cce-8dab-4167-874e-294cec090b38"],
Cell[678032, 15588, 301, 6, 112, "Text",ExpressionUUID->"52d60dc0-12af-408a-ba7a-405e8fb51263"],
Cell[CellGroupData[{
Cell[678358, 15598, 1467, 39, 275, "Subsubsection",ExpressionUUID->"8b745e95-709e-4609-9b07-cf7e010be294"],
Cell[CellGroupData[{
Cell[679850, 15641, 1106, 30, 179, "Input",ExpressionUUID->"4be32b0c-d985-464b-8574-7bc017d90c8e"],
Cell[680959, 15673, 665, 15, 81, "Output",ExpressionUUID->"f4517240-26fe-4b33-a4bf-9cdb3ee0587f"],
Cell[681627, 15690, 492, 9, 81, "Output",ExpressionUUID->"ad22db9c-4fbd-48bb-b2e2-9766fadc2da9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[682168, 15705, 170, 3, 67, "Subsection",ExpressionUUID->"4ed7f8c2-7ca8-42a0-abd9-c958b9af80cf"],
Cell[682341, 15710, 1333, 47, 337, "Text",ExpressionUUID->"89a78665-8afc-4fea-a18b-d00ef6d2ab4b"],
Cell[CellGroupData[{
Cell[683699, 15761, 1585, 51, 203, "Input",ExpressionUUID->"13b2cb7b-c47b-40ad-9fee-aafea51b63e0"],
Cell[685287, 15814, 605, 18, 101, "Output",ExpressionUUID->"c3fe7f48-0399-4e71-b641-82920398cdb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685929, 15837, 1284, 32, 371, "Subsubsection",ExpressionUUID->"801ce721-0332-427b-8d57-5d22f6f784ef"],
Cell[CellGroupData[{
Cell[687238, 15873, 1501, 48, 164, "Input",ExpressionUUID->"b35a07d6-0c53-4189-86c1-1c43d86b3f3f"],
Cell[688742, 15923, 353, 9, 87, "Output",ExpressionUUID->"749efa10-b5c2-43f3-8a9f-6daf2a7027a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689132, 15937, 860, 23, 179, "Input",ExpressionUUID->"7e027a5b-d5ae-45a8-80f7-bf8f92f3d8c5"],
Cell[689995, 15962, 403, 10, 87, "Output",ExpressionUUID->"89e30ae2-79c7-443c-8e9d-6f90081b6941"],
Cell[690401, 15974, 11357, 233, 453, "Output",ExpressionUUID->"5eff4159-1727-44b6-8da3-c1415e1ecc33"],
Cell[701761, 16209, 1653, 33, 312, "Output",ExpressionUUID->"50e65274-34ff-4668-8d74-6e1d2f588f7d"]
}, Open  ]],
Cell[703429, 16245, 155, 3, 67, "Text",ExpressionUUID->"2292ecbd-60ac-4ab8-aead-249009664862"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

